{"version":3,"file":"main.0b615716.js","sources":["../../src/pages/home/feed-tags.component.ts","../../src/pages/home/feed-toggle.component.ts","../../src/pages/home/feed.component.ts","../../src/pages/home/home.component.ts","../../src/pages/home/main.ts"],"sourcesContent":["import { HandleNavLinks, Navigation, Page } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { FeedService } from '../../core/feed';\nimport { PageFeedParam } from './page-feed-param';\n\n@Component(\n    ['feed-tags', Conduit__NS],\n    HandleNavLinks(),\n)\nexport class FeedTagsComponent {\n\n  @StateProperty()\n  private tags: string[] = [];\n\n  @StateProperty()\n  private page?: Page;\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const feedService = this._context.get(FeedService);\n    const navigation = this._context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.tillOff(supply)(page => this.page = page);\n      feedService.tags().tillOff(supply)((...tags) => this.tags = tags);\n    });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const range = document.createRange();\n    const { contentRoot }: { contentRoot: Element } = this._context;\n\n    range.selectNodeContents(contentRoot);\n    range.setStartAfter(contentRoot.childNodes[contentRoot.childNodes.length - 1]);\n\n    return () => {\n      range.deleteContents();\n      if (!this.page) {\n        return;\n      }\n\n      const navigation = this._context.get(Navigation);\n      const fragment = document.createDocumentFragment();\n      const request = this.page.get(PageFeedParam);\n\n      this.tags.forEach(tag => {\n\n        const target = navigation.with(PageFeedParam, { ...request, tag, offset: 0 }).pretend();\n\n        if (target) {\n\n          const a = fragment.appendChild(document.createElement('a'));\n\n          a.href = target.url.href;\n          a.innerText = tag;\n        }\n      });\n\n      range.insertNode(fragment);\n    };\n  }\n\n}\n","import { ActivateNavLink, HandleNavLinks, Navigation } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext } from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { afterAll } from 'fun-events';\nimport { Conduit__NS } from '../../core';\nimport { AuthService } from '../../core/auth';\nimport { PageFeedParam } from './page-feed-param';\n\n@Component(\n    ['feed-toggle', Conduit__NS],\n    ActivateNavLink({ active: 'active' }),\n    HandleNavLinks(),\n)\nexport class FeedToggleComponent {\n\n  constructor(context: ComponentContext) {\n\n    const { document } = context.get(BootstrapWindow);\n    const navigation = context.get(Navigation);\n    const authService = context.get(AuthService);\n\n    context.whenOn(supply => {\n      afterAll({\n        auth: authService.authentication,\n        page: navigation,\n      }).tillOff(supply)(\n          ({\n            auth: [{ token }],\n            page: [page],\n          }) => {\n\n            const { url } = page;\n            const baseURL = new URL(document.baseURI);\n\n            if (url.pathname !== baseURL.pathname) {\n              return; // Not a home page\n            }\n\n            const { feed } = page.get(PageFeedParam);\n\n            if (feed !== '/personal-feed') {\n              return; // Global feed\n            }\n            if (!token /* not authenticated */) {\n              // Redirect to global feed\n              navigation.with(PageFeedParam, {}).replace().catch(noop);\n            }\n          },\n      );\n    });\n  }\n\n}\n","import { Navigation } from '@wesib/generic';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { FeedRequest } from '../../core/feed';\nimport { PageFeedParam } from './page-feed-param';\nimport { RenderFeed } from './render-feed.decorator';\n\n@Component(['feed', Conduit__NS])\nexport class FeedComponent {\n\n  @RenderFeed()\n  request: FeedRequest = {};\n\n  constructor(context: ComponentContext) {\n\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n      navigation.read.tillOff(supply)(page => {\n        this.request = page.get(PageFeedParam);\n      });\n    });\n  }\n\n}\n","import { PageHashURLSupport } from '@wesib/generic';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { FeedSupport } from '../../core/feed';\nimport { LoaderComponent } from '../../core/loader';\nimport { FeedTagsComponent } from './feed-tags.component';\nimport { FeedToggleComponent } from './feed-toggle.component';\nimport { FeedComponent } from './feed.component';\n\n@Component(\n    ['home', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          FeedSupport,\n          FeedComponent,\n          FeedTagsComponent,\n          FeedToggleComponent,\n          LoaderComponent,\n          PageHashURLSupport,\n        ],\n      },\n    },\n)\nexport class HomeComponent {\n}\n","import { conduitContext } from '../../core/main';\nimport { HomeComponent } from './home.component';\n\nconduitContext.load(HomeComponent);\n"],"names":["FeedTagsComponent","[object Object]","_context","this","feedService","get","FeedService","navigation","Navigation","whenOn","supply","read","tillOff","page","tags","document","BootstrapWindow","range","createRange","contentRoot","selectNodeContents","setStartAfter","childNodes","length","deleteContents","fragment","createDocumentFragment","request","PageFeedParam","forEach","tag","target","with","offset","pretend","a","appendChild","createElement","href","url","innerText","insertNode","__decorate","StateProperty","Render","Component","Conduit__NS","HandleNavLinks","FeedToggleComponent","context","authService","AuthService","afterAll","auth","authentication","token","baseURL","URL","baseURI","pathname","feed","replace","catch","noop","ActivateNavLink","active","FeedComponent","RenderFeed","HomeComponent","feature","needs","FeedSupport","LoaderComponent","PageHashURLSupport","conduitContext","load"],"mappings":"ylBAUA,IAAaA,EAAb,MAQEC,YAA6BC,GAAAC,cAAAD,EALrBC,UAAiB,GAOvB,MAAMC,EAAcD,KAAKD,SAASG,IAAIC,GAChCC,EAAaJ,KAAKD,SAASG,IAAIG,GAErCN,EAASO,OAAOC,IACdH,EAAWI,KAAKC,QAAQF,EAAxBH,CAAgCM,GAAQV,KAAKU,KAAOA,GACpDT,EAAYU,OAAOF,QAAQF,EAA3BN,CAAmC,IAAIU,IAASX,KAAKW,KAAOA,KAKhEb,SAEE,MAAMc,SAAEA,GAAaZ,KAAKD,SAASG,IAAIW,GACjCC,EAAQF,EAASG,eACjBC,YAAEA,GAA0ChB,KAAKD,SAKvD,OAHAe,EAAMG,mBAAmBD,GACzBF,EAAMI,cAAcF,EAAYG,WAAWH,EAAYG,WAAWC,OAAS,IAEpE,KAEL,GADAN,EAAMO,kBACDrB,KAAKU,KACR,OAGF,MAAMN,EAAaJ,KAAKD,SAASG,IAAIG,GAC/BiB,EAAWV,EAASW,yBACpBC,EAAUxB,KAAKU,KAAKR,IAAIuB,GAE9BzB,KAAKW,KAAKe,QAAQC,IAEhB,MAAMC,EAASxB,EAAWyB,KAAKJ,iCAAoBD,IAASG,IAAAA,EAAKG,OAAQ,KAAKC,UAE9E,GAAIH,EAAQ,CAEV,MAAMI,EAAIV,EAASW,YAAYrB,EAASsB,cAAc,MAEtDF,EAAEG,KAAOP,EAAOQ,IAAID,KACpBH,EAAEK,UAAYV,KAIlBb,EAAMwB,WAAWhB,MAjDrBiB,GADCC,gCAIDD,GADCC,gCAeDD,GADCE,gCAnBU5C,KAJZ6C,EACG,CAAC,YAAaC,GACdC,MAES/C,GCGb,IAAagD,EAAb,MAEE/C,YAAYgD,GAEV,MAAMlC,SAAEA,GAAakC,EAAQ5C,IAAIW,GAC3BT,EAAa0C,EAAQ5C,IAAIG,GACzB0C,EAAcD,EAAQ5C,IAAI8C,GAEhCF,EAAQxC,OAAOC,IACb0C,EAAS,CACPC,KAAMH,EAAYI,eAClBzC,KAAMN,IACLK,QAAQF,EAHX0C,CAII,EACEC,OAASE,MAAAA,IACT1C,MAAOA,OAGP,MAAM0B,IAAEA,GAAQ1B,EACV2C,EAAU,IAAIC,IAAI1C,EAAS2C,SAEjC,GAAInB,EAAIoB,WAAaH,EAAQG,SAC3B,OAGF,MAAMC,KAAEA,GAAS/C,EAAKR,IAAIuB,GAEb,mBAATgC,IAGCL,GAEHhD,EAAWyB,KAAKJ,EAAe,IAAIiC,UAAUC,MAAMC,UAhCpDf,KALZH,EACG,CAAC,cAAeC,GAChBkB,EAAgB,CAAEC,OAAQ,WAC1BlB,MAESC,GCLb,IAAakB,EAAb,MAKEjE,YAAYgD,GAFZ9C,aAAuB,GAIrB,MAAMI,EAAa0C,EAAQ5C,IAAIG,GAE/ByC,EAAQxC,OAAOC,IACbH,EAAWI,KAAKC,QAAQF,EAAxBH,CAAgCM,IAC9BV,KAAKwB,QAAUd,EAAKR,IAAIuB,SAR9Bc,GADCyB,mCAFUD,KADZrB,EAAU,CAAC,OAAQC,KACPoB,GCgBb,IAAaE,EAAb,QAAaA,KAfZvB,EACG,CAAC,OAAQC,GACT,CACEuB,QAAS,CACPC,MAAO,CACLC,EACAL,EACAlE,EACAgD,EACAwB,EACAC,OAKGL,GCrBbM,EAAeC,KAAKP"}