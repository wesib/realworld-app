{"version":3,"file":"main.de059db5.js","sources":["../../src/pages/editor/article-body.component.ts","../../src/pages/editor/article-description.component.ts","../../src/pages/editor/article-tag-editor.component.ts","../../src/pages/editor/article-title.component.ts","../../src/pages/editor/article-editor.component.ts","../../src/pages/editor/main.ts"],"sourcesContent":["import { inText, InValidation, requirePresent } from '@frontmeans/input-aspects';\nimport { SetInputName } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { UseConduitInput } from '../../core/input';\n\n@Component(\n    ['article-body', Conduit__NS],\n    UseConduitInput({\n      select: 'textarea',\n      makeControl({ node: { element }, aspects }) {\n        return inText(element, { aspects })\n            .setup(InValidation, validation => validation.by(requirePresent()));\n      },\n    }),\n    SetInputName('body'),\n)\nexport class ArticleBodyComponent {\n\n}\n","import { inText, InValidation, requirePresent } from '@frontmeans/input-aspects';\nimport { SetInputName } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { UseConduitInput } from '../../core/input';\n\n@Component(\n    ['article-description', Conduit__NS],\n    UseConduitInput({\n      makeControl({ node: { element }, aspects }) {\n        return inText(element, { aspects })\n            .setup(InValidation, validation => validation.by(requirePresent()));\n      },\n    }),\n    SetInputName('description'),\n)\nexport class ArticleDescriptionComponent {\n}\n","import { supplyOn } from '@proc7ts/fun-events';\nimport { SetInputName } from '@wesib/generic/input';\nimport { BootstrapWindow, Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { FeedService, FeedSupport } from '../../core/feed';\nimport { UseConduitInput } from '../../core/input';\nimport { inMultiInput, MultiInputComponent } from '../../reusable';\n\n@Component(\n    ['article-tag-editor', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          FeedSupport,\n          MultiInputComponent,\n        ],\n      },\n    },\n    UseConduitInput({\n      select: 'conduit-multi-input',\n      makeControl({ node: { element } }) {\n        return inMultiInput(element);\n      },\n    }),\n    SetInputName('tagList'),\n)\nexport class ArticleTagEditorComponent {\n\n  @StateProperty()\n  private tags: string[] = [];\n\n  constructor(private readonly _context: ComponentContext) {\n    _context.get(FeedService).tags.do(supplyOn(_context))(\n        (...tags) => this.tags = tags,\n    ).whenOff(\n        () => this.tags = [],\n    );\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const { element }: { element: Element } = this._context;\n    const datalist = element.querySelector('datalist')!;\n\n    return () => {\n      datalist.innerHTML = '';\n      this.tags.forEach(tag => {\n\n        const option = datalist.appendChild(document.createElement('option'));\n\n        option.value = tag + ' ';\n      });\n    };\n  }\n\n}\n","import { inText, InValidation, requirePresent } from '@frontmeans/input-aspects';\nimport { SetInputName } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { UseConduitInput } from '../../core/input';\n\n@Component(\n    ['article-title', Conduit__NS],\n    UseConduitInput({\n      makeControl({ node: { element }, aspects }) {\n        return inText(element, { aspects })\n            .setup(InValidation, validation => validation.by(requirePresent()));\n      },\n    }),\n    SetInputName('title'),\n)\nexport class ArticleTitleComponent {\n\n}\n","import { InStatus, InSubmit, InSubmitError } from '@frontmeans/input-aspects';\nimport { afterAll, afterSent, afterThe, digAfter_, mapAfter_, supplyAfter } from '@proc7ts/fun-events';\nimport { HierarchyContext, Navigation, PageHashURLParam } from '@wesib/generic';\nimport { InputToForm, OnSubmit } from '@wesib/generic/input';\nimport { Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { ApiResponse, apiSubmit } from '../../core/api';\nimport { Article, ArticleService, ArticlesSupport, CreateArticleRequest } from '../../core/articles';\nimport { AuthService } from '../../core/auth';\nimport { FeedSupport } from '../../core/feed';\nimport { ConduitInputSupport, FillConduitForm } from '../../core/input';\nimport { LoadStatus, RenderLoader } from '../../core/loader';\nimport { noArticle, NoArticle } from '../article/current-article';\nimport { ArticleBodyComponent } from './article-body.component';\nimport { ArticleDescriptionComponent } from './article-description.component';\nimport { ArticleTagEditorComponent } from './article-tag-editor.component';\nimport { ArticleTitleComponent } from './article-title.component';\n\n@Component(\n    ['article-editor', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleBodyComponent,\n          ArticleDescriptionComponent,\n          ArticleTagEditorComponent,\n          ArticleTitleComponent,\n          ArticlesSupport,\n          ConduitInputSupport,\n          FeedSupport,\n        ],\n      },\n    },\n    FillConduitForm<CreateArticleRequest>({\n      emptyModel: emptyArticleRequest(),\n    }),\n)\nexport class ArticleEditorComponent {\n\n  private readonly _articleService: ArticleService;\n  private readonly _navigation: Navigation;\n\n  @RenderLoader()\n  loadStatus?: LoadStatus;\n\n  @StateProperty()\n  article: Article | NoArticle = noArticle;\n\n  constructor(private readonly _context: ComponentContext) {\n    this._navigation = _context.get(Navigation);\n    this._articleService = _context.get(ArticleService);\n\n    const authService = _context.get(AuthService);\n    const hierarchy = _context.get(HierarchyContext);\n\n    _context.supply.whenOff(() => {\n      this.loadStatus = undefined;\n      this.article = noArticle;\n    });\n    _context.whenConnected(() => {\n      this._navigation.read.do(\n          supplyAfter(_context),\n          mapAfter_(page => decodeURIComponent(\n              page.get(PageHashURLParam).pathname.substring(1),\n          )),\n          digAfter_(slug => afterAll({\n            user: authService.requireUser,\n            loaded: slug\n                ? afterSent<[ApiResponse.Any<Article>?]>(\n                    this._articleService.article(slug),\n                    () => [],\n                )\n                : afterThe<[ApiResponse.Any<Article>]>({ ok: true }),\n            form: hierarchy.get(InputToForm),\n          })),\n      )(({\n        user: [user],\n        loaded: [loaded],\n        form: [{ control: form }],\n      }) => {\n        if (!user.username) {\n          this.loadStatus = user.failure ? { ok: false, errors: user.failure.errors } : undefined;\n          return;\n        }\n        if (!loaded) {\n          this.loadStatus = undefined;\n          return;\n        }\n        if (!loaded.ok) {\n          this.loadStatus = { ok: false, errors: loaded.errors };\n          return;\n        }\n        this.loadStatus = loaded;\n        this.article = loaded.body ?? noArticle;\n        if (form) {\n          form.it = loaded.body ?? emptyArticleRequest();\n        }\n      });\n    });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { element }: { element: Element } = this._context;\n    const button = element.querySelector('button')!;\n\n    return () => {\n      button.innerText = this.article.slug ? 'Update Post' : 'Create Post';\n    };\n  }\n\n  @OnSubmit()\n  submit({ control }: InputToForm<CreateArticleRequest>): void {\n    control.aspect(InStatus).markEdited();\n    control.aspect(InSubmit)\n        .submit(\n            request => apiSubmit<Article>(\n                this.article.slug\n                    ? this._articleService.updateArticle(this.article.slug, request)\n                    : this._articleService.createArticle(request),\n            ),\n        )\n        .then(article => this._navigation\n            .with(PageHashURLParam, encodeURIComponent(article.slug))\n            .open('article/'))\n        .catch(error => {\n          if (error instanceof InSubmitError) {\n            console.error('Failed to save article', ...error.errors);\n          } else {\n            console.error('Failed to save article', error);\n          }\n        });\n  }\n\n}\n\nfunction emptyArticleRequest(): CreateArticleRequest {\n  return {\n    title: '',\n    description: '',\n    body: '',\n    tagList: [],\n  };\n}\n","import { conduitContext } from '../../core/main';\nimport { ArticleEditorComponent } from './article-editor.component';\n\nconduitContext.load(ArticleEditorComponent);\n"],"names":["ArticleBodyComponent","Component","Conduit__NS","UseConduitInput","select","makeControl","node","element","aspects","inText","setup","InValidation","validation","by","requirePresent","SetInputName","ArticleDescriptionComponent","ArticleTagEditorComponent","[object Object]","_context","this","get","FeedService","tags","do","supplyOn","whenOff","document","BootstrapWindow","datalist","querySelector","innerHTML","forEach","tag","appendChild","createElement","value","__decorate","StateProperty","Render","feature","needs","FeedSupport","MultiInputComponent","inMultiInput","ArticleTitleComponent","ArticleEditorComponent","noArticle","_navigation","Navigation","_articleService","ArticleService","authService","AuthService","hierarchy","HierarchyContext","supply","loadStatus","undefined","article","whenConnected","read","supplyAfter","mapAfter_","page","decodeURIComponent","PageHashURLParam","pathname","substring","digAfter_","slug","afterAll","user","requireUser","loaded","afterSent","afterThe","ok","form","InputToForm","control","username","body","it","title","description","tagList","errors","failure","button","innerText","aspect","InStatus","markEdited","InSubmit","submit","request","apiSubmit","updateArticle","createArticle","then","with","encodeURIComponent","open","catch","error","InSubmitError","console","RenderLoader","OnSubmit","ArticlesSupport","ConduitInputSupport","FillConduitForm","emptyModel","conduitContext","load"],"mappings":"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"}