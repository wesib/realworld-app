{"version":3,"file":"main.64575e0e.js","sources":["../../src/pages/editor/article-body.component.ts","../../src/pages/editor/article-description.component.ts","../../src/pages/editor/article-tag-editor.component.ts","../../src/pages/editor/article-title.component.ts","../../src/pages/editor/article-editor.component.ts","../../src/pages/editor/main.ts"],"sourcesContent":["import { SetInputName } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { inText, InValidation, requirePresent } from 'input-aspects';\nimport { Conduit__NS } from '../../core';\nimport { UseConduitInput } from '../../core/input';\n\n@Component(\n    ['article-body', Conduit__NS],\n    UseConduitInput({\n      select: 'textarea',\n      makeControl({ node: { element }, aspects }) {\n        return inText(element, { aspects })\n            .setup(InValidation, validation => validation.by(requirePresent()));\n      },\n    }),\n    SetInputName('body'),\n)\nexport class ArticleBodyComponent {\n\n}\n","import { SetInputName } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { inText, InValidation, requirePresent } from 'input-aspects';\nimport { Conduit__NS } from '../../core';\nimport { UseConduitInput } from '../../core/input';\n\n@Component(\n    ['article-description', Conduit__NS],\n    UseConduitInput({\n      makeControl({ node: { element }, aspects }) {\n        return inText(element, { aspects })\n            .setup(InValidation, validation => validation.by(requirePresent()));\n      },\n    }),\n    SetInputName('description'),\n)\nexport class ArticleDescriptionComponent {\n}\n","import { SetInputName } from '@wesib/generic/input';\nimport { BootstrapWindow, Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { FeedService, FeedSupport } from '../../core/feed';\nimport { UseConduitInput } from '../../core/input';\nimport { inMultiInput, MultiInputComponent } from '../../reusable';\n\n@Component(\n    ['article-tag-editor', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          FeedSupport,\n          MultiInputComponent,\n        ],\n      },\n    },\n    UseConduitInput({\n      select: 'conduit-multi-input',\n      makeControl({ node: { element } }) {\n        return inMultiInput(element);\n      },\n    }),\n    SetInputName('tagList'),\n)\nexport class ArticleTagEditorComponent {\n\n  @StateProperty()\n  private tags: string[] = [];\n\n  constructor(private readonly _context: ComponentContext) {\n    _context.whenOn(supply => {\n      _context.get(FeedService)\n          .tags()\n          .tillOff(supply)\n          .to((...tags) => this.tags = tags)\n          .whenOff(() => this.tags = []);\n    });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const { element }: { element: Element } = this._context;\n    const datalist = element.querySelector('datalist')!;\n\n    return () => {\n      datalist.innerHTML = '';\n      this.tags.forEach(tag => {\n\n        const option = datalist.appendChild(document.createElement('option'));\n\n        option.value = tag + ' ';\n      });\n    };\n  }\n\n}\n","import { SetInputName } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { inText, InValidation, requirePresent } from 'input-aspects';\nimport { Conduit__NS } from '../../core';\nimport { UseConduitInput } from '../../core/input';\n\n@Component(\n    ['article-title', Conduit__NS],\n    UseConduitInput({\n      makeControl({ node: { element }, aspects }) {\n        return inText(element, { aspects })\n            .setup(InValidation, validation => validation.by(requirePresent()));\n      },\n    }),\n    SetInputName('title'),\n)\nexport class ArticleTitleComponent {\n\n}\n","import { HierarchyContext, Navigation, PageHashURLParam } from '@wesib/generic';\nimport { InputToForm, OnSubmit } from '@wesib/generic/input';\nimport { Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { afterAll, afterSent, afterThe, nextAfterEvent } from 'fun-events';\nimport { InStatus, InSubmit, InSubmitError } from 'input-aspects';\nimport { Conduit__NS } from '../../core';\nimport { ApiResponse, apiSubmit } from '../../core/api';\nimport { Article, ArticleService, ArticlesSupport, CreateArticleRequest } from '../../core/articles';\nimport { AuthService } from '../../core/auth';\nimport { FeedSupport } from '../../core/feed';\nimport { ConduitInputSupport, FillConduitForm } from '../../core/input';\nimport { LoadStatus, RenderLoader } from '../../core/loader';\nimport { noArticle, NoArticle } from '../article/current-article';\nimport { ArticleBodyComponent } from './article-body.component';\nimport { ArticleDescriptionComponent } from './article-description.component';\nimport { ArticleTagEditorComponent } from './article-tag-editor.component';\nimport { ArticleTitleComponent } from './article-title.component';\n\n@Component(\n    ['article-editor', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleBodyComponent,\n          ArticleDescriptionComponent,\n          ArticleTagEditorComponent,\n          ArticleTitleComponent,\n          ArticlesSupport,\n          ConduitInputSupport,\n          FeedSupport,\n        ],\n      },\n    },\n    FillConduitForm<CreateArticleRequest>({\n      emptyModel: emptyArticleRequest(),\n    }),\n)\nexport class ArticleEditorComponent {\n\n  private readonly _articleService: ArticleService;\n  private readonly _navigation: Navigation;\n\n  @RenderLoader()\n  loadStatus?: LoadStatus;\n\n  @StateProperty()\n  article: Article | NoArticle = noArticle;\n\n  constructor(private readonly _context: ComponentContext) {\n    this._navigation = _context.get(Navigation);\n    this._articleService = _context.get(ArticleService);\n\n    const authService = _context.get(AuthService);\n    const hierarchy = _context.get(HierarchyContext);\n\n    _context.whenOn(supply => {\n      supply.whenOff(() => {\n        this.loadStatus = undefined;\n        this.article = noArticle;\n      });\n\n      this._navigation.read().tillOff(supply).keepThru_(\n          page => decodeURIComponent(\n              page.get(PageHashURLParam).pathname.substring(1),\n          ),\n          slug => nextAfterEvent(\n              afterAll({\n                user: authService.requireUser(),\n                loaded: slug\n                    ? afterSent<[ApiResponse.Any<Article>?]>(\n                        this._articleService.article(slug),\n                        () => [],\n                    )\n                    : afterThe<[ApiResponse.Any<Article>]>({ ok: true }),\n                form: hierarchy.get(InputToForm),\n              }),\n          ),\n      ).to(\n          ({\n            user: [user],\n            loaded: [loaded],\n            form: [{ control: form }],\n          }) => {\n            if (!user.username) {\n              this.loadStatus = user.failure ? { ok: false, errors: user.failure.errors } : undefined;\n              return;\n            }\n            if (!loaded) {\n              this.loadStatus = undefined;\n              return;\n            }\n            if (!loaded.ok) {\n              this.loadStatus = { ok: false, errors: loaded.errors };\n              return;\n            }\n            this.loadStatus = loaded;\n            this.article = loaded.body ?? noArticle;\n            if (form) {\n              form.it = loaded.body ?? emptyArticleRequest();\n            }\n          },\n      );\n    });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { element }: { element: Element } = this._context;\n    const button = element.querySelector('button')!;\n\n    return () => {\n      button.innerText = this.article.slug ? 'Update Post' : 'Create Post';\n    };\n  }\n\n  @OnSubmit()\n  submit({ control }: InputToForm<CreateArticleRequest>): void {\n    control.aspect(InStatus).markEdited();\n    control.aspect(InSubmit)\n        .submit(\n            request => apiSubmit<Article>(\n                this.article.slug\n                    ? this._articleService.updateArticle(this.article.slug, request)\n                    : this._articleService.createArticle(request),\n            ),\n        )\n        .then(article => this._navigation\n            .with(PageHashURLParam, encodeURIComponent(article.slug))\n            .open('article/'))\n        .catch(error => {\n          if (error instanceof InSubmitError) {\n            console.error('Failed to save article', ...error.errors);\n          } else {\n            console.error('Failed to save article', error);\n          }\n        });\n  }\n\n}\n\nfunction emptyArticleRequest(): CreateArticleRequest {\n  return {\n    title: '',\n    description: '',\n    body: '',\n    tagList: [],\n  };\n}\n","import { conduitContext } from '../../core/main';\nimport { ArticleEditorComponent } from './article-editor.component';\n\nconduitContext.load(ArticleEditorComponent);\n"],"names":["ArticleBodyComponent","Component","Conduit__NS","UseConduitInput","select","makeControl","node","element","aspects","inText","setup","InValidation","validation","by","requirePresent","SetInputName","ArticleDescriptionComponent","ArticleTagEditorComponent","[object Object]","_context","this","whenOn","supply","get","FeedService","tags","tillOff","to","whenOff","document","BootstrapWindow","datalist","querySelector","innerHTML","forEach","tag","appendChild","createElement","value","__decorate","StateProperty","Render","feature","needs","FeedSupport","MultiInputComponent","inMultiInput","ArticleTitleComponent","ArticleEditorComponent","noArticle","_navigation","Navigation","_articleService","ArticleService","authService","AuthService","hierarchy","HierarchyContext","loadStatus","undefined","article","read","keepThru_","page","decodeURIComponent","PageHashURLParam","pathname","substring","slug","nextAfterEvent","afterAll","user","requireUser","loaded","afterSent","afterThe","ok","form","InputToForm","control","username","body","it","title","description","tagList","errors","failure","button","innerText","aspect","InStatus","markEdited","InSubmit","submit","request","apiSubmit","updateArticle","createArticle","then","with","encodeURIComponent","open","catch","error","InSubmitError","console","RenderLoader","OnSubmit","ArticlesSupport","ConduitInputSupport","FillConduitForm","emptyModel","conduitContext","load"],"mappings":"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"}