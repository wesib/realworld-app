{"version":3,"file":"main.00681533.js","sources":["../../src/pages/article/article-actions.component.ts","../../src/pages/article/comment-event.ts","../../src/pages/article/article-comment.component.ts","../../src/pages/article/article-comments.component.ts","../../src/pages/article/article-content.component.ts","../../src/pages/article/article-comment-text.component.ts","../../src/pages/article/new-article-comment.component.ts","../../src/pages/article/article.component.ts","../../src/pages/article/main.ts"],"sourcesContent":["import { BootstrapWindow, Component, ComponentContext, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { AuthService, AuthUser, notAuthenticated, NotAuthenticated } from '../../core/auth';\nimport { RenderHTML } from '../../reusable';\nimport { ArticleButtonsSupport } from './buttons';\nimport { DeletePostBtnComponent } from './buttons/delete-post-btn.component';\nimport { EditPostBtnComponent } from './buttons/edit-post-btn.component';\nimport { CurrentArticle, noArticle } from './current-article';\nimport { CurrentArticleShare } from './current-article.share';\n\n@Component(\n    ['article-actions', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleButtonsSupport,\n          DeletePostBtnComponent,\n          EditPostBtnComponent,\n        ],\n      },\n    },\n)\nexport class ArticleActionsComponent {\n\n  @StateProperty()\n  user: AuthUser | NotAuthenticated = notAuthenticated;\n\n  @StateProperty()\n  article: CurrentArticle = noArticle;\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const authService = _context.get(AuthService);\n\n    authService.user(user => {\n      this.user = user;\n    }).needs(_context).whenOff(() => {\n      this.user = notAuthenticated;\n    });\n    CurrentArticleShare.articleFor(_context)(article => {\n      this.article = article;\n    });\n  }\n\n  @RenderHTML()\n  render(): Node | undefined {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const fragment = document.createDocumentFragment();\n\n    if (this.article.slug && this.article.author.username === this.user.username) {\n\n      const editBtn = fragment.appendChild(document.createElement('conduit-edit-post-btn'));\n\n      editBtn.tabIndex = 0;\n\n      const deleteBtn = fragment.appendChild(document.createElement('conduit-delete-post-btn'));\n\n      deleteBtn.tabIndex = 0;\n    } else {\n\n      const followAuthorBtn = fragment.appendChild(document.createElement('conduit-follow-author-btn'));\n\n      followAuthorBtn.tabIndex = 0;\n\n      const favoritePostBtn = fragment.appendChild(document.createElement('conduit-favorite-post-btn'));\n\n      favoritePostBtn.innerText = 'Favorite Post';\n      favoritePostBtn.tabIndex = 0;\n    }\n\n    return fragment;\n  }\n\n}\n","import { Comment } from '../../core/comments';\n\nexport type CommentEventDetails =\n    | {\n  added?: undefined;\n  removed: number;\n} | {\n  added: Comment;\n  removed?: undefined;\n};\n\nexport class CommentEvent extends CustomEvent<CommentEventDetails> {\n}\n","import { DomEventDispatcher, stopDomEvents } from '@frontmeans/dom-events';\nimport { escapeHTML } from '@frontmeans/httongue';\nimport { InSubmit, inSubmitButton, InSubmitError } from '@frontmeans/input-aspects';\nimport { Share__symbol } from '@wesib/generic';\nimport { Form, FormShare } from '@wesib/generic/forms';\nimport { BootstrapWindow, Component, ComponentContext, DomProperty, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { apiSubmit } from '../../core/api';\nimport { AuthService, AuthUser, notAuthenticated, NotAuthenticated } from '../../core/auth';\nimport { Comment, CommentService } from '../../core/comments';\nimport { formatDate, RenderHTML } from '../../reusable';\nimport { CommentEvent } from './comment-event';\nimport { CurrentArticle, noArticle } from './current-article';\nimport { CurrentArticleShare } from './current-article.share';\n\nexport interface ArticleCommentEl extends HTMLElement {\n  articleComment?: Comment;\n}\n\n@Component(['article-comment', Conduit__NS])\nexport class ArticleCommentComponent {\n\n  @DomProperty()\n  articleComment?: Comment;\n\n  @StateProperty()\n  article: CurrentArticle = noArticle;\n\n  @StateProperty()\n  user: AuthUser | NotAuthenticated = notAuthenticated;\n\n  form?: Form;\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const authService = _context.get(AuthService);\n\n    authService.user(user => {\n      this.user = user;\n    }).needs(_context).whenOff(() => {\n      this.user = notAuthenticated;\n    });\n    CurrentArticleShare.articleFor(_context)(article => {\n      this.article = article;\n    });\n    FormShare[Share__symbol].valueFor(_context)((form?, _sharer?) => {\n      this.form = form;\n    });\n  }\n\n  @RenderHTML({ comment: 'COMMENT' })\n  render(): Node | undefined {\n\n    const comment = this.articleComment;\n\n    if (!comment) {\n      return;\n    }\n\n    const commentService = this._context.get(CommentService);\n    const { document } = this._context.get(BootstrapWindow);\n    const { author } = comment;\n    const authorLink = `profile/#/${encodeURIComponent(author.username)}`;\n    const authorImage = author.image ? `<img src=\"http://i.imgur.com/Qr71crq.jpg\" class=\"comment-author-img\" />` : '';\n    const date = formatDate(new Date(comment.createdAt));\n    const fragment = document.createDocumentFragment();\n    const cardBody = fragment.appendChild(document.createElement('div'));\n\n    cardBody.className = 'card-body';\n\n    const cardText = cardBody.appendChild(document.createElement('p'));\n\n    cardText.className = 'card-text';\n    cardText.innerText = comment.body;\n\n    const cardFooter = fragment.appendChild(document.createElement('div'));\n\n    cardFooter.className = 'card-footer';\n\n    cardFooter.innerHTML = `\n<a href=\"${authorLink}\" class=\"comment-author\">${authorImage}</a>\n<a href=\"${authorLink}\" class=\"comment-author\">${escapeHTML(author.username)}</a>\n<span class=\"date-posted\">${date}</span>`;\n\n    const form = this.form?.control;\n    const { slug } = this.article;\n\n    if (this.user.username === author.username && form && slug) {\n\n      const options = cardFooter.appendChild(document.createElement('span'));\n\n      options.className = 'mod-options';\n\n      const deleteBtn = options.appendChild(document.createElement('button'));\n\n      deleteBtn.type = 'button';\n      deleteBtn.className = 'btn btn-sm';\n      deleteBtn.innerHTML = '<i class=\"ion-trash-a\"></i>';\n      inSubmitButton(deleteBtn, { form });\n\n      new DomEventDispatcher(deleteBtn).on('click').do(stopDomEvents)(() => {\n        form.aspect(InSubmit)\n            .submit(() => apiSubmit(commentService.deleteComment(slug, comment.id)))\n            .then(() => {\n              this._context.dispatchEvent(new CommentEvent(\n                  'conduit:comment',\n                  {\n                    bubbles: true,\n                    detail: { removed: comment.id },\n                  },\n              ));\n            })\n            .catch(e => {\n              if (e instanceof InSubmitError) {\n                console.error('Failed to remove comment', ...e.errors);\n              } else {\n                console.error('Failed to remove comment', e);\n              }\n            });\n      });\n    }\n\n    return fragment;\n  }\n\n}\n","import { inFormElement, inGroup } from '@frontmeans/input-aspects';\nimport { digOn_ } from '@proc7ts/fun-events';\nimport { Form, SharedForm } from '@wesib/generic/forms';\nimport { BootstrapWindow, Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { ApiResponse } from '../../core/api';\nimport { Comment, CommentList, CommentService, CommentsSupport } from '../../core/comments';\nimport { ConduitFormsSupport } from '../../core/forms';\nimport { RenderLoader } from '../../core/loader';\nimport { ArticleCommentComponent, ArticleCommentEl } from './article-comment.component';\nimport { CommentEvent } from './comment-event';\nimport { CurrentArticle, noArticle } from './current-article';\nimport { CurrentArticleShare } from './current-article.share';\n\n@Component(\n    ['article-comments', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleCommentComponent,\n          CommentsSupport,\n          ConduitFormsSupport,\n        ],\n      },\n    },\n)\nexport class ArticleCommentsComponent {\n\n  @RenderLoader({ comment: 'COMMENTS' })\n  response?: ApiResponse<CommentList>;\n\n  @StateProperty()\n  comments: Comment[] = [];\n\n  @SharedForm()\n  form: Form;\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const commentService = _context.get(CommentService);\n\n    this._context.on<CommentEvent>('conduit:comment')(({ detail: { added, removed } }) => {\n      if (added) {\n        this.comments = [added, ...this.comments];\n      } else {\n        this.comments = this.comments.filter(comment => comment.id !== removed);\n      }\n    });\n\n    let lastArticle: CurrentArticle = noArticle;\n\n    CurrentArticleShare.articleFor(_context).do(\n        digOn_(article => {\n          if (!article.slug || article.slug === lastArticle.slug) {\n            return;\n          }\n\n          lastArticle = article;\n\n          return commentService.articleComments(article.slug);\n        }),\n    )(response => {\n      this.response = response;\n      if (response.ok) {\n        this.comments = response.body.comments;\n      }\n    });\n\n    const element: HTMLElement = _context.element;\n\n    this.form = Form.by(\n        opts => inGroup({}, opts),\n        opts => inFormElement(element, opts),\n    );\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const { contentRoot }: { contentRoot: Node } = this._context;\n    const range = document.createRange();\n\n    range.setStartAfter(contentRoot.appendChild(document.createComment('[COMMENTS[')));\n    range.setEndBefore(contentRoot.appendChild(document.createComment(']COMMENTS]')));\n\n    return () => {\n      range.deleteContents();\n\n      const { comments } = this;\n\n      if (!comments.length) {\n        return;\n      }\n\n      const fragment = document.createDocumentFragment();\n\n      comments.forEach(comment => {\n\n        const commentEl = fragment.appendChild(document.createElement('conduit-article-comment') as ArticleCommentEl);\n\n        commentEl.articleComment = comment;\n      });\n\n      range.insertNode(fragment);\n    };\n  }\n\n}\n","import { Component, ComponentContext, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { ArticleService } from '../../core/articles';\nimport { RenderHTML } from '../../reusable';\nimport { CurrentArticleShare } from './current-article.share';\n\n@Component(['article-content', Conduit__NS])\nexport class ArticleContentComponent {\n\n  @StateProperty()\n  content?: Node;\n\n  constructor(context: ComponentContext) {\n\n    const articleService = context.get(ArticleService);\n\n    context.supply.whenOff(() => this.content = undefined);\n    CurrentArticleShare.articleFor(context)(article => {\n      if (article.slug) {\n        articleService.htmlContents(article)\n            .then(content => {\n              if (context.connected) {\n                this.content = content;\n              }\n            })\n            .catch(error => {\n              if (context.connected) {\n                this.content = undefined;\n                console.error('Failed to parse article', error);\n              }\n            });\n      } else {\n        this.content = undefined;\n      }\n    }).whenOff(() => {\n      this.content = undefined;\n    });\n  }\n\n  @RenderHTML({ comment: 'ARTICLE(content)' })\n  render(): Node | undefined {\n    return this.content;\n  }\n\n}\n","import { inText, InValidation, requirePresent } from '@frontmeans/input-aspects';\nimport { Field, SharedField } from '@wesib/generic/forms';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\n\n@Component(['article-comment-text', Conduit__NS])\nexport class ArticleCommentTextComponent {\n\n  @SharedField()\n  text?: Field<string>;\n\n  constructor(context: ComponentContext) {\n    context.whenSettled(({ element }: { element: Element }) => {\n      this.text = Field.by(opts => inText(element.querySelector('textarea')!, opts)\n          .setup(InValidation, validation => validation.by(requirePresent())));\n    });\n  }\n\n}\n","import { inFormElement, inGroup, InStatus, InSubmit, InSubmitError } from '@frontmeans/input-aspects';\nimport { supplyAfter } from '@proc7ts/fun-events';\nimport { Field, Form, FormShare, OnSubmit, SharedField, SharedForm } from '@wesib/generic/forms';\nimport { Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { apiSubmit } from '../../core/api';\nimport { AuthService, AuthUser, notAuthenticated, NotAuthenticated } from '../../core/auth';\nimport { CommentService, CommentsSupport } from '../../core/comments';\nimport { submitButton } from '../../core/forms';\nimport { ArticleCommentTextComponent } from './article-comment-text.component';\nimport { CommentEvent } from './comment-event';\nimport { CurrentArticle, noArticle } from './current-article';\nimport { CurrentArticleShare } from './current-article.share';\n\ninterface NewComment {\n  text: string;\n}\n\n@Component(\n    ['new-article-comment', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleCommentTextComponent,\n          CommentsSupport,\n        ],\n      },\n    },\n)\nexport class NewArticleCommentComponent {\n\n  private readonly _commentService: CommentService;\n\n  article: CurrentArticle = noArticle;\n\n  @StateProperty()\n  user: AuthUser | NotAuthenticated = notAuthenticated;\n\n  @SharedForm()\n  form?: Form<NewComment>;\n\n  @SharedField({\n    form: {\n      share: FormShare,\n      local: true,\n    },\n    name: '',\n  })\n  submitButton?: Field<void>;\n\n  constructor(private readonly _context: ComponentContext) {\n    this._commentService = _context.get(CommentService);\n\n    const authService = _context.get(AuthService);\n\n    authService.user.do(supplyAfter(_context))(user => {\n      this.user = user;\n    }).whenOff(() => {\n      this.user = notAuthenticated;\n    });\n    CurrentArticleShare.articleFor(_context)(article => {\n      this.article = article;\n    }).whenOff(() => {\n      this.article = noArticle;\n    });\n\n    _context.whenSettled(({ element }: { element: Element }) => {\n      this.form = Form.by(\n          opts => inGroup({ text: '' }, opts),\n          opts => inFormElement(element.querySelector('form')!, opts),\n      );\n      this.submitButton = submitButton(element.querySelector('button')!);\n    });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { element }: { element: Element } = this._context;\n    const image = element.querySelector('.comment-author-img');\n\n    return () => {\n      if (this.user.email && this.user.image) {\n        image?.setAttribute('src', this.user.image);\n      } else {\n        image?.removeAttribute('src');\n      }\n    };\n  }\n\n  @OnSubmit()\n  submit({ control }: Form.Controls<NewComment>): void {\n\n    const { article } = this;\n\n    if (!article.slug) {\n      return;\n    }\n\n    control.aspect(InStatus).markEdited();\n    control.aspect(InSubmit)\n        .submit(request => apiSubmit(this._commentService.addComment(article.slug, request.text)))\n        .then(added => {\n          control.it = { text: '' };\n          control.aspect(InStatus).markTouched(false);\n          control.aspect(InSubmit).reset();\n          this._context.dispatchEvent(new CommentEvent(\n              'conduit:comment',\n              {\n                bubbles: true,\n                detail: { added },\n              },\n          ));\n        })\n        .catch(e => {\n          if (e instanceof InSubmitError) {\n            console.error('Failed to comment', ...e.errors);\n          } else {\n            console.error('Failed to comment', e);\n          }\n        });\n  }\n\n}\n","import { stopDomEvents } from '@frontmeans/dom-events';\nimport { AfterEvent, consumeEvents, mapAfter_, supplyAfter, trackValue } from '@proc7ts/fun-events';\nimport { HandleNavLinks, Navigation, PageHashURLParam, Shared } from '@wesib/generic';\nimport {\n  BootstrapWindow,\n  Component,\n  ComponentContext,\n  ElementRenderer,\n  Render,\n  StateProperty,\n  statePropertyPathTo,\n} from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { ApiResponse } from '../../core/api';\nimport { Article, ArticleService } from '../../core/articles';\nimport { RenderLoader } from '../../core/loader';\nimport { CurrentUserProfile, currentUserProfileBy, noUserProfile } from '../profile/current-user-profile';\nimport { CurrentUserShare } from '../profile/current-user.share';\nimport { FollowAuthorBtnComponent } from '../profile/follow-author-btn.component';\nimport { ArticleActionsComponent } from './article-actions.component';\nimport { ArticleCommentsComponent } from './article-comments.component';\nimport { ArticleContentComponent } from './article-content.component';\nimport { ArticleButtonsSupport } from './buttons';\nimport { CurrentArticle, CurrentArticleTracker, noArticle } from './current-article';\nimport { CurrentArticleShare } from './current-article.share';\nimport { NewArticleCommentComponent } from './new-article-comment.component';\n\n@Component(\n    ['article', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleCommentsComponent,\n          ArticleContentComponent,\n          ArticleButtonsSupport,\n          ArticleActionsComponent,\n          FollowAuthorBtnComponent,\n          NewArticleCommentComponent,\n        ],\n      },\n    },\n    HandleNavLinks(),\n)\nexport class ArticleComponent {\n\n  private readonly _response = trackValue<ApiResponse<Article>>();\n\n  @Shared(CurrentUserShare)\n  readonly author: AfterEvent<[CurrentUserProfile]>;\n\n  @Shared(CurrentArticleShare)\n  readonly article: AfterEvent<[CurrentArticle]>;\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const articleService = _context.get(ArticleService);\n    const navigation = _context.get(Navigation);\n    const article = new CurrentArticleTracker().byArticles(\n        this._response.read.do(\n            mapAfter_(response => response && response.ok ? response.body : noArticle),\n        ),\n    );\n    const author = currentUserProfileBy(\n        this._response.read.do(\n            mapAfter_(response => response && response.ok ? response.body.author : noUserProfile),\n        ),\n    );\n\n    this.author = author.read;\n    this.article = article.read;\n\n    _context.whenConnected(() => {\n      navigation.read.do(\n          supplyAfter(_context),\n          consumeEvents(page => {\n\n            const slug = decodeURIComponent(page.get(PageHashURLParam).pathname.substring(1));\n\n            return articleService.article(slug)(response => this.response = response);\n          }),\n      );\n\n      _context.on('conduit:article').do(stopDomEvents)(() => {\n        // Article removed. Open home page.\n        navigation.open('').catch(console.error);\n      });\n    });\n  }\n\n  get response(): ApiResponse<Article> | undefined {\n    return this._response.it;\n  }\n\n  @StateProperty()\n  @RenderLoader()\n  set response(value: ApiResponse<Article> | undefined) {\n    this._response.it = value;\n  }\n\n  @Render({ on: statePropertyPathTo('response') })\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n\n    return () => {\n\n      const { response } = this;\n\n      if (response && response.ok) {\n        document.getElementById('article:title')!.innerText = response.body.title;\n      }\n    };\n  }\n\n}\n","import { conduitContext } from '../../core/main';\nimport { ArticleComponent } from './article.component';\n\nconduitContext.load(ArticleComponent);\n"],"names":["ArticleActionsComponent","[object Object]","_context","this","notAuthenticated","noArticle","get","AuthService","user","needs","whenOff","CurrentArticleShare","articleFor","article","document","BootstrapWindow","fragment","createDocumentFragment","slug","author","username","appendChild","createElement","tabIndex","favoritePostBtn","innerText","__decorate","StateProperty","RenderHTML","Component","Conduit__NS","feature","ArticleButtonsSupport","DeletePostBtnComponent","EditPostBtnComponent","CommentEvent","CustomEvent","ArticleCommentComponent","FormShare","Share__symbol","valueFor","form","_sharer","comment","articleComment","commentService","CommentService","authorLink","encodeURIComponent","authorImage","image","date","formatDate","Date","createdAt","cardBody","className","cardText","body","cardFooter","innerHTML","escapeHTML","control","options","deleteBtn","type","inSubmitButton","DomEventDispatcher","on","do","stopDomEvents","aspect","InSubmit","submit","apiSubmit","deleteComment","id","then","dispatchEvent","bubbles","detail","removed","catch","e","InSubmitError","console","error","errors","DomProperty","ArticleCommentsComponent","added","comments","filter","lastArticle","digOn_","articleComments","response","ok","element","Form","by","opts","inGroup","inFormElement","contentRoot","range","createRange","setStartAfter","createComment","setEndBefore","deleteContents","length","forEach","insertNode","RenderLoader","SharedForm","Render","CommentsSupport","ConduitFormsSupport","ArticleContentComponent","context","articleService","ArticleService","supply","content","undefined","htmlContents","connected","ArticleCommentTextComponent","whenSettled","text","Field","inText","querySelector","setup","InValidation","validation","requirePresent","SharedField","NewArticleCommentComponent","_commentService","supplyAfter","authService","submitButton","email","setAttribute","removeAttribute","InStatus","markEdited","request","addComment","it","markTouched","reset","share","local","name","OnSubmit","ArticleComponent","trackValue","navigation","Navigation","CurrentArticleTracker","byArticles","_response","read","mapAfter_","currentUserProfileBy","noUserProfile","whenConnected","consumeEvents","page","decodeURIComponent","PageHashURLParam","pathname","substring","open","value","getElementById","title","Shared","CurrentUserShare","statePropertyPathTo","FollowAuthorBtnComponent","HandleNavLinks","conduitContext","load"],"mappings":"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"}