{"version":3,"file":"main.1168bbd1.js","sources":["../../src/pages/article/article-actions.component.ts","../../src/pages/article/comment-event.ts","../../src/pages/article/article-comment.component.ts","../../src/pages/article/article-comments.component.ts","../../src/pages/article/article-content.component.ts","../../src/pages/article/article-comment-text.component.ts","../../src/pages/article/new-article-comment.component.ts","../../src/pages/article/article.component.ts","../../src/pages/article/main.ts"],"sourcesContent":["import { supplyAfter } from '@proc7ts/fun-events';\nimport { HierarchyContext } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { AuthService, AuthUser, notAuthenticated, NotAuthenticated } from '../../core/auth';\nimport { RenderHTML } from '../../reusable';\nimport { ArticleButtonsSupport } from './buttons';\nimport { DeletePostBtnComponent } from './buttons/delete-post-btn.component';\nimport { EditPostBtnComponent } from './buttons/edit-post-btn.component';\nimport { CurrentArticle, noArticle } from './current-article';\n\n@Component(\n    ['article-actions', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleButtonsSupport,\n          DeletePostBtnComponent,\n          EditPostBtnComponent,\n        ],\n      },\n    },\n)\nexport class ArticleActionsComponent {\n\n  @StateProperty()\n  user: AuthUser | NotAuthenticated = notAuthenticated;\n\n  @StateProperty()\n  article: CurrentArticle = noArticle;\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const authService = _context.get(AuthService);\n    const hierarchy = _context.get(HierarchyContext);\n\n    authService.user\n        .do(supplyAfter(_context))(\n            user => this.user = user,\n        )\n        .whenOff(\n            () => this.user = notAuthenticated,\n        );\n    hierarchy.get(CurrentArticle)\n        .do(supplyAfter(_context))(\n            article => this.article = article,\n        )\n        .whenOff(\n            () => this.article = noArticle,\n        );\n  }\n\n  @RenderHTML()\n  render(): Node | undefined {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const fragment = document.createDocumentFragment();\n\n    if (this.article.slug && this.article.author.username === this.user.username) {\n\n      const editBtn = fragment.appendChild(document.createElement('conduit-edit-post-btn'));\n\n      editBtn.tabIndex = 0;\n\n      const deleteBtn = fragment.appendChild(document.createElement('conduit-delete-post-btn'));\n\n      deleteBtn.tabIndex = 0;\n    } else {\n\n      const followAuthorBtn = fragment.appendChild(document.createElement('conduit-follow-author-btn'));\n\n      followAuthorBtn.tabIndex = 0;\n\n      const favoritePostBtn = fragment.appendChild(document.createElement('conduit-favorite-post-btn'));\n\n      favoritePostBtn.innerText = 'Favorite Post';\n      favoritePostBtn.tabIndex = 0;\n    }\n\n    return fragment;\n  }\n\n}\n","import { Comment } from '../../core/comments';\n\nexport type CommentEventDetails =\n    | {\n  added?: undefined;\n  removed: number;\n} | {\n  added: Comment;\n  removed?: undefined;\n};\n\nexport class CommentEvent extends CustomEvent<CommentEventDetails> {\n}\n","import { DomEventDispatcher, stopDomEvents } from '@frontmeans/dom-events';\nimport { escapeHTML } from '@frontmeans/httongue';\nimport { InSubmit, inSubmitButton, InSubmitError } from '@frontmeans/input-aspects';\nimport { supplyAfter } from '@proc7ts/fun-events';\nimport { HierarchyContext, Share__symbol } from '@wesib/generic';\nimport { Form, FormShare } from '@wesib/generic/forms';\nimport { BootstrapWindow, Component, ComponentContext, DomProperty, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { apiSubmit } from '../../core/api';\nimport { AuthService, AuthUser, notAuthenticated, NotAuthenticated } from '../../core/auth';\nimport { Comment, CommentService } from '../../core/comments';\nimport { formatDate, RenderHTML } from '../../reusable';\nimport { CommentEvent } from './comment-event';\nimport { CurrentArticle, noArticle } from './current-article';\n\nexport interface ArticleCommentEl extends HTMLElement {\n  articleComment?: Comment;\n}\n\n@Component(['article-comment', Conduit__NS])\nexport class ArticleCommentComponent {\n\n  @DomProperty()\n  articleComment?: Comment;\n\n  @StateProperty()\n  article: CurrentArticle = noArticle;\n\n  @StateProperty()\n  user: AuthUser | NotAuthenticated = notAuthenticated;\n\n  form?: Form;\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const authService = _context.get(AuthService);\n    const hierarchy = _context.get(HierarchyContext);\n\n    authService.user\n        .do(supplyAfter(_context))(\n            user => this.user = user,\n        )\n        .whenOff(\n            () => this.user = notAuthenticated,\n        );\n    hierarchy.get(CurrentArticle)\n        .do(supplyAfter(_context))(\n            article => this.article = article,\n        )\n        .whenOff(\n            () => this.article = noArticle,\n        );\n    FormShare[Share__symbol].valueFor(_context)(\n        (form?, _sharer?) => this.form = form,\n    );\n  }\n\n  @RenderHTML({ comment: 'COMMENT' })\n  render(): Node | undefined {\n\n    const comment = this.articleComment;\n\n    if (!comment) {\n      return;\n    }\n\n    const commentService = this._context.get(CommentService);\n    const { document } = this._context.get(BootstrapWindow);\n    const { author } = comment;\n    const authorLink = `profile/#/${encodeURIComponent(author.username)}`;\n    const authorImage = author.image ? `<img src=\"http://i.imgur.com/Qr71crq.jpg\" class=\"comment-author-img\" />` : '';\n    const date = formatDate(new Date(comment.createdAt));\n    const fragment = document.createDocumentFragment();\n    const cardBody = fragment.appendChild(document.createElement('div'));\n\n    cardBody.className = 'card-body';\n\n    const cardText = cardBody.appendChild(document.createElement('p'));\n\n    cardText.className = 'card-text';\n    cardText.innerText = comment.body;\n\n    const cardFooter = fragment.appendChild(document.createElement('div'));\n\n    cardFooter.className = 'card-footer';\n\n    cardFooter.innerHTML = `\n<a href=\"${authorLink}\" class=\"comment-author\">${authorImage}</a>\n<a href=\"${authorLink}\" class=\"comment-author\">${escapeHTML(author.username)}</a>\n<span class=\"date-posted\">${date}</span>`;\n\n    const form = this.form?.control;\n    const { slug } = this.article;\n\n    if (this.user.username === author.username && form && slug) {\n\n      const options = cardFooter.appendChild(document.createElement('span'));\n\n      options.className = 'mod-options';\n\n      const deleteBtn = options.appendChild(document.createElement('button'));\n\n      deleteBtn.type = 'button';\n      deleteBtn.className = 'btn btn-sm';\n      deleteBtn.innerHTML = '<i class=\"ion-trash-a\"></i>';\n      inSubmitButton(deleteBtn, { form });\n\n      new DomEventDispatcher(deleteBtn).on('click').do(stopDomEvents)(() => {\n        form.aspect(InSubmit)\n            .submit(() => apiSubmit(commentService.deleteComment(slug, comment.id)))\n            .then(() => {\n              this._context.dispatchEvent(new CommentEvent(\n                  'conduit:comment',\n                  {\n                    bubbles: true,\n                    detail: { removed: comment.id },\n                  },\n              ));\n            })\n            .catch(e => {\n              if (e instanceof InSubmitError) {\n                console.error('Failed to remove comment', ...e.errors);\n              } else {\n                console.error('Failed to remove comment', e);\n              }\n            });\n      });\n    }\n\n    return fragment;\n  }\n\n}\n","import { inFormElement, inGroup } from '@frontmeans/input-aspects';\nimport { digOn_, supplyOn } from '@proc7ts/fun-events';\nimport { HierarchyContext } from '@wesib/generic';\nimport { Form, SharedForm } from '@wesib/generic/forms';\nimport { BootstrapWindow, Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { ApiResponse } from '../../core/api';\nimport { Comment, CommentList, CommentService, CommentsSupport } from '../../core/comments';\nimport { ConduitFormsSupport } from '../../core/forms';\nimport { RenderLoader } from '../../core/loader';\nimport { ArticleCommentComponent, ArticleCommentEl } from './article-comment.component';\nimport { CommentEvent } from './comment-event';\nimport { CurrentArticle, noArticle } from './current-article';\n\n@Component(\n    ['article-comments', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleCommentComponent,\n          CommentsSupport,\n          ConduitFormsSupport,\n        ],\n      },\n    },\n)\nexport class ArticleCommentsComponent {\n\n  @RenderLoader({ comment: 'COMMENTS' })\n  response?: ApiResponse<CommentList>;\n\n  @StateProperty()\n  comments: Comment[] = [];\n\n  @SharedForm()\n  form: Form;\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const commentService = _context.get(CommentService);\n    const hierarchy = this._context.get(HierarchyContext);\n\n    this._context.on<CommentEvent>('conduit:comment')(({ detail: { added, removed } }) => {\n      if (added) {\n        this.comments = [added, ...this.comments];\n      } else {\n        this.comments = this.comments.filter(comment => comment.id !== removed);\n      }\n    });\n\n    let lastArticle: CurrentArticle = noArticle;\n\n    hierarchy.get(CurrentArticle).do(\n        supplyOn(_context),\n        digOn_(article => {\n          if (!article.slug || article.slug === lastArticle.slug) {\n            return;\n          }\n\n          lastArticle = article;\n\n          return commentService.articleComments(article.slug);\n        }),\n    )(response => {\n      this.response = response;\n      if (response.ok) {\n        this.comments = response.body.comments;\n      }\n    });\n\n    const element: HTMLElement = _context.element;\n\n    this.form = Form.by(\n        opts => inGroup({}, opts),\n        opts => inFormElement(element, opts),\n    );\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const { contentRoot }: { contentRoot: Node } = this._context;\n    const range = document.createRange();\n\n    range.setStartAfter(contentRoot.appendChild(document.createComment('[COMMENTS[')));\n    range.setEndBefore(contentRoot.appendChild(document.createComment(']COMMENTS]')));\n\n    return () => {\n      range.deleteContents();\n\n      const { comments } = this;\n\n      if (!comments.length) {\n        return;\n      }\n\n      const fragment = document.createDocumentFragment();\n\n      comments.forEach(comment => {\n\n        const commentEl = fragment.appendChild(document.createElement('conduit-article-comment') as ArticleCommentEl);\n\n        commentEl.articleComment = comment;\n      });\n\n      range.insertNode(fragment);\n    };\n  }\n\n}\n","import { supplyAfter } from '@proc7ts/fun-events';\nimport { HierarchyContext } from '@wesib/generic';\nimport { Component, ComponentContext, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { ArticleService } from '../../core/articles';\nimport { RenderHTML } from '../../reusable';\nimport { CurrentArticle } from './current-article';\n\n@Component(['article-content', Conduit__NS])\nexport class ArticleContentComponent {\n\n  @StateProperty()\n  content?: Node;\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const articleService = _context.get(ArticleService);\n    const hierarchy = this._context.get(HierarchyContext);\n\n    _context.supply.whenOff(() => this.content = undefined);\n    hierarchy.get(CurrentArticle).do(supplyAfter(_context))(article => {\n      if (article.slug) {\n        articleService.htmlContents(article)\n            .then(content => {\n              if (_context.connected) {\n                this.content = content;\n              }\n            })\n            .catch(error => {\n              if (_context.connected) {\n                this.content = undefined;\n                console.error('Failed to parse article', error);\n              }\n            });\n      } else {\n        this.content = undefined;\n      }\n    });\n  }\n\n  @RenderHTML({ comment: 'ARTICLE(content)' })\n  render(): Node | undefined {\n    return this.content;\n  }\n\n}\n","import { inText, InValidation, requirePresent } from '@frontmeans/input-aspects';\nimport { Field, SharedField } from '@wesib/generic/forms';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\n\n@Component(['article-comment-text', Conduit__NS])\nexport class ArticleCommentTextComponent {\n\n  @SharedField()\n  text?: Field<string>;\n\n  constructor(context: ComponentContext) {\n    context.whenSettled(({ element }: { element: Element }) => {\n      this.text = Field.by(opts => inText(element.querySelector('textarea')!, opts)\n          .setup(InValidation, validation => validation.by(requirePresent())));\n    });\n  }\n\n}\n","import { inFormElement, inGroup, InStatus, InSubmit, InSubmitError } from '@frontmeans/input-aspects';\nimport { supplyAfter } from '@proc7ts/fun-events';\nimport { HierarchyContext } from '@wesib/generic';\nimport { Field, Form, FormShare, OnSubmit, SharedField, SharedForm } from '@wesib/generic/forms';\nimport { Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { apiSubmit } from '../../core/api';\nimport { AuthService, AuthUser, notAuthenticated, NotAuthenticated } from '../../core/auth';\nimport { CommentService, CommentsSupport } from '../../core/comments';\nimport { submitButton } from '../../core/forms';\nimport { ArticleCommentTextComponent } from './article-comment-text.component';\nimport { CommentEvent } from './comment-event';\nimport { CurrentArticle, noArticle } from './current-article';\n\ninterface NewComment {\n  text: string;\n}\n\n@Component(\n    ['new-article-comment', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleCommentTextComponent,\n          CommentsSupport,\n        ],\n      },\n    },\n)\nexport class NewArticleCommentComponent {\n\n  private readonly _commentService: CommentService;\n\n  article: CurrentArticle = noArticle;\n\n  @StateProperty()\n  user: AuthUser | NotAuthenticated = notAuthenticated;\n\n  @SharedForm()\n  form?: Form<NewComment>;\n\n  @SharedField({\n    form: {\n      share: FormShare,\n      local: true,\n    },\n    name: '',\n  })\n  submitButton?: Field<void>;\n\n  constructor(private readonly _context: ComponentContext) {\n    this._commentService = _context.get(CommentService);\n\n    const authService = _context.get(AuthService);\n    const hierarchy = _context.get(HierarchyContext);\n\n    authService.user.do(supplyAfter(_context))(\n        user => this.user = user,\n    ).whenOff(\n        () => this.user = notAuthenticated,\n    );\n    hierarchy.get(CurrentArticle)(\n        article => this.article = article,\n    ).whenOff(\n        () => this.article = noArticle,\n    );\n\n    _context.whenSettled(({ element }: { element: Element }) => {\n      this.form = Form.by(\n          opts => inGroup({ text: '' }, opts),\n          opts => inFormElement(element.querySelector('form')!, opts),\n      );\n      this.submitButton = submitButton(element.querySelector('button')!);\n    });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { element }: { element: Element } = this._context;\n    const image = element.querySelector('.comment-author-img');\n\n    return () => {\n      if (this.user.email && this.user.image) {\n        image?.setAttribute('src', this.user.image);\n      } else {\n        image?.removeAttribute('src');\n      }\n    };\n  }\n\n  @OnSubmit()\n  submit({ control }: Form.Controls<NewComment>): void {\n\n    const { article } = this;\n\n    if (!article.slug) {\n      return;\n    }\n\n    control.aspect(InStatus).markEdited();\n    control.aspect(InSubmit)\n        .submit(request => apiSubmit(this._commentService.addComment(article.slug, request.text)))\n        .then(added => {\n          control.it = { text: '' };\n          control.aspect(InStatus).markTouched(false);\n          control.aspect(InSubmit).reset();\n          this._context.dispatchEvent(new CommentEvent(\n              'conduit:comment',\n              {\n                bubbles: true,\n                detail: { added },\n              },\n          ));\n        })\n        .catch(e => {\n          if (e instanceof InSubmitError) {\n            console.error('Failed to comment', ...e.errors);\n          } else {\n            console.error('Failed to comment', e);\n          }\n        });\n  }\n\n}\n","import { stopDomEvents } from '@frontmeans/dom-events';\nimport { consumeEvents, mapAfter_, supplyAfter, trackValue } from '@proc7ts/fun-events';\nimport { HandleNavLinks, HierarchyContext, Navigation, PageHashURLParam } from '@wesib/generic';\nimport {\n  BootstrapWindow,\n  Component,\n  ComponentContext,\n  ElementRenderer,\n  Render,\n  StateProperty,\n  statePropertyPathTo,\n} from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { ApiResponse } from '../../core/api';\nimport { Article, ArticleService } from '../../core/articles';\nimport { RenderLoader } from '../../core/loader';\nimport { CurrentUserProfile, currentUserProfileBy, noUserProfile } from '../profile/current-user-profile';\nimport { FollowAuthorBtnComponent } from '../profile/follow-author-btn.component';\nimport { ArticleActionsComponent } from './article-actions.component';\nimport { ArticleCommentsComponent } from './article-comments.component';\nimport { ArticleContentComponent } from './article-content.component';\nimport { ArticleButtonsSupport } from './buttons';\nimport { CurrentArticle, CurrentArticleTracker, noArticle } from './current-article';\nimport { NewArticleCommentComponent } from './new-article-comment.component';\n\n@Component(\n    ['article', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleCommentsComponent,\n          ArticleContentComponent,\n          ArticleButtonsSupport,\n          ArticleActionsComponent,\n          FollowAuthorBtnComponent,\n          NewArticleCommentComponent,\n        ],\n      },\n    },\n    HandleNavLinks(),\n)\nexport class ArticleComponent {\n\n  private readonly _response = trackValue<ApiResponse<Article>>();\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const articleService = _context.get(ArticleService);\n    const navigation = _context.get(Navigation);\n    const hierarchy = this._context.get(HierarchyContext);\n    const article = new CurrentArticleTracker().byArticles(\n        this._response.read.do(\n            mapAfter_(response => response && response.ok ? response.body : noArticle),\n        ),\n    );\n    const author = currentUserProfileBy(\n        this._response.read.do(\n            mapAfter_(response => response && response.ok ? response.body.author : noUserProfile),\n        ),\n    );\n\n    hierarchy.provide({ a: CurrentArticle, is: article.read });\n    hierarchy.provide({ a: CurrentUserProfile, is: author.read });\n    _context.whenConnected(() => {\n      navigation.read.do(\n          supplyAfter(_context),\n          consumeEvents(page => {\n\n            const slug = decodeURIComponent(page.get(PageHashURLParam).pathname.substring(1));\n\n            return articleService.article(slug)(response => this.response = response);\n          }),\n      );\n\n      _context.on('conduit:article').do(stopDomEvents)(() => {\n        // Article removed. Open home page.\n        navigation.open('').catch(console.error);\n      });\n    });\n  }\n\n  get response(): ApiResponse<Article> | undefined {\n    return this._response.it;\n  }\n\n  @StateProperty()\n  @RenderLoader()\n  set response(value: ApiResponse<Article> | undefined) {\n    this._response.it = value;\n  }\n\n  @Render({ on: statePropertyPathTo('response') })\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n\n    return () => {\n\n      const { response } = this;\n\n      if (response && response.ok) {\n        document.getElementById('article:title')!.innerText = response.body.title;\n      }\n    };\n  }\n\n}\n","import { conduitContext } from '../../core/main';\nimport { ArticleComponent } from './article.component';\n\nconduitContext.load(ArticleComponent);\n"],"names":["ArticleActionsComponent","[object Object]","_context","this","notAuthenticated","noArticle","authService","get","AuthService","hierarchy","HierarchyContext","user","do","supplyAfter","whenOff","CurrentArticle","article","document","BootstrapWindow","fragment","createDocumentFragment","slug","author","username","appendChild","createElement","tabIndex","favoritePostBtn","innerText","__decorate","StateProperty","RenderHTML","Component","Conduit__NS","feature","needs","ArticleButtonsSupport","DeletePostBtnComponent","EditPostBtnComponent","CommentEvent","CustomEvent","ArticleCommentComponent","FormShare","Share__symbol","valueFor","form","_sharer","comment","articleComment","commentService","CommentService","authorLink","encodeURIComponent","authorImage","image","date","formatDate","Date","createdAt","cardBody","className","cardText","body","cardFooter","innerHTML","escapeHTML","control","options","deleteBtn","type","inSubmitButton","DomEventDispatcher","on","stopDomEvents","aspect","InSubmit","submit","apiSubmit","deleteComment","id","then","dispatchEvent","bubbles","detail","removed","catch","e","InSubmitError","console","error","errors","DomProperty","ArticleCommentsComponent","added","comments","filter","lastArticle","supplyOn","digOn_","articleComments","response","ok","element","Form","by","opts","inGroup","inFormElement","contentRoot","range","createRange","setStartAfter","createComment","setEndBefore","deleteContents","length","forEach","insertNode","RenderLoader","SharedForm","Render","CommentsSupport","ConduitFormsSupport","ArticleContentComponent","articleService","ArticleService","supply","content","undefined","htmlContents","connected","ArticleCommentTextComponent","context","whenSettled","text","Field","inText","querySelector","setup","InValidation","validation","requirePresent","SharedField","NewArticleCommentComponent","_commentService","submitButton","email","setAttribute","removeAttribute","InStatus","markEdited","request","addComment","it","markTouched","reset","share","local","name","OnSubmit","ArticleComponent","trackValue","navigation","Navigation","CurrentArticleTracker","byArticles","_response","read","mapAfter_","currentUserProfileBy","noUserProfile","provide","a","is","CurrentUserProfile","whenConnected","consumeEvents","page","decodeURIComponent","PageHashURLParam","pathname","substring","open","value","getElementById","title","statePropertyPathTo","FollowAuthorBtnComponent","HandleNavLinks","conduitContext","load"],"mappings":"03DAuBA,IAAaA,GAAb,MAQEC,YAA6BC,GAAAC,cAAAD,EAL7BC,UAAoCC,EAGpCD,aAA0BE,EAIxB,MAAMC,EAAcJ,EAASK,IAAIC,GAC3BC,EAAYP,EAASK,IAAIG,GAE/BJ,EAAYK,KACPC,GAAGC,EAAYX,GADpBI,EAEQK,GAAQR,KAAKQ,KAAOA,IAEvBG,SACG,IAAMX,KAAKQ,KAAOP,IAE1BK,EAAUF,IAAIQ,GACTH,GAAGC,EAAYX,GADpBO,EAEQO,GAAWb,KAAKa,QAAUA,IAE7BF,SACG,IAAMX,KAAKa,QAAUX,IAK/BJ,SAEE,MAAMgB,SAAEA,GAAad,KAAKD,SAASK,IAAIW,GACjCC,EAAWF,EAASG,yBAE1B,GAAIjB,KAAKa,QAAQK,MAAQlB,KAAKa,QAAQM,OAAOC,WAAapB,KAAKQ,KAAKY,SAAU,CAE5DJ,EAASK,YAAYP,EAASQ,cAAc,0BAEpDC,SAAW,EAEDP,EAASK,YAAYP,EAASQ,cAAc,4BAEpDC,SAAW,MAChB,CAEmBP,EAASK,YAAYP,EAASQ,cAAc,8BAEpDC,SAAW,EAE3B,MAAMC,EAAkBR,EAASK,YAAYP,EAASQ,cAAc,8BAEpEE,EAAgBC,UAAY,gBAC5BD,EAAgBD,SAAW,EAG7B,OAAOP,IArDTU,GADCC,iCAIDD,GADCC,oCAyBDD,GADCE,iCA7BU/B,MAZZgC,EACG,CAAC,kBAAmBC,GACpB,CACEC,QAAS,CACPC,MAAO,CACLC,EACAC,EACAC,OAKGtC,UCZAuC,WAAqBC,aCSlC,IAAaC,GAAb,MAaExC,YAA6BC,GAAAC,cAAAD,EAP7BC,aAA0BE,EAG1BF,UAAoCC,EAMlC,MAAME,EAAcJ,EAASK,IAAIC,GAC3BC,EAAYP,EAASK,IAAIG,GAE/BJ,EAAYK,KACPC,GAAGC,EAAYX,GADpBI,EAEQK,GAAQR,KAAKQ,KAAOA,IAEvBG,SACG,IAAMX,KAAKQ,KAAOP,IAE1BK,EAAUF,IAAIQ,GACTH,GAAGC,EAAYX,GADpBO,EAEQO,GAAWb,KAAKa,QAAUA,IAE7BF,SACG,IAAMX,KAAKa,QAAUX,IAE7BqC,EAAUC,GAAeC,SAAS1C,EAAlCwC,EACI,CAACG,EAAOC,IAAa3C,KAAK0C,KAAOA,IAKvC5C,eAEE,MAAM8C,EAAU5C,KAAK6C,eAErB,IAAKD,EACH,OAGF,MAAME,EAAiB9C,KAAKD,SAASK,IAAI2C,IACnCjC,SAAEA,GAAad,KAAKD,SAASK,IAAIW,IACjCI,OAAEA,GAAWyB,EACbI,EAAa,aAAaC,mBAAmB9B,EAAOC,YACpD8B,EAAc/B,EAAOgC,MAAQ,0EAA4E,GACzGC,EAAOC,EAAW,IAAIC,KAAKV,EAAQW,YACnCvC,EAAWF,EAASG,yBACpBuC,EAAWxC,EAASK,YAAYP,EAASQ,cAAc,QAE7DkC,EAASC,UAAY,YAErB,MAAMC,EAAWF,EAASnC,YAAYP,EAASQ,cAAc,MAE7DoC,EAASD,UAAY,YACrBC,EAASjC,UAAYmB,EAAQe,KAE7B,MAAMC,EAAa5C,EAASK,YAAYP,EAASQ,cAAc,QAE/DsC,EAAWH,UAAY,cAEvBG,EAAWC,UAAY,cAChBb,6BAAsCE,mBACtCF,6BAAsCc,GAAW3C,EAAOC,4CACvCgC,WAExB,MAAMV,YAAO1C,KAAK0C,2BAAMqB,SAClB7C,KAAEA,GAASlB,KAAKa,QAEtB,GAAIb,KAAKQ,KAAKY,WAAaD,EAAOC,UAAYsB,GAAQxB,EAAM,CAE1D,MAAM8C,EAAUJ,EAAWvC,YAAYP,EAASQ,cAAc,SAE9D0C,EAAQP,UAAY,cAEpB,MAAMQ,EAAYD,EAAQ3C,YAAYP,EAASQ,cAAc,WAE7D2C,EAAUC,KAAO,SACjBD,EAAUR,UAAY,aACtBQ,EAAUJ,UAAY,8BACtBM,EAAeF,EAAW,CAAEvB,KAAAA,IAE5B,IAAI0B,EAAmBH,GAAWI,GAAG,SAAS5D,GAAG6D,EAAjD,EAAgE,KAC9D5B,EAAK6B,OAAOC,GACPC,QAAO,IAAMC,GAAU5B,EAAe6B,cAAczD,EAAM0B,EAAQgC,OAClEC,MAAK,KACJ7E,KAAKD,SAAS+E,cAAc,IAAI1C,GAC5B,kBACA,CACE2C,SAAS,EACTC,OAAQ,CAAEC,QAASrC,EAAQgC,UAIlCM,OAAMC,IACDA,aAAaC,EACfC,QAAQC,MAAM,8BAA+BH,EAAEI,QAE/CF,QAAQC,MAAM,2BAA4BH,SAMtD,OAAOnE,IA1GTU,GADC8D,2CAID9D,GADCC,oCAIDD,GADCC,iCA8BDD,GADCE,EAAW,CAAEgB,QAAS,yCArCZN,MADZT,EAAU,CAAC,kBAAmBC,KAClBQ,ICMb,IAAamD,GAAb,MAWE3F,YAA6BC,GAAAC,cAAAD,EAL7BC,cAAsB,GAOpB,MAAM8C,EAAiB/C,EAASK,IAAI2C,GAC9BzC,EAAYN,KAAKD,SAASK,IAAIG,GAEpCP,KAAKD,SAASsE,GAAiB,kBAA/BrE,EAAkD,EAAGgF,QAAUU,MAAAA,EAAOT,QAAAA,OAElEjF,KAAK2F,SADHD,EACc,CAACA,KAAU1F,KAAK2F,UAEhB3F,KAAK2F,SAASC,QAAOhD,GAAWA,EAAQgC,KAAOK,OAInE,IAAIY,EAA8B3F,EAElCI,EAAUF,IAAIQ,GAAgBH,GAC1BqF,EAAS/F,GACTgG,GAAOlF,IACL,GAAKA,EAAQK,MAAQL,EAAQK,OAAS2E,EAAY3E,KAMlD,OAFA2E,EAAchF,EAEPiC,EAAekD,gBAAgBnF,EAAQK,SATpDZ,EAWE2F,IACAjG,KAAKiG,SAAWA,EACZA,EAASC,KACXlG,KAAK2F,SAAWM,EAAStC,KAAKgC,aAIlC,MAAMQ,EAAuBpG,EAASoG,QAEtCnG,KAAK0C,KAAO0D,EAAKC,IACbC,GAAQC,EAAQ,GAAID,KACpBA,GAAQE,EAAcL,EAASG,KAKrCxG,SAEE,MAAMgB,SAAEA,GAAad,KAAKD,SAASK,IAAIW,IACjC0F,YAAEA,GAAuCzG,KAAKD,SAC9C2G,EAAQ5F,EAAS6F,cAKvB,OAHAD,EAAME,cAAcH,EAAYpF,YAAYP,EAAS+F,cAAc,gBACnEH,EAAMI,aAAaL,EAAYpF,YAAYP,EAAS+F,cAAc,gBAE3D,KACLH,EAAMK,iBAEN,MAAMpB,SAAEA,GAAa3F,KAErB,IAAK2F,EAASqB,OACZ,OAGF,MAAMhG,EAAWF,EAASG,yBAE1B0E,EAASsB,SAAQrE,IAEG5B,EAASK,YAAYP,EAASQ,cAAc,4BAEpDuB,eAAiBD,KAG7B8D,EAAMQ,WAAWlG,MA7ErBU,GADCyF,EAAa,CAAEvE,QAAS,8CAIzBlB,GADCC,qCAIDD,GADC0F,iCA6CD1F,GADC2F,iCApDU5B,MAZZ5D,EACG,CAAC,mBAAoBC,GACrB,CACEC,QAAS,CACPC,MAAO,CACLM,GACAgF,GACAC,QAKG9B,ICjBb,IAAa+B,GAAb,MAKE1H,YAA6BC,GAAAC,cAAAD,EAE3B,MAAM0H,EAAiB1H,EAASK,IAAIsH,GAC9BpH,EAAYN,KAAKD,SAASK,IAAIG,GAEpCR,EAAS4H,OAAOhH,SAAQ,IAAMX,KAAK4H,aAAUC,IAC7CvH,EAAUF,IAAIQ,GAAgBH,GAAGC,EAAYX,GAA7CO,EAAwDO,IAClDA,EAAQK,KACVuG,EAAeK,aAAajH,GACvBgE,MAAK+C,IACA7H,EAASgI,YACX/H,KAAK4H,QAAUA,MAGlB1C,OAAMI,IACDvF,EAASgI,YACX/H,KAAK4H,aAAUC,EACfxC,QAAQC,MAAM,0BAA2BA,OAIjDtF,KAAK4H,aAAUC,KAMrB/H,SACE,OAAOE,KAAK4H,UA9BdlG,GADCC,oCA8BDD,GADCE,EAAW,CAAEgB,QAAS,kDA/BZ4E,MADZ3F,EAAU,CAAC,kBAAmBC,KAClB0F,ICHb,IAAaQ,GAAb,MAKElI,YAAYmI,GACVA,EAAQC,aAAY,EAAG/B,QAAAA,MACrBnG,KAAKmI,KAAOC,EAAM/B,IAAGC,GAAQ+B,EAAOlC,EAAQmC,cAAc,YAAchC,GACnEiC,MAAMC,GAAcC,GAAcA,EAAWpC,GAAGqC,cALzDhH,GADCiH,iCAFUX,MADZnG,EAAU,CAAC,uBAAwBC,KACvBkG,ICuBb,IAAaY,GAAb,MAqBE9I,YAA6BC,GAAAC,cAAAD,EAjB7BC,aAA0BE,EAG1BF,UAAoCC,EAelCD,KAAK6I,gBAAkB9I,EAASK,IAAI2C,GAEpC,MAAM5C,EAAcJ,EAASK,IAAIC,GAC3BC,EAAYP,EAASK,IAAIG,GAE/BJ,EAAYK,KAAKC,GAAGC,EAAYX,GAAhCI,EACIK,GAAQR,KAAKQ,KAAOA,IACtBG,SACE,IAAMX,KAAKQ,KAAOP,IAEtBK,EAAUF,IAAIQ,EAAdN,EACIO,GAAWb,KAAKa,QAAUA,IAC5BF,SACE,IAAMX,KAAKa,QAAUX,IAGzBH,EAASmI,aAAY,EAAG/B,QAAAA,MACtBnG,KAAK0C,KAAO0D,EAAKC,IACbC,GAAQC,EAAQ,CAAE4B,KAAM,IAAM7B,KAC9BA,GAAQE,EAAcL,EAAQmC,cAAc,QAAUhC,KAE1DtG,KAAK8I,aAAeA,GAAa3C,EAAQmC,cAAc,cAK3DxI,SAEE,MAAMqG,QAAEA,GAAkCnG,KAAKD,SACzCoD,EAAQgD,EAAQmC,cAAc,uBAEpC,MAAO,KACDtI,KAAKQ,KAAKuI,OAAS/I,KAAKQ,KAAK2C,MAC/BA,MAAAA,GAAAA,EAAO6F,aAAa,MAAOhJ,KAAKQ,KAAK2C,OAErCA,MAAAA,GAAAA,EAAO8F,gBAAgB,QAM7BnJ,QAAOiE,QAAEA,IAEP,MAAMlD,QAAEA,GAAYb,KAEfa,EAAQK,OAIb6C,EAAQQ,OAAO2E,GAAUC,aACzBpF,EAAQQ,OAAOC,GACVC,QAAO2E,GAAW1E,GAAU1E,KAAK6I,gBAAgBQ,WAAWxI,EAAQK,KAAMkI,EAAQjB,SAClFtD,MAAKa,IACJ3B,EAAQuF,GAAK,CAAEnB,KAAM,IACrBpE,EAAQQ,OAAO2E,GAAUK,aAAY,GACrCxF,EAAQQ,OAAOC,GAAUgF,QACzBxJ,KAAKD,SAAS+E,cAAc,IAAI1C,GAC5B,kBACA,CACE2C,SAAS,EACTC,OAAQ,CAAEU,MAAAA,SAIjBR,OAAMC,IACDA,aAAaC,EACfC,QAAQC,MAAM,uBAAwBH,EAAEI,QAExCF,QAAQC,MAAM,oBAAqBH,SAnF7CzD,GADCC,iCAIDD,GADC0F,iCAUD1F,GAPCiH,EAAY,CACXjG,KAAM,CACJ+G,MAAOlH,EACPmH,OAAO,GAETC,KAAM,0CA+BRjI,GADC2F,iCAgBD3F,GADCkI,iCA9DUhB,MAXZ/G,EACG,CAAC,sBAAuBC,GACxB,CACEC,QAAS,CACPC,MAAO,CACLgG,GACAV,QAKGsB,ICYb,IAAaiB,GAAb,MAIE/J,YAA6BC,GAAAC,cAAAD,EAFZC,eAAY8J,IAI3B,MAAMrC,EAAiB1H,EAASK,IAAIsH,GAC9BqC,EAAahK,EAASK,IAAI4J,GAC1B1J,EAAYN,KAAKD,SAASK,IAAIG,GAC9BM,GAAU,IAAIoJ,GAAwBC,WACxClK,KAAKmK,UAAUC,KAAK3J,GAChB4J,GAAUpE,GAAYA,GAAYA,EAASC,GAAKD,EAAStC,KAAOzD,MAGlEiB,EAASmJ,EACXtK,KAAKmK,UAAUC,KAAK3J,GAChB4J,GAAUpE,GAAYA,GAAYA,EAASC,GAAKD,EAAStC,KAAKxC,OAASoJ,MAI/EjK,EAAUkK,QAAQ,CAAEC,EAAG7J,EAAgB8J,GAAI7J,EAAQuJ,OACnD9J,EAAUkK,QAAQ,CAAEC,EAAGE,EAAoBD,GAAIvJ,EAAOiJ,OACtDrK,EAAS6K,eAAc,KACrBb,EAAWK,KAAK3J,GACZC,EAAYX,GACZ8K,GAAcC,IAEZ,MAAM5J,EAAO6J,mBAAmBD,EAAK1K,IAAI4K,GAAkBC,SAASC,UAAU,IAE9E,OAAOzD,EAAe5G,QAAQK,EAAvBuG,EAA6BxB,GAAYjG,KAAKiG,SAAWA,QAItElG,EAASsE,GAAG,mBAAmB5D,GAAG6D,EAAlCvE,EAAiD,KAE/CgK,EAAWoB,KAAK,IAAIjG,MAAMG,QAAQC,aAKxCW,eACE,OAAOjG,KAAKmK,UAAUb,GAKxBrD,aAAamF,GACXpL,KAAKmK,UAAUb,GAAK8B,EAItBtL,SAEE,MAAMgB,SAAEA,GAAad,KAAKD,SAASK,IAAIW,GAEvC,MAAO,KAEL,MAAMkF,SAAEA,GAAajG,KAEjBiG,GAAYA,EAASC,KACvBpF,EAASuK,eAAe,iBAAkB5J,UAAYwE,EAAStC,KAAK2H,UAd1E5J,GAFCC,IACAwF,mCAMDzF,GADC2F,EAAO,CAAEhD,GAAIkH,EAAoB,2CAlDvB1B,MAhBZhI,EACG,CAAC,UAAWC,GACZ,CACEC,QAAS,CACPC,MAAO,CACLyD,GACA+B,GACAvF,EACApC,GACA2L,EACA5C,MAIN6C,MAES5B,ICtCb6B,EAAeC,KAAK9B"}