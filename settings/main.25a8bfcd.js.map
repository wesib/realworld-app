{"version":3,"file":"main.25a8bfcd.js","sources":["../../src/pages/settings/change-password.component.ts","../../src/pages/settings/user-bio.component.ts","../../src/pages/settings/user-image.component.ts","../../src/pages/settings/settings.component.ts","../../src/pages/settings/main.ts"],"sourcesContent":["import { SetInputName } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { InMode, InStyledElement, inText } from 'input-aspects';\nimport { Conduit__NS } from '../../core';\nimport { UseConduitInput } from '../../core/input';\n\n@Component(\n    ['change-password', Conduit__NS],\n    UseConduitInput({\n      makeControl({ node, aspects }) {\n\n        const text = inText(node.element, { aspects });\n        const control = text.convert<string | undefined>(\n            {\n              get(value) {\n                return value || '';\n              },\n              set(value) {\n                return value || undefined;\n              },\n            },\n            aspects,\n            InStyledElement.to(node.element),\n        );\n\n        text.aspect(InMode).derive(control.aspect(InMode));\n\n        return control;\n      },\n    }),\n    SetInputName('password'),\n)\nexport class ChangePasswordComponent {\n}\n","import { SetInputName } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { inText } from 'input-aspects';\nimport { Conduit__NS } from '../../core';\nimport { UseConduitInput } from '../../core/input';\n\n@Component(\n    ['user-bio', Conduit__NS],\n    UseConduitInput({\n      select: 'textarea',\n      makeControl({ node, aspects }) {\n        return inText(node.element, { aspects });\n      },\n    }),\n    SetInputName('bio'),\n)\nexport class UserBioComponent {\n}\n","import { SetInputName } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { inText } from 'input-aspects';\nimport { Conduit__NS } from '../../core';\nimport { UseConduitInput } from '../../core/input';\n\n@Component(\n    ['user-image', Conduit__NS],\n    UseConduitInput({\n      makeControl({ node, aspects }) {\n        return inText(node.element, { aspects });\n      },\n    }),\n    SetInputName('image'),\n)\nexport class UserImageComponent {\n}\n","import { HierarchyContext } from '@wesib/generic';\nimport { InputToForm, NoInputToForm, OnSubmit } from '@wesib/generic/input';\nimport {\n  Component,\n  ComponentContext,\n  DefaultNamespaceAliaser,\n  ElementRenderer,\n  Render,\n  StateProperty,\n} from '@wesib/wesib';\nimport { AfterEvent } from 'fun-events';\nimport { InStatus, InSubmit, InSubmitError } from 'input-aspects';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { Conduit__NS } from '../../core';\nimport { apiSubmit } from '../../core/api';\nimport { AuthService, AuthUser, UpdateSettingsRequest } from '../../core/auth';\nimport { ConduitInputSupport, FillConduitForm } from '../../core/input';\nimport { LoadStatus, RenderLoader } from '../../core/loader';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { UserBioComponent } from './user-bio.component';\nimport { UserEmailComponent } from './user-email.component';\nimport { UserImageComponent } from './user-image.component';\nimport { UserNameComponent } from './user-name.component';\n\nconst updatedClassName: QualifiedName = ['updated', Conduit__NS];\n\n@Component(\n    ['settings', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ChangePasswordComponent,\n          ConduitInputSupport,\n          UserBioComponent,\n          UserEmailComponent,\n          UserImageComponent,\n          UserNameComponent,\n        ],\n      },\n    },\n    FillConduitForm<UpdateSettingsRequest>({\n      emptyModel: {\n        email: '',\n        username: '',\n      },\n    }),\n)\nexport class SettingsComponent {\n\n  private readonly _authService: AuthService;\n\n  @StateProperty()\n  updated = false;\n\n  @RenderLoader({ comment: 'settings' })\n  loadStatus?: LoadStatus;\n\n  constructor(private readonly _context: ComponentContext) {\n    this._authService = _context.get(AuthService);\n\n    this._context.whenOn(supply => {\n      this._authService.loadUser().tillOff(supply)(\n          response => {\n            this.loadStatus = response;\n            if (response && response.ok) {\n              this.setUser(response.body);\n            }\n          },\n      );\n    });\n  }\n\n  @OnSubmit()\n  submit({ control }: InputToForm<UpdateSettingsRequest>): void {\n    this.updated = false;\n    control.aspect(InStatus).markEdited();\n    control.aspect(InSubmit)\n        .submit(request => apiSubmit(this._authService.updateSettings(request)))\n        .then(user => {\n          this.setUser(user);\n          this.updated = true;\n        })\n        .catch(e => {\n          if (e instanceof InSubmitError) {\n            console.error('Failed to update user settings', ...e.errors);\n          } else {\n            console.error('Failed to update user settings', e);\n          }\n        });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { element }: { element: Element } = this._context;\n    const updatedClass = css__naming.name(updatedClassName, this._context.get(DefaultNamespaceAliaser));\n\n    return () => {\n      if (this.updated) {\n        element.classList.add(updatedClass);\n      } else {\n        element.classList.remove(updatedClass);\n      }\n    };\n  }\n\n  private setUser(\n      {\n        username,\n        email,\n        bio,\n        image,\n      }: AuthUser,\n  ): void {\n\n    const hierarchy = this._context.get(HierarchyContext);\n    const form: AfterEvent<[InputToForm<UpdateSettingsRequest> | NoInputToForm]> = hierarchy.get(InputToForm);\n\n    form.once(f => {\n      if (f.control) {\n        f.control.it = {\n          username,\n          email,\n          bio,\n          image,\n        };\n      }\n    });\n  }\n\n}\n","import { conduitContext } from '../../core/main';\nimport { SettingsComponent } from './settings.component';\n\nconduitContext.load(SettingsComponent);\n"],"names":["ChangePasswordComponent","Component","Conduit__NS","UseConduitInput","[object Object]","node","aspects","text","inText","element","control","convert","get","value","set","undefined","InStyledElement","to","aspect","InMode","derive","SetInputName","UserBioComponent","select","makeControl","UserImageComponent","updatedClassName","SettingsComponent","_context","this","_authService","AuthService","whenOn","supply","loadUser","tillOff","response","loadStatus","ok","setUser","body","updated","InStatus","markEdited","InSubmit","submit","request","apiSubmit","updateSettings","then","user","catch","e","InSubmitError","console","error","errors","updatedClass","css__naming","name","DefaultNamespaceAliaser","classList","add","remove","username","email","bio","image","HierarchyContext","InputToForm","once","f","it","__decorate","StateProperty","RenderLoader","comment","OnSubmit","Render","feature","needs","ConduitInputSupport","UserEmailComponent","UserNameComponent","FillConduitForm","emptyModel","conduitContext","load"],"mappings":"qvBAgCA,IAAaA,EAAb,QAAaA,KA1BZC,EACG,CAAC,kBAAmBC,GACpBC,EAAgB,CACdC,aAAYC,KAAEA,EAAIC,QAAEA,IAElB,MAAMC,EAAOC,EAAOH,EAAKI,QAAS,CAAEH,QAAAA,IAC9BI,EAAUH,EAAKI,QACjB,CACEC,IAAIC,GACKA,GAAS,GAElBC,IAAID,GACKA,QAASE,GAGpBT,EACAU,EAAgBC,GAAGZ,EAAKI,UAK5B,OAFAF,EAAKW,OAAOC,GAAQC,OAAOV,EAAQQ,OAAOC,IAEnCT,KAGXW,EAAa,cAEJrB,GChBb,IAAasB,EAAb,QAAaA,KAVZrB,EACG,CAAC,WAAYC,GACbC,EAAgB,CACdoB,OAAQ,WACRC,YAAW,EAACnB,KAAEA,EAAIC,QAAEA,KACXE,EAAOH,EAAKI,QAAS,CAAEH,QAAAA,MAGlCe,EAAa,SAEJC,GCDb,IAAaG,EAAb,QAAaA,KATZxB,EACG,CAAC,aAAcC,GACfC,EAAgB,CACdqB,YAAW,EAACnB,KAAEA,EAAIC,QAAEA,KACXE,EAAOH,EAAKI,QAAS,CAAEH,QAAAA,MAGlCe,EAAa,WAEJI,SCSPC,EAAkC,CAAC,UAAWxB,GAuBpD,IAAayB,EAAb,MAUEvB,YAA6BwB,GAAAC,cAAAD,EAL7BC,cAAU,EAMRA,KAAKC,aAAeF,EAAShB,IAAImB,GAEjCF,KAAKD,SAASI,OAAOC,IACnBJ,KAAKC,aAAaI,WAAWC,QAAQF,EAArCJ,CACIO,IACEP,KAAKQ,WAAaD,EACdA,GAAYA,EAASE,IACvBT,KAAKU,QAAQH,EAASI,UAQlCpC,QAAOM,QAAEA,IACPmB,KAAKY,SAAU,EACf/B,EAAQQ,OAAOwB,GAAUC,aACzBjC,EAAQQ,OAAO0B,GACVC,OAAOC,GAAWC,EAAUlB,KAAKC,aAAakB,eAAeF,KAC7DG,KAAKC,IACJrB,KAAKU,QAAQW,GACbrB,KAAKY,SAAU,IAEhBU,MAAMC,IACDA,aAAaC,EACfC,QAAQC,MAAM,oCAAqCH,EAAEI,QAErDF,QAAQC,MAAM,iCAAkCH,KAM1DhD,SAEE,MAAMK,QAAEA,GAAkCoB,KAAKD,SACzC6B,EAAeC,EAAYC,KAAKjC,EAAkBG,KAAKD,SAAShB,IAAIgD,IAE1E,MAAO,KACD/B,KAAKY,QACPhC,EAAQoD,UAAUC,IAAIL,GAEtBhD,EAAQoD,UAAUE,OAAON,IAKvBrD,SACJ4D,SACEA,EAAQC,MACRA,EAAKC,IACLA,EAAGC,MACHA,IAIctC,KAAKD,SAAShB,IAAIwD,GACqDxD,IAAIyD,GAExFC,KAAKC,IACJA,EAAE7D,UACJ6D,EAAE7D,QAAQ8D,GAAK,CACbR,SAAAA,EACAC,MAAAA,EACAC,IAAAA,EACAC,MAAAA,QAxERM,GADCC,mCAIDD,GADCE,EAAa,CAAEC,QAAS,+CAmBzBH,GADCI,gCAoBDJ,GADCK,gCA5CUnD,KArBZ1B,EACG,CAAC,WAAYC,GACb,CACE6E,QAAS,CACPC,MAAO,CACLhF,EACAiF,EACA3D,EACA4D,EACAzD,EACA0D,KAINC,EAAuC,CACrCC,WAAY,CACVpB,MAAO,GACPD,SAAU,QAILrC,GC5Cb2D,EAAeC,KAAK5D"}