{"version":3,"file":"main.e8a8abcc.js","sources":["../../src/pages/settings/change-password.component.ts","../../src/pages/settings/user-bio.component.ts","../../src/pages/settings/user-image.component.ts","../../src/pages/settings/settings.component.ts","../../src/pages/settings/main.ts"],"sourcesContent":["import { InConverter, InMode, InStyledElement, inText } from '@frontmeans/input-aspects';\nimport { arrayOfElements } from '@proc7ts/primitives';\nimport { Field, SharedField } from '@wesib/generic/forms';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\n\n@Component(['change-password', Conduit__NS])\nexport class ChangePasswordComponent {\n\n  @SharedField()\n  password?: Field<string | undefined>;\n\n  constructor(context: ComponentContext) {\n    context.whenSettled(({ element }: { element: Element }) => {\n      this.password = Field.by(\n          ({ aspects }: { aspects?: InConverter.Aspect<any, any> }) => {\n\n            const input = element.querySelector('input')!;\n            const text = inText(input, { aspects });\n            const control = text.convert<string | undefined>(\n                {\n                  get(value) {\n                    return value || '';\n                  },\n                  set(value) {\n                    return value || undefined;\n                  },\n                },\n                InStyledElement.to(input),\n                ...arrayOfElements(aspects),\n            );\n\n            text.aspect(InMode).derive(control.aspect(InMode));\n\n            return control;\n          },\n      );\n    });\n  }\n\n}\n","import { inText } from '@frontmeans/input-aspects';\nimport { Field, SharedField } from '@wesib/generic/forms';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\n\n@Component(['user-bio', Conduit__NS])\nexport class UserBioComponent {\n\n  @SharedField()\n  bio?: Field<string>;\n\n  constructor(context: ComponentContext) {\n    context.whenSettled(({ element }: { element: Element }) => {\n      this.bio = Field.by(opts => inText(element.querySelector('textarea')!, opts));\n    });\n  }\n\n}\n","import { inText } from '@frontmeans/input-aspects';\nimport { Field, SharedField } from '@wesib/generic/forms';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\n\n@Component(['user-image', Conduit__NS])\nexport class UserImageComponent {\n\n  @SharedField()\n  image?: Field<string>;\n\n  constructor(context: ComponentContext) {\n    context.whenSettled(({ element }: { element: Element }) => {\n      this.image = Field.by(opts => inText(element.querySelector('input')!, opts));\n    });\n  }\n\n}\n","import { inFormElement, inGroup, InStatus, InSubmit, InSubmitError } from '@frontmeans/input-aspects';\nimport { css__naming, QualifiedName } from '@frontmeans/namespace-aliaser';\nimport { supplyOn } from '@proc7ts/fun-events';\nimport { Field, Form, FormShare, OnSubmit, SharedField, SharedForm } from '@wesib/generic/forms';\nimport {\n  Component,\n  ComponentContext,\n  DefaultNamespaceAliaser,\n  ElementRenderer,\n  Render,\n  StateProperty,\n} from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { apiSubmit } from '../../core/api';\nimport { AuthService, AuthUser, UpdateSettingsRequest } from '../../core/auth';\nimport { ConduitFormsSupport, submitButton } from '../../core/forms';\nimport { LoadStatus, RenderLoader } from '../../core/loader';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { UserBioComponent } from './user-bio.component';\nimport { UserEmailComponent } from './user-email.component';\nimport { UserImageComponent } from './user-image.component';\nimport { UserNameComponent } from './user-name.component';\n\nconst updatedClassName: QualifiedName = ['updated', Conduit__NS];\n\n@Component(\n    ['settings', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ChangePasswordComponent,\n          ConduitFormsSupport,\n          UserBioComponent,\n          UserEmailComponent,\n          UserImageComponent,\n          UserNameComponent,\n        ],\n      },\n    },\n)\nexport class SettingsComponent {\n\n  private readonly _authService: AuthService;\n\n  @StateProperty()\n  updated = false;\n\n  @RenderLoader({ comment: 'settings' })\n  loadStatus?: LoadStatus;\n\n  @SharedForm()\n  form?: Form<UpdateSettingsRequest>;\n\n  @SharedField({\n    form: {\n      share: FormShare,\n      local: true,\n    },\n    name: '',\n  })\n  submitButton?: Field<void>;\n\n  constructor(private readonly _context: ComponentContext) {\n    this._authService = _context.get(AuthService);\n    this._authService.loadUser().do(supplyOn(_context))(\n        response => {\n          this.loadStatus = response;\n          if (response && response.ok) {\n            this.setUser(response.body);\n          }\n        },\n    );\n\n    _context.whenSettled(({ element }: { element: Element }) => {\n      this.form = Form.by(\n          opts => inGroup(\n              {\n                email: '',\n                username: '',\n              },\n              opts,\n          ),\n          opts => inFormElement(element.querySelector('form')!, opts),\n      );\n      this.submitButton = submitButton(element.querySelector('button')!);\n    });\n  }\n\n  @OnSubmit()\n  submit({ control }: Form.Controls<UpdateSettingsRequest>): void {\n    this.updated = false;\n    control.aspect(InStatus).markEdited();\n    control.aspect(InSubmit)\n        .submit(request => apiSubmit(this._authService.updateSettings(request)))\n        .then(user => {\n          this.setUser(user);\n          this.updated = true;\n        })\n        .catch(e => {\n          if (e instanceof InSubmitError) {\n            console.error('Failed to update user settings', ...e.errors);\n          } else {\n            console.error('Failed to update user settings', e);\n          }\n        });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { element }: { element: Element } = this._context;\n    const updatedClass = css__naming.name(updatedClassName, this._context.get(DefaultNamespaceAliaser));\n\n    return () => {\n      if (this.updated) {\n        element.classList.add(updatedClass);\n      } else {\n        element.classList.remove(updatedClass);\n      }\n    };\n  }\n\n  private setUser(\n      {\n        username,\n        email,\n        bio,\n        image,\n      }: AuthUser,\n  ): void {\n\n    const control = this?.form?.control;\n\n    if (control) {\n      control.it = {\n        username,\n        email,\n        bio,\n        image,\n      };\n    }\n  }\n\n}\n","import { conduitContext } from '../../core/main';\nimport { SettingsComponent } from './settings.component';\n\nconduitContext.load(SettingsComponent);\n"],"names":["ChangePasswordComponent","[object Object]","context","whenSettled","element","this","password","Field","by","aspects","input","querySelector","text","inText","control","convert","get","value","set","undefined","InStyledElement","to","arrayOfElements","aspect","InMode","derive","__decorate","SharedField","Component","Conduit__NS","UserBioComponent","bio","opts","UserImageComponent","image","updatedClassName","SettingsComponent","_context","_authService","AuthService","loadUser","do","supplyOn","response","loadStatus","ok","setUser","body","form","Form","inGroup","email","username","inFormElement","submitButton","updated","InStatus","markEdited","InSubmit","submit","request","apiSubmit","updateSettings","then","user","catch","e","InSubmitError","console","error","errors","updatedClass","css__naming","name","DefaultNamespaceAliaser","classList","add","remove","it","StateProperty","RenderLoader","comment","SharedForm","share","FormShare","local","OnSubmit","Render","feature","needs","ConduitFormsSupport","UserEmailComponent","UserNameComponent","conduitContext","load"],"mappings":"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"}