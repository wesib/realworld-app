{"version":3,"file":"main.12156ace.js","sources":["../../src/pages/login/login-email.component.ts","../../src/pages/login/login-password.component.ts","../../src/pages/login/login.component.ts","../../src/pages/login/index.ts"],"sourcesContent":["import { SetInputName, UseInputElement } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { InCssClasses, inCssInfo, inText, InValidation, requirePresent } from 'input-aspects';\nimport { bootstrapCssError, Conduit__NS } from '../../common';\n\n@Component(\n    ['login-email', Conduit__NS],\n    UseInputElement({\n      makeControl({ node, aspects }) {\n        return inText(node.element, { aspects })\n            .setup(InValidation, validation => validation.by(requirePresent()))\n            .setup(InCssClasses, classes => {\n              classes.add(inCssInfo());\n              classes.add(bootstrapCssError());\n            });\n      },\n    }),\n    SetInputName('email'),\n)\nexport class LoginEmailComponent {\n}\n","import { SetInputName, UseInputElement } from '@wesib/generic/input';\nimport { Component } from '@wesib/wesib';\nimport { InCssClasses, inCssInfo, inText, InValidation, requirePresent } from 'input-aspects';\nimport { bootstrapCssError, Conduit__NS } from '../../common';\n\n@Component(\n    ['login-password', Conduit__NS],\n    UseInputElement({\n      makeControl({ node, aspects }) {\n        return inText(node.element, { aspects })\n            .setup(InValidation, validation => validation.by(requirePresent()))\n            .setup(InCssClasses, classes => {\n              classes.add(inCssInfo());\n              classes.add(bootstrapCssError());\n            });\n      },\n    }),\n    SetInputName('password'),\n)\nexport class LoginPasswordComponent {\n}\n","import { ComponentNode, HandleNavLinks } from '@wesib/generic';\nimport { DefaultInAspects, inputFromControl } from '@wesib/generic/input';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { afterAll, eventSupply, eventSupplyOf } from 'fun-events';\nimport { DomEventDispatcher } from 'fun-events/dom';\nimport {\n  InCssClasses,\n  inCssInfo,\n  inFormElement,\n  InGroup,\n  inGroup,\n  InMode,\n  inModeByValidity,\n  InStatus,\n  InSubmit,\n  inSubmitButton,\n  InSubmitError,\n} from 'input-aspects';\nimport { apiSubmit, AuthService, Conduit__NS, LoginRequest } from '../../common';\nimport { LoginEmailComponent } from './login-email.component';\nimport { LoginPasswordComponent } from './login-password.component';\n\n@Component(\n    ['login', Conduit__NS],\n    HandleNavLinks(),\n    {\n      feature: {\n        needs: [\n          LoginEmailComponent,\n          LoginPasswordComponent,\n        ],\n      },\n    },\n)\nexport class LoginComponent {\n\n  constructor(context: ComponentContext) {\n\n    const componentNode = context.get(ComponentNode);\n    const authService = context.get(AuthService);\n\n    context.whenOn(connectSupply => {\n\n      afterAll({\n        form: componentNode.select('form', { all: true, deep: true }).first,\n        button: componentNode.select('button', { all: true, deep: true }).first,\n        aspects: context.get(DefaultInAspects),\n      }).consume(\n          ({\n            form: [form],\n            button: [button],\n            aspects: [aspects],\n          }) => {\n            if (!form) {\n              return;\n            }\n\n            const formSupply = eventSupply();\n            const group: InGroup<LoginRequest> = inGroup<LoginRequest>({\n              email: '',\n              password: '',\n            })\n                .setup(control => eventSupplyOf(control).needs(formSupply))\n                .setup(InCssClasses, classes => classes.add(inCssInfo()))\n                .setup(InMode, mode => mode.derive(inModeByValidity()));\n\n            inFormElement(form.element, { form: group, aspects })\n                .setup(InCssClasses, classes => classes.add(group.aspect(InCssClasses)));\n\n            if (button) {\n              inSubmitButton(button.element, { form: group, aspects });\n            }\n\n            const submitDispatcher = new DomEventDispatcher(form.element);\n\n            eventSupplyOf(submitDispatcher).needs(group);\n            submitDispatcher.on('submit').instead(() => {\n              group.aspect(InStatus).markEdited();\n              group.aspect(InSubmit)\n                  .submit(request => apiSubmit(authService.login(request)))\n                  .catch(e => {\n                    if (e instanceof InSubmitError) {\n                      console.log('Failed to login', ...e.errors);\n                    } else {\n                      console.log('Failed to login', e);\n                    }\n                  });\n            });\n\n            inputFromControl(context, group);\n\n            return formSupply;\n          },\n      ).needs(connectSupply);\n    });\n  }\n\n}\n","import { conduitContext } from '../../common';\nimport { LoginComponent } from './login.component';\n\nexport * from './login-email.component';\nexport * from './login-password.component';\n\nconduitContext.load(LoginComponent);\n"],"names":["LoginEmailComponent","Component","Conduit__NS","UseInputElement","makeControl","node","aspects","inText","element","setup","InValidation","validation","by","requirePresent","InCssClasses","classes","add","inCssInfo","bootstrapCssError","SetInputName","LoginPasswordComponent","LoginComponent","[object Object]","context","componentNode","get","ComponentNode","authService","AuthService","whenOn","connectSupply","afterAll","form","select","all","deep","first","button","DefaultInAspects","consume","formSupply","eventSupply","group","inGroup","email","password","control","eventSupplyOf","needs","InMode","mode","derive","inModeByValidity","inFormElement","aspect","inSubmitButton","submitDispatcher","DomEventDispatcher","on","instead","InStatus","markEdited","InSubmit","submit","request","apiSubmit","login","catch","e","InSubmitError","console","log","errors","inputFromControl","HandleNavLinks","feature","conduitContext","load"],"mappings":"kVAmBaA,EAAb,QAAaA,KAdZC,EACG,CAAC,cAAeC,GAChBC,EAAgB,CACdC,YAAW,EAACC,KAAEA,EAAIC,QAAEA,KACXC,EAAOF,EAAKG,QAAS,CAAEF,QAAAA,IACzBG,MAAMC,EAAcC,GAAcA,EAAWC,GAAGC,MAChDJ,MAAMK,EAAcC,IACnBA,EAAQC,IAAIC,KACZF,EAAQC,IAAIE,SAItBC,EAAa,WAEJnB,OCAAoB,EAAb,QAAaA,KAdZnB,EACG,CAAC,iBAAkBC,GACnBC,EAAgB,CACdC,YAAW,EAACC,KAAEA,EAAIC,QAAEA,KACXC,EAAOF,EAAKG,QAAS,CAAEF,QAAAA,IACzBG,MAAMC,EAAcC,GAAcA,EAAWC,GAAGC,MAChDJ,MAAMK,EAAcC,IACnBA,EAAQC,IAAIC,KACZF,EAAQC,IAAIE,SAItBC,EAAa,cAEJC,GCeb,IAAaC,EAAb,MAEEC,YAAYC,GAEV,MAAMC,EAAgBD,EAAQE,IAAIC,GAC5BC,EAAcJ,EAAQE,IAAIG,GAEhCL,EAAQM,OAAOC,IAEbC,EAAS,CACPC,KAAMR,EAAcS,OAAO,OAAQ,CAAEC,KAAK,EAAMC,MAAM,IAAQC,MAC9DC,OAAQb,EAAcS,OAAO,SAAU,CAAEC,KAAK,EAAMC,MAAM,IAAQC,MAClE9B,QAASiB,EAAQE,IAAIa,KACpBC,QACC,EACEP,MAAOA,GACPK,QAASA,GACT/B,SAAUA,OAEV,IAAK0B,EACH,OAGF,MAAMQ,EAAaC,IACbC,EAA+BC,EAAsB,CACzDC,MAAO,GACPC,SAAU,KAEPpC,MAAMqC,GAAWC,EAAcD,GAASE,MAAMR,IAC9C/B,MAAMK,EAAcC,GAAWA,EAAQC,IAAIC,MAC3CR,MAAMwC,EAAQC,GAAQA,EAAKC,OAAOC,MAEvCC,EAAcrB,EAAKxB,QAAS,CAAEwB,KAAMU,EAAOpC,QAAAA,IACtCG,MAAMK,EAAcC,GAAWA,EAAQC,IAAI0B,EAAMY,OAAOxC,KAEzDuB,GACFkB,EAAelB,EAAO7B,QAAS,CAAEwB,KAAMU,EAAOpC,QAAAA,IAGhD,MAAMkD,EAAmB,IAAIC,EAAmBzB,EAAKxB,SAkBrD,OAhBAuC,EAAcS,GAAkBR,MAAMN,GACtCc,EAAiBE,GAAG,UAAUC,QAAQ,KACpCjB,EAAMY,OAAOM,GAAUC,aACvBnB,EAAMY,OAAOQ,GACRC,OAAOC,GAAWC,EAAUtC,EAAYuC,MAAMF,KAC9CG,MAAMC,IACDA,aAAaC,EACfC,QAAQC,IAAI,qBAAsBH,EAAEI,QAEpCF,QAAQC,IAAI,kBAAmBH,OAKzCK,EAAiBlD,EAASmB,GAEnBF,IAEXQ,MAAMlB,OA3DDT,KAZZpB,EACG,CAAC,QAASC,GACVwE,IACA,CACEC,QAAS,CACP3B,MAAO,CACLhD,EACAoB,OAKGC,GC5BbuD,EAAeC,KAAKxD"}