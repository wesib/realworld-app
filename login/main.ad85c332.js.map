{"version":3,"file":"main.ad85c332.js","sources":["../../src/pages/login/login.component.ts","../../src/pages/login/main.ts"],"sourcesContent":["import { inFormElement, inGroup, InStatus, InSubmit, InSubmitError } from '@frontmeans/input-aspects';\nimport { HandleNavLinks, Navigation } from '@wesib/generic';\nimport { Field, Form, FormShare, OnSubmit, SharedField, SharedForm } from '@wesib/generic/forms';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { apiSubmit } from '../../core/api';\nimport { AuthService, LoginRequest } from '../../core/auth';\nimport { ConduitFormsSupport, submitButton } from '../../core/forms';\nimport { UserEmailComponent } from '../settings/user-email.component';\nimport { UserPasswordComponent } from '../settings/user-password.component';\n\n@Component(\n    ['login', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ConduitFormsSupport,\n          UserEmailComponent,\n          UserPasswordComponent,\n        ],\n      },\n    },\n    HandleNavLinks(),\n)\nexport class LoginComponent {\n\n  private readonly _authService: AuthService;\n  private readonly _navigation: Navigation;\n\n  @SharedForm()\n  form?: Form<LoginRequest>;\n\n  @SharedField({\n    form: {\n      share: FormShare,\n      local: true,\n    },\n    name: '',\n  })\n  submitButton?: Field<void>;\n\n  constructor(context: ComponentContext) {\n    this._authService = context.get(AuthService);\n    this._navigation = context.get(Navigation);\n\n    context.whenSettled(({ element }: { element: Element }) => {\n      this.form = Form.by(\n          opts => inGroup(\n              {\n                email: '',\n                password: '',\n              },\n              opts,\n          ),\n          opts => inFormElement(element.querySelector('form')!, opts),\n      );\n      this.submitButton = submitButton(element.querySelector('button')!);\n    });\n  }\n\n  @OnSubmit()\n  submit({ control }: Form.Controls<LoginRequest>): void {\n    control.aspect(InStatus).markEdited();\n    control.aspect(InSubmit)\n        .submit(request => apiSubmit(this._authService.login(request)))\n        .then(() => this._navigation.open('.'))\n        .catch(e => {\n          if (e instanceof InSubmitError) {\n            console.error('Failed to login', ...e.errors);\n          } else {\n            console.error('Failed to login', e);\n          }\n        });\n  }\n\n}\n","import { conduitContext } from '../../core/main';\nimport { LoginComponent } from './login.component';\n\nconduitContext.load(LoginComponent);\n"],"names":["LoginComponent","[object Object]","context","this","_authService","get","AuthService","_navigation","Navigation","whenSettled","element","form","Form","by","opts","inGroup","email","password","inFormElement","querySelector","submitButton","control","aspect","InStatus","markEdited","InSubmit","submit","request","apiSubmit","login","then","open","catch","e","InSubmitError","console","error","errors","__decorate","SharedForm","SharedField","share","FormShare","local","name","OnSubmit","Component","Conduit__NS","feature","needs","ConduitFormsSupport","UserEmailComponent","UserPasswordComponent","HandleNavLinks","conduitContext","load"],"mappings":"qzCAwBA,IAAaA,EAAb,MAiBEC,YAAYC,GACVC,KAAKC,aAAeF,EAAQG,IAAIC,GAChCH,KAAKI,YAAcL,EAAQG,IAAIG,GAE/BN,EAAQO,aAAY,EAAGC,QAAAA,MACrBP,KAAKQ,KAAOC,EAAKC,IACbC,GAAQC,EACJ,CACEC,MAAO,GACPC,SAAU,IAEZH,KAEJA,GAAQI,EAAcR,EAAQS,cAAc,QAAUL,KAE1DX,KAAKiB,aAAeA,EAAaV,EAAQS,cAAc,cAK3DlB,QAAOoB,QAAEA,IACPA,EAAQC,OAAOC,GAAUC,aACzBH,EAAQC,OAAOG,GACVC,QAAOC,GAAWC,EAAUzB,KAAKC,aAAayB,MAAMF,MACpDG,MAAK,IAAM3B,KAAKI,YAAYwB,KAAK,OACjCC,OAAMC,IACDA,aAAaC,EACfC,QAAQC,MAAM,qBAAsBH,EAAEI,QAEtCF,QAAQC,MAAM,kBAAmBH,QAxC3CK,GADCC,gCAUDD,GAPCE,EAAY,CACX7B,KAAM,CACJ8B,MAAOC,EACPC,OAAO,GAETC,KAAM,yCAwBRN,GADCO,gCApCU7C,KAbZ8C,EACG,CAAC,QAASC,GACV,CACEC,QAAS,CACPC,MAAO,CACLC,EACAC,EACAC,KAINC,MAESrD,GCrBbsD,EAAeC,KAAKvD"}