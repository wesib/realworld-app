{"version":3,"file":"common.7d2d7d7a.js","sources":["../../src/common/auth/auth-service.key.impl.ts","../../src/common/auth/auth-service.ts","../../src/common/api/api-root-url.ts","../../src/common/api/api-fetch.ts","../../src/common/auth/auth-service.impl.ts","../../src/common/auth/auth-support.feature.ts","../../src/common/conduit.ns.ts","../../src/common/layout/main.component.ts","../../src/common/navigation/enable-navigation-links.ts","../../src/common/layout/navbar.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/footer.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/conduit.feature.ts","../../src/common/input/enable-in-group-control.ts","../../src/common/index.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { AuthService } from './auth-service';\n\nexport const AuthService__key = new SingleContextKey<AuthService>('auth-service');\n","import { ContextKey, ContextKey__symbol } from 'context-values';\nimport { AfterEvent, OnEvent } from 'fun-events';\nimport { ApiResponse } from '../api';\nimport { AuthService__key } from './auth-service.key.impl';\nimport { AuthUser } from './auth-user';\n\nexport type AuthUserOrFailure = [] | [AuthUser] | [undefined, ApiResponse.Failure];\n\nexport interface SignInRequest {\n  readonly email: string;\n  readonly password: string;\n}\n\nexport abstract class AuthService {\n\n  static get [ContextKey__symbol](): ContextKey<AuthService> {\n    return AuthService__key;\n  }\n\n  abstract readonly user: AfterEvent<AuthUserOrFailure>;\n\n  abstract signIn(request: SignInRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract signOut(): void;\n\n}\n","import { SingleContextUpKey, SingleContextUpRef } from 'context-values';\n\nexport type ApiRootURL = URL;\n\nexport const ApiRootURL: SingleContextUpRef<ApiRootURL> = new SingleContextUpKey<ApiRootURL>(\n    'api-root-url',\n    {\n      byDefault: () => new URL('https://conduit.productionready.io/api/'),\n    },\n);\n","import { HttpFetch } from '@wesib/generic';\nimport { BootstrapContext, bootstrapDefault } from '@wesib/wesib';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { AfterEvent, afterThe, EventNotifier, OnEvent, onEventBy } from 'fun-events';\nimport { AuthService__key } from '../auth/auth-service.key.impl';\nimport { ApiRootURL } from './api-root-url';\n\n/**\n * Request to some API endpoint.\n */\nexport interface ApiRequest {\n\n  /**\n   * API endpoint path __relative__ to {@link ApiRootURL API root URL}.\n   *\n   * Do not start it with `/` as this would make it absolute.\n   */\n  readonly path: string;\n\n  /**\n   * Additional HTTP request options.\n   */\n  readonly init?: RequestInit;\n\n  /**\n   * Whether to send authentication token.\n   *\n   * - `true` to always send it,\n   * - `false` to never send it,\n   * - `undefined` (the default) - to send it only if {@link AuthService.user current user} is authenticated.\n   */\n  readonly auth?: boolean;\n}\n\nexport type ApiResponse<T = any> =\n    | ApiResponse.Ok<T>\n    | ApiResponse.Failure;\n\nexport namespace ApiResponse {\n\n  export interface Ok<T = any> {\n    readonly ok: true;\n    readonly response: Response;\n    readonly body: T;\n  }\n\n  export interface Failure {\n    readonly ok: false;\n    readonly response?: Response;\n    readonly errors: Errors;\n  }\n\n  export interface Errors {\n    readonly [field: string]: readonly string[];\n  }\n\n}\n\nexport type ApiFetch<T = any> = (this: void, request: ApiRequest) => OnEvent<[ApiResponse<T>]>;\n\nexport const ApiFetch: FnContextRef<[ApiRequest], OnEvent<[ApiResponse]>> = (\n    new FnContextKey<[ApiRequest], OnEvent<[ApiResponse]>>(\n        'api-fetch',\n        {\n          byDefault: bootstrapDefault(newApiFetch),\n        },\n    ));\n\ntype RequestOrFailure =\n    | { request: Request }\n    | { request?: undefined; failure: ApiResponse.Failure };\ntype ResponseOrFailure =\n    | { response: Response }\n    | { response?: undefined; failure: ApiResponse.Failure };\n\nfunction newApiFetch(context: BootstrapContext): ApiFetch {\n\n  const httpFetch = context.get(HttpFetch);\n  const apiRootURL = context.get(ApiRootURL);\n\n  return ({ path, init, auth }) => apiRootURL.thru_(\n      baseURL => new URL(path, baseURL),\n      url => buildApiRequest(url, init),\n  ).dig_(\n      request => auth === false\n          ? afterThe<[RequestOrFailure]>({ request })\n          : authenticateApiRequest(context, request, auth),\n  ).dig_(\n      requestOrFailure => requestOrFailure.request\n          ? httpFetch(requestOrFailure.request).thru_(response => ({ response }))\n          : afterThe<[ResponseOrFailure]>({ failure: requestOrFailure.failure }),\n  ).dig_(\n      handleApiResponse,\n  );\n}\n\nfunction buildApiRequest(url: URL, init: RequestInit = {}): Request {\n\n  const request = new Request(url.href, { mode: 'cors', ...init });\n  const { headers } = request;\n\n  headers.set('X-Requested-With', 'XMLHttpRequest');\n  if (request.body != null && !headers.has('Content-Type')) {\n    headers.set('Content-Type', 'application/json');\n  }\n\n  return request;\n}\n\nfunction authenticateApiRequest(\n    context: BootstrapContext,\n    request: Request,\n    auth?: true,\n): AfterEvent<[RequestOrFailure]> {\n  // Access by key to avoid circular dependencies during the build\n  return context.get(AuthService__key).user.keep.thru_(\n      (user?, failure?) => {\n        if (user) {\n          request.headers.set('Authorization', `Token ${user.token}`);\n          return { request };\n        }\n        if (!auth) {\n          return { request };\n        }\n        if (!failure) {\n          failure = {\n            ok: false,\n            errors: {\n              api: ['Not authenticated'],\n            },\n          };\n        }\n        return { failure };\n      },\n  );\n}\n\nfunction handleApiResponse(responseOfFailure: ResponseOrFailure): OnEvent<[ApiResponse]> {\n  return onEventBy<[ApiResponse]>(receiver => {\n\n    const sender = new EventNotifier<[ApiResponse]>();\n\n    sender.on(receiver);\n\n    if (!responseOfFailure.response) {\n      sender.send(responseOfFailure.failure);\n    } else {\n\n      const { response } = responseOfFailure;\n\n      response.json().then(\n          body => {\n            if (response.ok) {\n              sender.send({\n                ok: true,\n                response,\n                body,\n              });\n            } else {\n              sender.send({\n                ok: false,\n                response,\n                errors: body.errors || {\n                  http: [\n                      response.statusText\n                          ? `${response.status}: ${response.statusText}`\n                          : `ERROR ${response.status}`,\n                  ],\n                },\n              });\n            }\n          },\n      ).catch(\n          error => {\n            sender.send({\n              ok: false,\n              response,\n              errors: {\n                api: [`Failed to parse response: ${error}`],\n              },\n            });\n          },\n      );\n    }\n\n    sender.done();\n  });\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { nextArgs, valuesProvider } from 'call-thru';\nimport { AfterEvent, afterEventBy, afterThe, eventSupply, OnEvent, trackValue, ValueTracker } from 'fun-events';\nimport { ApiFetch, ApiResponse } from '../api';\nimport { AuthService as AuthService_, AuthUserOrFailure, SignInRequest } from './auth-service';\nimport { AuthUser } from './auth-user';\n\nconst authTokenKey = 'wesib-conduit:auth';\ntype Authentication = AuthUser | string | null;\n\nexport class AuthService extends AuthService_ {\n\n  readonly user: AfterEvent<AuthUserOrFailure>;\n  private readonly _auth: ValueTracker<Authentication>;\n\n  constructor(private readonly _context: BootstrapContext) {\n    super();\n\n    const storage = _context.get(BootstrapWindow).localStorage;\n\n    this._auth = trackValue(storage.getItem(authTokenKey));\n    this._auth.on(updateAuthToken);\n    this.user = this._auth.read.keep.dig(authUser);\n\n    function updateAuthToken(newAuth: Authentication): void {\n      if (!newAuth) {\n        storage.removeItem(authTokenKey);\n      } else {\n        storage.setItem(authTokenKey, typeof newAuth === 'string' ? newAuth : newAuth.token);\n      }\n    }\n\n    function authUser(auth: Authentication): AfterEvent<AuthUserOrFailure> {\n      if (!auth) {\n        return afterThe();\n      }\n      if (typeof auth === 'string') {\n        return fetchCurrentUser(auth);\n      }\n      return afterThe(auth);\n    }\n\n    function fetchCurrentUser(token: string): AfterEvent<AuthUserOrFailure> {\n\n      const apiFetch: ApiFetch<AuthUser> = _context.get(ApiFetch);\n\n      return afterEventBy<AuthUserOrFailure>(\n          receiver => {\n            apiFetch({\n              path: 'user',\n              init: {\n                headers: {\n                  Authorization: `Token ${token}`,\n                },\n              },\n              auth: false,\n            }).thru_(\n                (response: ApiResponse<AuthUser>) => {\n                  if (response.ok) {\n                    return nextArgs<AuthUserOrFailure, unknown>(response.body);\n                  }\n                  return nextArgs<AuthUserOrFailure, unknown>(undefined, response);\n                },\n            )({\n              supply: eventSupply().needs(receiver.supply), // Do not abort after user received\n              receive(ctx, ...event) {\n                receiver.receive(ctx, ...event);\n              },\n            });\n          },\n          valuesProvider(),\n      );\n    }\n  }\n\n  signIn(request: SignInRequest): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch<AuthUser> = this._context.get(ApiFetch);\n\n    return apiFetch({\n      path: 'users/login',\n      init: {\n        method: 'POST',\n        body: JSON.stringify(request),\n      },\n      auth: false,\n    }).thru_(\n        response => {\n          if (response.ok) {\n            this._auth.it = response.body;\n          } else {\n            this._auth.it = null;\n          }\n          return response;\n        },\n    );\n  }\n\n  signOut(): void {\n    this._auth.it = null;\n  }\n\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthService } from './auth-service';\nimport { AuthService as AuthService_ } from './auth-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: AuthService, as: AuthService_ });\n  },\n})\nexport class AuthSupport {\n}\n","import { NamespaceDef } from 'namespace-aliaser';\n\nexport const Conduit__NS: NamespaceDef = new NamespaceDef(\n    'https://wesib.github.io/realworld-app/ns/',\n    'conduit',\n);\n","import { importNodeContent, Navigation, pageLoadParam, PageLoadResponse } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, ElementRender, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { Conduit__NS } from '../conduit.ns';\n\n@Component(['main', Conduit__NS])\nexport class MainComponent {\n\n  private readonly _response = trackValue<PageLoadResponse>();\n\n  constructor(private readonly _context: ComponentContext) {\n    this._response.on((n, o) => _context.updateState('response', n, o));\n\n    const navigation = _context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: _context.element.tagName },\n              receiver: {\n                supply,\n                receive: (_ctx, response) => this._response.it = response,\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @Render()\n  render(): ElementRender {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.element);\n\n    return () => {\n\n      const response = this._response.it;\n\n      if (response) {\n        range.deleteContents();\n        if (response.ok) {\n\n          const target = document.createDocumentFragment();\n          const { fragment } = response;\n\n          if (fragment) {\n            importNodeContent(fragment, target);\n            range.insertNode(target);\n          }\n        } else if (response.ok == null) {\n          range.insertNode(document.createTextNode('Loading...'));\n        } else {\n          range.insertNode(document.createTextNode(`Error. ${response.error}`));\n        }\n      }\n    };\n  }\n\n}\n","import { ComponentNode, ComponentTreeSupport, ElementNode, ElementPickMode, Navigation } from '@wesib/generic';\nimport { BootstrapWindow, ComponentDef, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, EventSupply } from 'fun-events';\nimport { DomEventDispatcher } from 'fun-events/dom';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\n\nexport function enableNavigationLinks(\n    {\n      select = 'a',\n      pick = { all: true, deep: true },\n      active,\n    }: {\n      select?: string;\n      pick?: ElementPickMode;\n      active?: QualifiedName;\n    } = {},\n): ComponentDef {\n  return {\n    feature: {\n      needs: ComponentTreeSupport,\n    },\n    define(defContext) {\n\n      const activeClass = active && css__naming.name(active, defContext.get(DefaultNamespaceAliaser));\n      const base = new URL(defContext.get(BootstrapWindow).document.baseURI);\n\n      defContext.whenComponent(context => {\n\n        const node = context.get(ComponentNode);\n        const navigation = context.get(Navigation);\n\n        context.whenOn(supply => {\n\n          const navLinks = node.select(select, pick);\n          const linkSupplies = new Map<ElementNode, EventSupply>();\n\n          navLinks.track.tillOff(supply)((added, removed) => {\n            removed.forEach(link => {\n\n              const linkSupply = linkSupplies.get(link);\n\n              if (linkSupply) {\n                linkSupplies.delete(link);\n                linkSupply.off();\n              }\n            });\n            added.forEach(\n                link => {\n\n                  const element: Element = link.element;\n                  const linkSupply = new DomEventDispatcher(element)\n                      .on<KeyboardEvent>('click')(\n                          event => {\n                            if (!activeClass || !element.classList.contains(activeClass)) {\n\n                              const href = element.getAttribute('href') || '';\n\n                              if (new URL(href, base).hostname === base.hostname) {\n                                navigation.open(href);\n                                event.preventDefault();\n                              }\n                              // Navigate to absolute URL otherwise\n                            }\n                          },\n                      )\n                      .needs(supply);\n\n                  linkSupplies.set(link, linkSupply);\n                },\n            );\n          });\n\n          if (activeClass) {\n            afterAll({\n              links: navLinks,\n              page: navigation,\n            })({\n              supply,\n              receive(\n                  _ctx,\n                  {\n                    links: [links],\n                    page: [page],\n                  },\n              ) {\n\n                const pageDir = dirName(page.url);\n                let activeElement: Element | undefined;\n                let activeDir = '';\n\n                links.forEach(link => {\n\n                  const element: HTMLAnchorElement = link.element;\n                  const linkDir = dirName(new URL(element.href));\n\n                  element.classList.remove(activeClass);\n\n                  if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n                    activeElement = element;\n                    activeDir = linkDir;\n                  }\n                });\n\n                if (activeElement) {\n                  activeElement.classList.add(activeClass);\n                }\n              },\n            });\n          }\n        });\n      });\n    },\n  };\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n","import { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../conduit.ns';\nimport { enableNavigationLinks } from '../navigation';\n\n@Component(\n    ['navbar', Conduit__NS],\n    enableNavigationLinks({ active: 'active' }),\n)\nexport class NavbarComponent {\n}\n","import { Component, ComponentContext, DefaultNamespaceAliaser, ElementRender, Render } from '@wesib/wesib';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { AuthService, AuthUser } from '../auth';\nimport { Conduit__NS } from '../conduit.ns';\nimport { MainComponent } from './main.component';\nimport { NavbarComponent } from './navbar.component';\n\nconst authenticatedClassQName: QualifiedName = ['authenticated', Conduit__NS];\nconst notAuthenticatedClassQName: QualifiedName = ['not-authenticated', Conduit__NS];\n\n@Component({\n  name: ['container', Conduit__NS],\n  feature: {\n    needs: [MainComponent, NavbarComponent],\n  },\n})\nexport class ContainerComponent {\n\n  private _user?: AuthUser;\n\n  constructor(private readonly _context: ComponentContext) {\n    _context.whenOn(connectSupply => {\n      _context.get(AuthService).user.tillOff(connectSupply)((user?, _failure?) => {\n        this.user = user;\n      });\n    });\n  }\n\n  get user(): AuthUser | undefined {\n    return this._user;\n  }\n\n  set user(value: AuthUser | undefined) {\n\n    const oldValue = this._user;\n\n    this._user = value;\n    this._context.updateState('user', value, oldValue);\n  }\n\n  @Render()\n  render(): ElementRender {\n\n    const nsAlis = this._context.get(DefaultNamespaceAliaser);\n    const authenticatedClass = css__naming.name(authenticatedClassQName, nsAlis);\n    const notAuthenticatedClass = css__naming.name(notAuthenticatedClassQName, nsAlis);\n    const { classList }: Element = this._context.element;\n\n    return () => {\n      if (this.user) {\n        classList.remove(notAuthenticatedClass);\n        classList.add(authenticatedClass);\n      } else {\n        classList.remove(authenticatedClass);\n        classList.add(notAuthenticatedClass);\n      }\n    };\n  }\n\n}\n","import { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../conduit.ns';\nimport { enableNavigationLinks } from '../navigation';\n\n@Component(\n    ['footer', Conduit__NS],\n    enableNavigationLinks(),\n)\nexport class FooterComponent {\n}\n","import { PageLoadSupport } from '@wesib/generic';\nimport { Feature } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\nimport { FooterComponent } from './footer.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    FooterComponent,\n    PageLoadSupport,\n  ],\n})\nexport class LayoutSupport {\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthSupport } from './auth';\nimport { LayoutSupport } from './layout';\n\n@Feature({\n  needs: [\n    AuthSupport,\n    LayoutSupport,\n  ],\n})\nexport class ConduitFeature {\n}\n","import { ComponentNode, ComponentTreeSupport, ElementNode, ElementPickMode, HierarchyContext } from '@wesib/generic';\nimport { DefaultInAspects, inputFromControl, InputFromControl, InputFromNowhere } from '@wesib/generic/input';\nimport { ComponentContext, ComponentDef } from '@wesib/wesib';\nimport { afterAll, afterThe, eventSupply, EventSupply } from 'fun-events';\nimport { InControl, InConverter, InGroup } from 'input-aspects';\n\nexport function enableInGroupControl(\n    {\n      select = 'input',\n      pick = { deep: true, all: true },\n      name,\n      controlOf,\n    }: {\n      readonly select?: string;\n      readonly pick?: ElementPickMode;\n      readonly name: string | ((this: void, node: ElementNode) => string);\n      readonly controlOf: (\n          this: void,\n          opts: {\n            node: ElementNode;\n            context: ComponentContext;\n            aspects: InConverter.Aspect<any, any>;\n            supply: EventSupply;\n          },\n      ) => InControl<any>;\n    },\n): ComponentDef {\n  return {\n    feature: {\n      needs: ComponentTreeSupport,\n    },\n    define(defContext) {\n      defContext.whenComponent(context => {\n\n        const hierarchy = context.get(HierarchyContext);\n        const componentNode = context.get(ComponentNode);\n\n        context.whenOn(connectSupply => {\n          afterAll({\n            group: hierarchy.up.keep.dig_(\n                up => up ? up.get(InputFromControl) : afterThe<[InputFromNowhere]>({}),\n            ).keep.thru_(\n                ({ control }) => control && control.aspect(InGroup) as InGroup<any> | undefined,\n            ),\n            node: componentNode.select(select, pick).first,\n            aspects: context.get(DefaultInAspects),\n          }).consume(\n              ({\n                group: [group],\n                node: [node],\n                aspects: [aspects],\n              }) => {\n                if (!group || !node) {\n                  return;\n                }\n\n                const controlName = typeof name === 'function' ? name(node) : name;\n                const supply = eventSupply(() => group.controls.remove(controlName));\n                const control = controlOf({ node, context, supply, aspects });\n\n                inputFromControl(context, control).needs(supply);\n                group.controls.set(controlName, control);\n\n                return supply;\n              },\n          ).needs(connectSupply);\n        });\n      });\n    },\n  };\n}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { ConduitFeature } from './conduit.feature';\n\nexport * from './api';\nexport * from './auth';\nexport * from './conduit.feature';\nexport * from './conduit.ns';\nexport * from './input';\nexport * from './navigation';\n\nexport const conduitContext = bootstrapComponents(ConduitFeature);\n"],"names":["AuthService__key","SingleContextKey","AuthService","ContextKey__symbol","ApiRootURL","SingleContextUpKey","byDefault","URL","ApiFetch","FnContextKey","bootstrapDefault","context","httpFetch","get","HttpFetch","apiRootURL","path","init","auth","thru_","baseURL","url","request","Request","href","mode","headers","set","body","has","buildApiRequest","dig_","afterThe","user","keep","failure","token","ok","errors","api","authenticateApiRequest","requestOrFailure","response","handleApiResponse","responseOfFailure","onEventBy","receiver","sender","EventNotifier","on","json","then","send","http","statusText","status","catch","error","done","AuthService_","[object Object]","_context","super","this","storage","BootstrapWindow","localStorage","_auth","trackValue","getItem","newAuth","setItem","removeItem","read","dig","apiFetch","afterEventBy","Authorization","nextArgs","undefined","supply","eventSupply","needs","ctx","event","receive","valuesProvider","fetchCurrentUser","method","JSON","stringify","it","AuthSupport","Feature","setup","provide","a","as","Conduit__NS","NamespaceDef","MainComponent","_response","n","o","updateState","navigation","Navigation","whenOn","once","page","put","pageLoadParam","fragment","tag","element","tagName","_ctx","document","range","createRange","selectNodeContents","deleteContents","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","enableNavigationLinks","select","pick","all","deep","active","feature","ComponentTreeSupport","defContext","activeClass","css__naming","name","DefaultNamespaceAliaser","base","baseURI","whenComponent","node","ComponentNode","navLinks","linkSupplies","Map","track","tillOff","added","removed","forEach","link","linkSupply","delete","off","DomEventDispatcher","classList","contains","getAttribute","hostname","open","preventDefault","afterAll","links","pageDir","dirName","activeElement","activeDir","linkDir","remove","startsWith","length","add","pathname","endsWith","__decorate","Render","Component","NavbarComponent","authenticatedClassQName","notAuthenticatedClassQName","ContainerComponent","connectSupply","_failure","_user","value","oldValue","nsAlis","authenticatedClass","notAuthenticatedClass","FooterComponent","LayoutSupport","PageLoadSupport","ConduitFeature","enableInGroupControl","controlOf","hierarchy","HierarchyContext","componentNode","group","up","InputFromControl","control","aspect","InGroup","first","aspects","DefaultInAspects","consume","controlName","controls","inputFromControl","conduitContext","bootstrapComponents"],"mappings":"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"}