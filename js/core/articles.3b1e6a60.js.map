{"version":3,"file":"articles.3b1e6a60.js","sources":["../../../src/core/articles/article-service.ts","../../../src/core/articles/article-service.impl.ts","../../../src/core/articles/articles-support.feature.ts"],"sourcesContent":["import { ContextRef, SingleContextKey } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { ApiResponse } from '../api';\nimport { Article } from './article';\n\nexport interface ArticleService {\n\n  article(slug: string): OnEvent<[ApiResponse<Article>]>;\n\n  htmlContents(article: Article): Promise<Node>;\n\n}\n\nexport const ArticleService: ContextRef<ArticleService> = (\n    /*#__PURE__*/ new SingleContextKey<ArticleService>('article-service')\n);\n\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { OnEvent } from 'fun-events';\nimport { ApiFetch, ApiRequest, ApiResponse } from '../api';\nimport { Article } from './article';\nimport { ArticleService } from './article-service';\nimport marked from 'marked';\nimport DOMPurify from 'dompurify';\n\nexport class ArticleService$ implements ArticleService {\n\n  private readonly _apiFetch: ApiFetch;\n  private readonly _schedule: (task: () => void) => void;\n  private readonly _purify: DOMPurify.DOMPurifyI;\n\n  constructor(context: BootstrapContext) {\n    this._apiFetch = context.get(ApiFetch);\n\n    const window = context.get(BootstrapWindow);\n\n    this._purify = DOMPurify(window);\n    if ((window as any).requestIdleCallback) {\n      this._schedule = task => (window as any).requestIdleCallback(task, { timeout: 750 });\n    } else {\n      this._schedule = task => window.setTimeout(task);\n    }\n  }\n\n  article(slug: string): OnEvent<[ApiResponse<Article>]> {\n\n    const apiRequest: ApiRequest<Article> = {\n      path: `articles/${encodeURIComponent(slug)}`,\n      init: {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n      respondAs: 'article',\n    };\n\n    return this._apiFetch(apiRequest);\n  }\n\n  async htmlContents(article: Article): Promise<Node> {\n\n    const html = await new Promise<string>((resolve, reject) => {\n      this._schedule(() => {\n        marked(article.body, (error, html) => {\n          if (error != null) {\n            reject(error);\n          } else {\n            resolve(html);\n          }\n        });\n      });\n    });\n\n    return this._purify.sanitize(\n        html, {\n          RETURN_DOM_FRAGMENT: true,\n          RETURN_DOM_IMPORT: true,\n        },\n    );\n  }\n\n}\n","import { Feature } from '@wesib/wesib';\nimport { ArticleService } from './article-service';\nimport { ArticleService$ } from './article-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: ArticleService, as: ArticleService$ });\n  },\n})\nexport class ArticlesSupport {\n}\n"],"names":["ArticleService","SingleContextKey","ArticleService$","[object Object]","context","this","_apiFetch","get","ApiFetch","window","BootstrapWindow","_purify","DOMPurify","requestIdleCallback","_schedule","task","timeout","setTimeout","slug","apiRequest","path","encodeURIComponent","init","method","headers","Accept","respondAs","article","html","Promise","resolve","reject","marked","body","error","sanitize","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","ArticlesSupport","Feature","setup","provide","a","as"],"mappings":"kSAaaA,MACSC,EAAiC,yBCN1CC,EAMXC,YAAYC,GACVC,KAAKC,UAAYF,EAAQG,IAAIC,GAE7B,MAAMC,EAASL,EAAQG,IAAIG,GAE3BL,KAAKM,QAAUC,EAAUH,GACpBA,EAAeI,oBAClBR,KAAKS,UAAYC,GAASN,EAAeI,oBAAoBE,EAAM,CAAEC,QAAS,MAE9EX,KAAKS,UAAYC,GAAQN,EAAOQ,WAAWF,GAI/CZ,QAAQe,GAEN,MAAMC,EAAkC,CACtCC,KAAM,YAAYC,mBAAmBH,KACrCI,KAAM,CACJC,OAAQ,MACRC,QAAS,CACPC,OAAQ,qBAGZC,UAAW,WAGb,OAAOrB,KAAKC,UAAUa,GAGxBhB,mBAAmBwB,GAEjB,MAAMC,QAAa,IAAIC,QAAgB,CAACC,EAASC,KAC/C1B,KAAKS,UAAU,KACbkB,EAAOL,EAAQM,KAAM,CAACC,EAAON,KACd,MAATM,EACFH,EAAOG,GAEPJ,EAAQF,SAMhB,OAAOvB,KAAKM,QAAQwB,SAChBP,EAAM,CACJQ,qBAAqB,EACrBC,mBAAmB,KAK5B,ICxDYC,EAAb,QAAaA,KALZC,EAAQ,CACPpC,MAAMqC,GACJA,EAAMC,QAAQ,CAAEC,EAAG1C,EAAgB2C,GAAIzC,QAG9BoC"}