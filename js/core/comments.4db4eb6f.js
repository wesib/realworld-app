import{_ as t}from"../helpers.e1623395.js";import{F as e}from"../wesib/wesib.8c9ee002.js";import{a as o}from"../proc7ts/context-values.20584faa.js";import{a as s}from"../proc7ts/primitives.d6f0dd1c.js";import{A as n}from"./api.e1bac610.js";import"../proc7ts/workbench.03f3f31a.js";const a=new o("comment-service");class c{constructor(t){this._apiFetch=t.get(n)}articleComments(t){const e={path:`articles/${encodeURIComponent(t)}/comments`,init:{method:"GET",headers:{Accept:"application/json"}},respondAs:s};return this._apiFetch(e)}addComment(t,e){const o={path:`articles/${encodeURIComponent(t)}/comments`,init:{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({comment:{body:e}})},respondAs:"comment",auth:!0};return this._apiFetch(o)}deleteComment(t,e){const o={path:`articles/${encodeURIComponent(t)}/comments/${e}`,init:{method:"DELETE",headers:{Accept:"application/json"}},respondAs:s};return this._apiFetch(o)}}let i=class{};i=t([e({setup(t){t.provide({a,as:c})}})],i);export{a as C,i as a};//# sourceMappingURL=comments.4db4eb6f.js.map
