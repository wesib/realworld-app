{"version":3,"file":"auth.d699f70e.js","sources":["../../../src/core/auth/auth-service.key.impl.ts","../../../src/core/auth/auth-service.ts","../../../src/core/auth/authentication.ts","../../../src/core/auth/auth-service.impl.ts","../../../src/core/auth/auth-support.feature.ts"],"sourcesContent":["import { SingleContextKey } from '@proc7ts/context-values';\nimport { AuthService } from './auth-service';\n\nexport const AuthService__key = (\n    /*#__PURE__*/ new SingleContextKey<AuthService>('auth-service')\n);\n","import { ContextKey, ContextKey__symbol } from '@proc7ts/context-values';\nimport { AfterEvent, OnEvent } from '@proc7ts/fun-events';\nimport { ApiResponse } from '../api';\nimport { AuthService__key } from './auth-service.key.impl';\nimport { Authentication, AuthToken, AuthUser, NotAuthenticated } from './authentication';\n\nexport interface LoginRequest {\n  readonly email: string;\n  readonly password: string;\n}\n\nexport interface RegisterRequest {\n  readonly username: string;\n  readonly email: string;\n  readonly password: string;\n}\n\nexport interface UpdateSettingsRequest {\n  readonly email: string;\n  readonly username: string;\n  readonly password?: string;\n  readonly bio?: string;\n  readonly image?: string;\n}\n\nexport abstract class AuthService {\n\n  static get [ContextKey__symbol](): ContextKey<AuthService> {\n    return AuthService__key;\n  }\n\n  abstract readonly token: AfterEvent<[AuthToken | NotAuthenticated]>;\n  abstract readonly authentication: AfterEvent<[Authentication]>;\n  abstract readonly user: AfterEvent<[AuthUser | NotAuthenticated]>;\n  abstract readonly requireUser: AfterEvent<[AuthUser | NotAuthenticated]>;\n\n  abstract login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract register(request: RegisterRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract loadUser(): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract updateSettings(request: UpdateSettingsRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract logout(): void;\n\n}\n","import { ApiResponse } from '../api';\n\nexport interface AuthToken {\n  readonly token: string;\n  readonly email?: undefined;\n  readonly username?: undefined;\n  readonly failure?: undefined;\n}\n\nexport interface NotAuthenticated {\n  readonly token?: undefined;\n  readonly email?: undefined;\n  readonly username?: undefined;\n  readonly failure?: ApiResponse.Failure;\n}\n\nexport const notAuthenticated: NotAuthenticated = {};\n\nexport type Authentication =\n    | NotAuthenticated\n    | AuthToken\n    | AuthUser;\n\nexport interface AuthUser {\n  readonly email: string;\n  readonly token: string;\n  readonly username: string;\n  readonly bio?: string;\n  readonly image?: string;\n  readonly failure?: undefined;\n}\n","import { DomEventDispatcher } from '@frontmeans/dom-events';\nimport {\n  AfterEvent,\n  afterThe,\n  digAfter,\n  EventKeeper,\n  mapAfter_,\n  mapOn_,\n  OnEvent,\n  trackValue,\n  trackValueBy,\n  valueOn_,\n  ValueTracker,\n} from '@proc7ts/fun-events';\nimport { valueProvider } from '@proc7ts/primitives';\nimport { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { ApiFetch, ApiRequest, ApiResponse, notAuthenticatedError } from '../api';\nimport { AuthService, LoginRequest, RegisterRequest, UpdateSettingsRequest } from './auth-service';\nimport { Authentication, AuthToken, AuthUser, notAuthenticated, NotAuthenticated } from './authentication';\n\nconst authTokenKey = 'wesib-conduit:auth';\n\nexport class AuthService$ extends AuthService {\n\n  readonly user: AfterEvent<[AuthUser | NotAuthenticated]>;\n  readonly requireUser: AfterEvent<[AuthUser | NotAuthenticated]>;\n\n  private readonly _auth: ValueTracker<Authentication>;\n  private readonly _token = trackValue<AuthToken | NotAuthenticated>(notAuthenticated);\n\n  constructor(private readonly _context: BootstrapContext) {\n    super();\n\n    const window = _context.get(BootstrapWindow);\n    const storage = window.localStorage;\n\n    this._auth = trackValue<Authentication>(toAuthentication(storage.getItem(authTokenKey)));\n    this._token.by(this.authentication.do(\n        valueOn_(({ token }) => this._token.it.token !== token && { token }),\n    ));\n\n    this._auth.on(storeAuthToken);\n\n    let userRequest: [AuthToken | AuthUser, ValueTracker<AuthUser | NotAuthenticated>] | undefined;\n\n    this.requireUser = this.authentication.do(\n        digAfter((auth): EventKeeper<[AuthUser | NotAuthenticated]> => {\n          if (!auth.token) {\n            // No token. Can not authenticate.\n            return afterThe<[NotAuthenticated]>({\n              failure: {\n                ok: false,\n                errors: notAuthenticatedError(),\n              },\n            });\n          }\n          if (auth.email) {\n            // User authenticated.\n\n            const tracker = trackValue(auth);\n\n            userRequest = [auth, tracker];\n\n            return tracker;\n          }\n          if (userRequest) {\n            // Some user is loading.\n\n            const [requestToken, responseTracker] = userRequest;\n\n            if (requestToken.token === auth.token) {\n              // The right user is loading.\n              return responseTracker;\n            }\n            // Stop loading the wrong user.\n            responseTracker.byNone();\n          }\n\n          // Request user settings.\n          const tracker = trackValueBy<AuthUser | NotAuthenticated>(\n              this.loadUser().do(\n                  mapAfter_(\n                      (response: ApiResponse<AuthUser>): AuthUser | NotAuthenticated => response.ok\n                          ? response.body\n                          : { failure: response },\n                      valueProvider(notAuthenticated),\n                  ),\n              ),\n          );\n\n          userRequest = [auth, tracker];\n\n          return tracker;\n        }),\n    );\n\n    this.user = this.requireUser.do(\n        mapAfter_(user => user.username ? user : notAuthenticated),\n    );\n    new DomEventDispatcher(window).on<StorageEvent>('storage')(({ key, newValue }) => {\n      if (key === authTokenKey) {\n\n        const token = newValue || undefined;\n\n        if (this._auth.it.token !== token) {\n          this._auth.it = toAuthentication(token);\n        }\n      }\n    });\n\n    function storeAuthToken({ token }: Authentication): void {\n      if (token) {\n        storage.setItem(authTokenKey, token);\n      } else {\n        storage.removeItem(authTokenKey);\n      }\n    }\n  }\n\n  get token(): AfterEvent<[AuthToken | NotAuthenticated]> {\n    return this._token.read;\n  }\n\n  get authentication(): AfterEvent<[Authentication]> {\n    return this._auth.read;\n  }\n\n  login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]> {\n    return this._request('users/login', request);\n  }\n\n  register(request: RegisterRequest): OnEvent<[ApiResponse<AuthUser>]> {\n    return this._request('users', request);\n  }\n\n  loadUser(): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path: 'user',\n      init: {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: true,\n    };\n\n    return apiFetch(apiRequest).do(\n        mapOn_(response => {\n          if (response.ok) {\n            this._setUserSettings(response.body);\n          }\n          return response;\n        }),\n    );\n  }\n\n  updateSettings(request: UpdateSettingsRequest): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path: 'user',\n      init: {\n        method: 'PUT',\n        body: JSON.stringify({ user: request }),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: true,\n    };\n\n    return apiFetch(apiRequest).do(\n        mapOn_(response => {\n          if (response.ok) {\n            this._setUserSettings(response.body);\n          }\n          return response;\n        }),\n    );\n  }\n\n  logout(): void {\n    this._auth.it = notAuthenticated;\n  }\n\n  private _setUserSettings(user: AuthUser): void {\n    this._auth.it = {\n      ...user,\n      token: this._token.it.token || user.token, // Do not update token here, as this would cause multiple user reloads\n    };\n  }\n\n  private _request(\n      path: string,\n      request: object,\n  ): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path,\n      init: {\n        method: 'POST',\n        body: JSON.stringify({ user: request }),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: false,\n    };\n\n    return apiFetch(apiRequest).do(\n        mapOn_(response => {\n          this._auth.it = response.ok ? response.body : { failure: response };\n          return response;\n        }),\n    );\n  }\n\n}\n\nfunction toAuthentication(token: string | null | undefined): Authentication {\n  return token ? { token } : notAuthenticated;\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthService } from './auth-service';\nimport { AuthService$ } from './auth-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: AuthService, as: AuthService$ });\n  },\n})\nexport class AuthSupport {\n}\n"],"names":["AuthService__key","SingleContextKey","AuthService","ContextKey__symbol","notAuthenticated","AuthService$","[object Object]","_context","super","this","trackValue","window","get","BootstrapWindow","storage","localStorage","userRequest","_auth","toAuthentication","getItem","_token","by","authentication","do","valueOn_","token","it","on","setItem","removeItem","requireUser","digAfter","auth","afterThe","failure","ok","errors","notAuthenticatedError","email","tracker","requestToken","responseTracker","byNone","trackValueBy","loadUser","mapAfter_","response","body","valueProvider","user","username","DomEventDispatcher","key","newValue","undefined","read","request","_request","ApiFetch","apiFetch","path","init","method","headers","Accept","respondAs","mapOn_","_setUserSettings","JSON","stringify","Content-Type","AuthSupport","Feature","setup","provide","a","as"],"mappings":"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"}