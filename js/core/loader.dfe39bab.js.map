{"version":3,"file":"loader.dfe39bab.js","sources":["../../../src/core/loader/loader.component.ts","../../../src/reusable/api-error-generator.ts","../../../src/reusable/render-html.decorator.ts","../../../src/reusable/multi-input.component.ts","../../../src/core/loader/render-loader.decorator.ts"],"sourcesContent":["import { Attribute, BootstrapWindow, Component, ComponentContext, ElementRenderer, Render } from '@wesib/wesib';\nimport { Conduit__NS } from '../index';\n\n@Component(['loader', Conduit__NS])\nexport class LoaderComponent {\n\n  @Attribute('load-error')\n  loadError?: string | null;\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.contentRoot);\n\n    return () => {\n      range.deleteContents();\n      if (this.loadError != null) {\n        range.insertNode(document.createTextNode(this.loadError));\n      }\n    };\n  }\n\n}\n","import { bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { AIterable, overEntries } from 'a-iterable';\nimport { FnContextKey, FnContextRef } from 'context-values/updatable';\nimport { ApiResponse } from '../core/api';\n\nexport type ApiErrorGenerator = (this: void, errors: ApiResponse.Errors) => Element | undefined;\n\nexport const ApiErrorGenerator: FnContextRef<[ApiResponse.Errors], Element | undefined> = (\n    /*#__PURE__*/ new FnContextKey<[ApiResponse.Errors], Element | undefined>(\n        'api-error-generator',\n        {\n          byDefault: bootstrapDefault(context => {\n\n            const document = context.get(BootstrapWindow).document;\n\n            return errors => {\n\n              let list: Element | undefined;\n\n              AIterable.from(overEntries(errors)).forEach(\n                  ([key, messages]) => {\n                    if (!list) {\n                      list = document.createElement('ul');\n                      list.classList.add('error-messages');\n                    }\n\n                    const ul = list;\n\n                    messages.forEach(message => {\n\n                      const li = document.createElement('li');\n\n                      li.innerText = `${key} ${message}`;\n                      ul.appendChild(li);\n                    });\n                  },\n              );\n\n              return list;\n            };\n          }),\n        },\n    )\n);\n","import {\n  BootstrapWindow,\n  ComponentClass,\n  ComponentContext,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  ElementRenderer,\n  Render,\n} from '@wesib/wesib';\nimport { StatePath } from 'fun-events';\n\nexport function RenderHTML<T extends ComponentClass>(\n    def: {\n      path?: StatePath;\n      comment?: string;\n      offline?: boolean;\n    } = {},\n): ComponentPropertyDecorator<() => string | Node | null | undefined, T> {\n  return ComponentProperty(({ get, key }) => {\n\n    const {\n      comment = String(key),\n      path,\n      offline,\n    } = def;\n\n    return {\n      componentDef: Render({ path, offline }).As(renderHTML, key),\n    };\n\n    function renderHTML(this: InstanceType<T>): ElementRenderer {\n\n      const context = ComponentContext.of(this);\n      const { document } = context.get(BootstrapWindow);\n      const { contentRoot }: { contentRoot: Node } = context;\n      const start = contentRoot.appendChild(document.createComment(`[${comment}[`));\n      const end = contentRoot.appendChild(document.createComment(`]${comment}]`));\n      const range = document.createRange();\n\n      range.setStartAfter(start);\n      range.setEndBefore(end);\n\n      return () => {\n        range.deleteContents();\n\n        const html = get(this).call(this);\n\n        if (!html) {\n          return;\n        }\n        if (typeof html === 'string') {\n\n          const node = document.createElement('template');\n\n          node.innerHTML = html;\n          range.insertNode(node.content);\n        } else {\n          range.insertNode(html);\n        }\n      };\n    }\n  });\n}\n","import {\n  AttachShadow,\n  AttributeChanged,\n  BootstrapWindow,\n  Component,\n  ComponentContext,\n  DomProperty,\n  domPropertyPathTo,\n  ElementRenderer,\n  Render,\n} from '@wesib/wesib';\nimport { overArray } from 'a-iterable';\nimport { DeltaSet } from 'delta-set';\nimport { AbstractInElement, InElement } from 'input-aspects';\nimport { InConverter } from 'input-aspects/d.ts/converter';\nimport { Conduit__NS } from '../core';\n\nexport class MultiInputEvent extends CustomEvent<readonly string[]> {\n}\n\nconst trailingSpace = /\\s$/;\n\n/**\n * Tags input based on [multi-input](https://github.com/samdutton/multi-input) component by Sam Dutton.\n *\n * Does not allow duplicates. Does not limit a list of allowed values. Expects values to be space-separated.\n *\n * Raises [[MultiInputEvent]] on list update.\n */\n@Component(['multi-input', Conduit__NS])\n@AttachShadow()\nexport class MultiInputComponent {\n\n  private readonly _values = new DeltaSet<string>();\n  private _input?: HTMLInputElement;\n  private _datalist?: HTMLDataListElement;\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  get input(): HTMLInputElement {\n    // Initialize it lazily as it may be dynamically created.\n    if (this._input) {\n      return this._input;\n    }\n\n    const { element }: { element: Element } = this._context;\n\n    this._input = element.querySelector('input')!;\n    this._input.onblur = this._input.onchange = this._handleBlur.bind(this);\n    this._input.oninput = this._handleInput.bind(this);\n    this._input.onkeydown = this._handleKeydown.bind(this);\n\n    return this._input;\n  }\n\n  get datalist(): HTMLDataListElement {\n    // Initialize it lazily as it may be dynamically created.\n    if (this._datalist) {\n      return this._datalist;\n    }\n\n    const { element }: { element: Element } = this._context;\n\n    this._datalist = element.querySelector('datalist')!;\n\n    return this._datalist;\n  }\n\n  get values(): readonly string[] {\n    return Array.from(this._values);\n  }\n\n  @DomProperty()\n  set values(values: readonly string[]) {\n    this._values.clear();\n    this._values.delta(values || []);\n  }\n\n  get readonly(): boolean {\n    return this.input.disabled || this.input.readOnly;\n  }\n\n  @AttributeChanged('disabled')\n  setDisabled(value: string | null): void {\n    if (value != null) {\n      this.input.setAttribute('disabled', value);\n    } else {\n      this.input.removeAttribute('disabled');\n    }\n  }\n\n  @AttributeChanged('readonly')\n  setReadonly(value: string | null): void {\n    if (value != null) {\n      this.input.setAttribute('readonly', value);\n    } else {\n      this.input.removeAttribute('readonly');\n    }\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { contentRoot, element }: { contentRoot: Node & InnerHTML; element: Element } = this._context;\n    const { document } = this._context.get(BootstrapWindow);\n\n    contentRoot.innerHTML = `<style>\n:host {\n  border: var(--multi-input-border, 1px solid #ddd);\n  display: block;\n  overflow: hidden;\n  padding: 5px;\n}\n/* NB use of pointer-events to only allow events from the Ã— icon */\n::slotted(div.item) {\n  background-color: var(--multi-input-item-bg-color, #dedede);\n  border: var(--multi-input-item-border, 1px solid #ccc);\n  border-radius: 2px;\n  color: #222;\n  display: inline-block;\n  font-size: var(--multi-input-item-font-size, 14px);\n  margin: 5px;\n  padding: 2px 25px 2px 5px;\n  pointer-events: none;\n  position: relative;\n  top: -1px;\n}\n/* NB pointer-events: none above */\n::slotted(div.item:hover) {\n  background-color: #eee;\n  color: black;\n}\n::slotted(input) {\n  border: none;\n  font-size: var(--multi-input-input-font-size, 14px);\n  outline: none;\n  padding: 10px 10px 10px 5px;\n}\n</style>\n<slot></slot>`;\n\n    element.insertBefore(document.createComment('[ITEMS['), this.input);\n\n    const end = element.insertBefore(document.createComment(']ITEMS]'), this.input);\n    const valueOption = (value: string): HTMLOptionElement | undefined => {\n\n      const match = value + ' ';\n\n      for (const option of overArray(this.datalist.options)) {\n        if (option.value === match) {\n          return option;\n        }\n      }\n\n      return;\n    };\n    const valueItem = (value: string): Element | undefined => {\n      for (const item of overArray(element.querySelectorAll('.item'))) {\n        if (item.textContent === value) {\n          return item;\n        }\n      }\n      return;\n    };\n\n    return () => {\n      this._values.redelta({\n        add: value => {\n          if (!valueItem(value)) {\n\n            const item = document.createElement('div');\n\n            item.className = 'item';\n            item.textContent = value;\n            item.onclick = () => {\n              if (!this.readonly) {\n                this._delete(value);\n              }\n            };\n\n            element.insertBefore(item, end);\n          }\n\n          // Remove value from datalist options.\n          // Value is added back if an item is deleted (see _delete()).\n          valueOption(value)?.remove();\n        },\n        delete: value => {\n          // Remove item\n          valueItem(value)?.remove();\n\n          // Add datalist option unless there is one already\n          if (!valueOption(value)) {\n\n            const option = document.createElement('option');\n\n            // Append space to force adding value when option selected.\n            option.value = value + ' ';\n            this.datalist.appendChild(option);\n          }\n        },\n      }).undelta();\n    };\n  }\n\n  // Called by _handleKeydown() when the value of the input is an allowed value.\n  private _add(value: string, force = false): void {\n    if (!force && !trailingSpace.test(value)) {\n      return;\n    }\n    value = value.trim();\n    if (!value) {\n      return;\n    }\n\n    this._values.add(value);\n    this.input.value = '';\n    this._sendEvent();\n  }\n\n  // Called when the Ã— icon is tapped/clicked or\n  // by _handleKeydown() when Backspace is entered.\n  private _delete(value: string): void {\n    this._values.delete(value);\n    this._sendEvent();\n  }\n\n  // Avoid stray text remaining in the input element that's not in a div.item.\n  private _handleBlur(): void {\n\n    const { value } = this.input;\n\n    this.input.value = '';\n    this._add(value, true);\n  }\n\n  // Called when input text changes,\n  // either by entering text or selecting a datalist option.\n  private _handleInput(): void {\n    // Add a div.item\n    this._add(this.input.value);\n  }\n\n  // Called when text is entered or keys pressed in the input element.\n  private _handleKeydown(event: KeyboardEvent): void {\n\n    const value = this.input.value;\n\n    // On Backspace, delete the div.item to the left of the input\n    if (!value && event.key === 'Backspace') {\n\n      const { values } = this;\n\n      if (values.length) {\n        this._delete(values[values.length - 1]);\n      }\n\n      return;\n    }\n\n    this._add(this.input.value);\n  }\n\n  private _sendEvent(): void {\n    this._context.updateState(domPropertyPathTo('values'), this.values, this.values);\n    this._context.dispatchEvent(new MultiInputEvent('conduit:input', { bubbles: true, detail: this.values }));\n  }\n\n}\n\nexport namespace MultiInputComponent {\n\n  export interface Element extends HTMLElement {\n    values: readonly string[];\n  }\n\n  export type Control = InElement<readonly string[], Element>;\n\n}\n\nclass MultiInputControl extends AbstractInElement<readonly string[], MultiInputComponent.Element> {\n\n  constructor(\n      element: MultiInputComponent.Element,\n      {\n        aspects,\n      }: {\n        readonly aspects?: InConverter.Aspect<readonly string[]> | readonly InConverter.Aspect<readonly string[]>[];\n      } = {},\n  ) {\n    super(\n        element,\n        {\n          aspects,\n          get: () => element.values,\n          set: values => element.values = values,\n        },\n    );\n  }\n\n  protected listenForInput(\n      update: (input: InElement.Input<readonly string[]>) => void,\n  ): void {\n    this.events.on<MultiInputEvent>('conduit:input').to(event => {\n      update({ event, value: event.detail });\n    });\n  }\n\n}\n\nexport function inMultiInput(\n    element: MultiInputComponent.Element,\n    {\n      aspects,\n    }: {\n      readonly aspects?: InConverter.Aspect<readonly string[]> | readonly InConverter.Aspect<readonly string[]>[];\n    } = {},\n): MultiInputComponent.Control {\n  return new MultiInputControl(element, { aspects });\n}\n","import {\n  ComponentClass,\n  ComponentContext,\n  ComponentDef,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  DefaultNamespaceAliaser,\n  ElementRenderer,\n  Render,\n} from '@wesib/wesib';\nimport { StatePath } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { RenderExecution } from 'render-scheduler';\nimport { ApiErrorGenerator, RenderHTML } from '../../reusable';\nimport { ApiResponse } from '../api';\nimport { Conduit__NS } from '../conduit.ns';\nimport { LoaderComponent } from './loader.component';\n\nexport type LoadStatus =\n    | LoadStatus.Succeed\n    | LoadStatus.Failed;\n\nexport namespace LoadStatus {\n\n  export interface Succeed {\n    readonly ok: true;\n  }\n\n  export interface Failed {\n    readonly ok: false;\n    readonly errors: ApiResponse.Errors;\n  }\n\n}\n\nconst LoadStatus__symbol = (/*#__PURE__*/ Symbol('load-status'));\nconst defaultLoadedClass: QualifiedName = ['loaded', Conduit__NS];\n\nexport function RenderLoader<T extends ComponentClass>(\n    def: {\n      loaded?: QualifiedName;\n      path?: StatePath;\n      offline?: boolean;\n      comment?: string;\n    } = {},\n): ComponentPropertyDecorator<LoadStatus | undefined, T> {\n  return ComponentProperty(({ get, set: setValue, key }) => {\n\n    const {\n      path = [LoadStatus__symbol, key],\n      offline,\n      loaded = defaultLoadedClass,\n      comment = String(key),\n    } = def;\n    let loadedClassName: string;\n\n    return {\n      componentDef: ComponentDef.all(\n          {\n            feature: {\n              needs: LoaderComponent,\n            },\n            define(defContext) {\n              loadedClassName = css__naming.name(loaded, defContext.get(DefaultNamespaceAliaser));\n            },\n          },\n          Render({ path, offline }).As(updateClass, key),\n          RenderHTML({ path, offline, comment: `LOADER(${comment})` }).As(renderLoader, key),\n          RenderHTML({ path, offline, comment: `ERRORS(${comment})` }).As(renderErrors, key),\n      ),\n      get,\n      set(component, value) {\n\n        const prev = get(component);\n\n        setValue(component, value);\n        ComponentContext.of(component).updateState(path, value, prev);\n      },\n    };\n\n    function updateClass(this: InstanceType<T>): ElementRenderer {\n\n      const { element }: { element: Element } = ComponentContext.of(this);\n\n      return (execution: RenderExecution) => {\n\n        const status = get(this);\n\n        if (status && status.ok) {\n          // Make contents visible in the very end\n          execution.postpone(() => {\n            element.classList.add(loadedClassName);\n          });\n        } else {\n          element.classList.remove(loadedClassName);\n        }\n      };\n    }\n\n    function renderLoader(this: InstanceType<T>): Node | undefined {\n\n      const status = get(this);\n\n      return !status ? document.createElement('conduit-loader') : undefined;\n    }\n\n    function renderErrors(this: InstanceType<T>): Node | undefined {\n\n      const status = get(this);\n\n      return status && !status.ok\n          ? ComponentContext.of(this).get(ApiErrorGenerator)(status.errors)\n          : undefined;\n    }\n\n  });\n}\n"],"names":["LoaderComponent","[object Object]","_context","this","document","get","BootstrapWindow","range","createRange","selectNodeContents","contentRoot","deleteContents","loadError","insertNode","createTextNode","__decorate","Attribute","Render","Component","Conduit__NS","ApiErrorGenerator","FnContextKey","byDefault","bootstrapDefault","context","errors","list","AIterable","from","overEntries","forEach","key","messages","createElement","classList","add","ul","message","li","innerText","appendChild","RenderHTML","def","ComponentProperty","comment","String","path","offline","componentDef","As","ComponentContext","of","start","createComment","end","setStartAfter","setEndBefore","html","call","node","innerHTML","content","MultiInputEvent","CustomEvent","trailingSpace","MultiInputComponent","DeltaSet","input","_input","element","querySelector","onblur","onchange","_handleBlur","bind","oninput","_handleInput","onkeydown","_handleKeydown","datalist","_datalist","values","Array","_values","clear","delta","readonly","disabled","readOnly","value","setAttribute","removeAttribute","insertBefore","valueOption","match","option","overArray","options","valueItem","item","querySelectorAll","textContent","redelta","className","onclick","_delete","remove","delete","undelta","force","test","trim","_sendEvent","_add","event","length","updateState","domPropertyPathTo","dispatchEvent","bubbles","detail","DomProperty","AttributeChanged","AttachShadow","MultiInputControl","AbstractInElement","aspects","super","set","update","events","on","to","inMultiInput","LoadStatus__symbol","Symbol","defaultLoadedClass","RenderLoader","setValue","loaded","loadedClassName","ComponentDef","all","feature","needs","defContext","css__naming","name","DefaultNamespaceAliaser","execution","status","ok","postpone","undefined","component","prev"],"mappings":"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"}