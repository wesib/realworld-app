{"version":3,"file":"loader.ce41151b.js","sources":["../../../src/core/loader/loader.component.ts","../../../src/reusable/api-error-generator.ts","../../../src/reusable/render-html.decorator.ts","../../../src/reusable/multi-input.component.ts","../../../src/core/loader/render-loader.decorator.ts"],"sourcesContent":["import { Attribute, BootstrapWindow, Component, ComponentContext, ElementRenderer, Render } from '@wesib/wesib';\nimport { Conduit__NS } from '../index';\n\n@Component(['loader', Conduit__NS])\nexport class LoaderComponent {\n\n  @Attribute('load-error')\n  loadError?: string | null;\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.contentRoot);\n\n    return () => {\n      range.deleteContents();\n      if (this.loadError != null) {\n        range.insertNode(document.createTextNode(this.loadError));\n      }\n    };\n  }\n\n}\n","import { overEntries } from '@proc7ts/a-iterable';\nimport { FnContextKey, FnContextRef } from '@proc7ts/context-values/updatable';\nimport { bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { ApiResponse } from '../core/api';\n\nexport type ApiErrorGenerator = (this: void, errors: ApiResponse.Errors) => Element | undefined;\n\nexport const ApiErrorGenerator: FnContextRef<[ApiResponse.Errors], Element | undefined> = (\n    /*#__PURE__*/ new FnContextKey<[ApiResponse.Errors], Element | undefined>(\n        'api-error-generator',\n        {\n          byDefault: bootstrapDefault(context => {\n\n            const document = context.get(BootstrapWindow).document;\n\n            return errors => {\n\n              let list: Element | undefined;\n\n              for (const [key, messages] of overEntries(errors)) {\n                if (!list) {\n                  list = document.createElement('ul');\n                  list.classList.add('error-messages');\n                }\n\n                const ul = list;\n\n                messages.forEach(message => {\n\n                  const li = document.createElement('li');\n\n                  li.innerText = `${key} ${message}`;\n                  ul.appendChild(li);\n                });\n              }\n\n              return list;\n            };\n          }),\n        },\n    )\n);\n","import {\n  BootstrapWindow,\n  ComponentClass,\n  ComponentContext,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  ElementRenderer,\n  Render,\n  RenderDef,\n} from '@wesib/wesib';\n\nexport function RenderHTML<T extends ComponentClass>(\n    def: {\n      render?: RenderDef;\n      comment?: string;\n    } = {},\n): ComponentPropertyDecorator<() => string | Node | null | undefined, T> {\n  return ComponentProperty(({ get, key }) => {\n\n    const {\n      comment = String(key),\n      render,\n    } = def;\n\n    return {\n      componentDef: Render(render).As(renderHTML, key),\n    };\n\n    function renderHTML(this: InstanceType<T>): ElementRenderer {\n\n      const context = ComponentContext.of(this);\n      const { document } = context.get(BootstrapWindow);\n      const { contentRoot }: { contentRoot: Node } = context;\n      const start = contentRoot.appendChild(document.createComment(`[${comment}[`));\n      const end = contentRoot.appendChild(document.createComment(`]${comment}]`));\n      const range = document.createRange();\n\n      range.setStartAfter(start);\n      range.setEndBefore(end);\n\n      return () => {\n        range.deleteContents();\n\n        const html = get(this).call(this);\n\n        if (!html) {\n          return;\n        }\n        if (typeof html === 'string') {\n\n          const node = document.createElement('template');\n\n          node.innerHTML = html;\n          range.insertNode(node.content);\n        } else {\n          range.insertNode(html);\n        }\n      };\n    }\n  });\n}\n","import { overArray } from '@proc7ts/a-iterable';\nimport { DeltaSet } from '@proc7ts/delta-set';\nimport { AbstractInElement, InElement } from '@proc7ts/input-aspects';\nimport { InConverter } from '@proc7ts/input-aspects/d.ts/converter';\nimport {\n  AttachShadow,\n  AttributeChanged,\n  BootstrapWindow,\n  Component,\n  ComponentContext,\n  ContentRoot,\n  DomProperty,\n  domPropertyPathTo,\n  ElementRenderer,\n  Render,\n} from '@wesib/wesib';\nimport { Conduit__NS } from '../core';\n\nexport class MultiInputEvent extends CustomEvent<readonly string[]> {\n}\n\nconst trailingSpace = /\\s$/;\n\n/**\n * Tags input based on [multi-input](https://github.com/samdutton/multi-input) component by Sam Dutton.\n *\n * Does not allow duplicates. Does not limit a list of allowed values. Expects values to be space-separated.\n *\n * Raises [[MultiInputEvent]] on list update.\n */\n@Component(['multi-input', Conduit__NS])\n@AttachShadow()\nexport class MultiInputComponent {\n\n  private readonly _values = new DeltaSet<string>();\n  private _input?: HTMLInputElement;\n  private _datalist?: HTMLDataListElement;\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  get input(): HTMLInputElement {\n    // Initialize it lazily as it may be dynamically created.\n    if (this._input) {\n      return this._input;\n    }\n\n    const { element } = this._context as { element: Element };\n\n    this._input = element.querySelector('input')!;\n    this._input.onblur = this._input.onchange = this._handleBlur.bind(this);\n    this._input.oninput = this._handleInput.bind(this);\n    this._input.onkeydown = this._handleKeydown.bind(this);\n\n    return this._input;\n  }\n\n  get datalist(): HTMLDataListElement {\n    // Initialize it lazily as it may be dynamically created.\n    if (this._datalist) {\n      return this._datalist;\n    }\n\n    const { element } = this._context as { element: Element };\n\n    this._datalist = element.querySelector('datalist')!;\n\n    return this._datalist;\n  }\n\n  get values(): readonly string[] {\n    return Array.from(this._values);\n  }\n\n  @DomProperty()\n  set values(values: readonly string[]) {\n    this._values.clear();\n    this._values.delta(values || []);\n  }\n\n  get readonly(): boolean {\n    return this.input.disabled || this.input.readOnly;\n  }\n\n  @AttributeChanged('disabled')\n  setDisabled(value: string | null): void {\n    if (value != null) {\n      this.input.setAttribute('disabled', value);\n    } else {\n      this.input.removeAttribute('disabled');\n    }\n  }\n\n  @AttributeChanged('readonly')\n  setReadonly(value: string | null): void {\n    if (value != null) {\n      this.input.setAttribute('readonly', value);\n    } else {\n      this.input.removeAttribute('readonly');\n    }\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { contentRoot, element } = this._context as { contentRoot: ContentRoot; element: Element };\n    const { document } = this._context.get(BootstrapWindow);\n\n    contentRoot.innerHTML = `<style>\n:host {\n  border: var(--multi-input-border, 1px solid #ddd);\n  display: block;\n  overflow: hidden;\n  padding: 5px;\n}\n/* NB use of pointer-events to only allow events from the Ã— icon */\n::slotted(div.item) {\n  background-color: var(--multi-input-item-bg-color, #dedede);\n  border: var(--multi-input-item-border, 1px solid #ccc);\n  border-radius: 2px;\n  color: #222;\n  display: inline-block;\n  font-size: var(--multi-input-item-font-size, 14px);\n  margin: 5px;\n  padding: 2px 25px 2px 5px;\n  pointer-events: none;\n  position: relative;\n  top: -1px;\n}\n/* NB pointer-events: none above */\n::slotted(div.item:hover) {\n  background-color: #eee;\n  color: black;\n}\n::slotted(input) {\n  border: none;\n  font-size: var(--multi-input-input-font-size, 14px);\n  outline: none;\n  padding: 10px 10px 10px 5px;\n}\n</style>\n<slot></slot>`;\n\n    element.insertBefore(document.createComment('[ITEMS['), this.input);\n\n    const end = element.insertBefore(document.createComment(']ITEMS]'), this.input);\n    const valueOption = (value: string): HTMLOptionElement | undefined => {\n\n      const match = value + ' ';\n\n      for (const option of overArray(this.datalist.options)) {\n        if (option.value === match) {\n          return option;\n        }\n      }\n\n      return;\n    };\n    const valueItem = (value: string): Element | undefined => {\n      for (const item of overArray(element.querySelectorAll('.item'))) {\n        if (item.textContent === value) {\n          return item;\n        }\n      }\n      return;\n    };\n\n    return () => {\n      this._values.redelta({\n        add: value => {\n          if (!valueItem(value)) {\n\n            const item = document.createElement('div');\n\n            item.className = 'item';\n            item.textContent = value;\n            item.onclick = () => {\n              if (!this.readonly) {\n                this._delete(value);\n              }\n            };\n\n            element.insertBefore(item, end);\n          }\n\n          // Remove value from datalist options.\n          // Value is added back if an item is deleted (see _delete()).\n          valueOption(value)?.remove();\n        },\n        delete: value => {\n          // Remove item\n          valueItem(value)?.remove();\n\n          // Add datalist option unless there is one already\n          if (!valueOption(value)) {\n\n            const option = document.createElement('option');\n\n            // Append space to force adding value when option selected.\n            option.value = value + ' ';\n            this.datalist.appendChild(option);\n          }\n        },\n      }).undelta();\n    };\n  }\n\n  // Called by _handleKeydown() when the value of the input is an allowed value.\n  private _add(value: string, force = false): void {\n    if (!force && !trailingSpace.test(value)) {\n      return;\n    }\n    value = value.trim();\n    if (!value) {\n      return;\n    }\n\n    this._values.add(value);\n    this.input.value = '';\n    this._sendEvent();\n  }\n\n  // Called when the Ã— icon is tapped/clicked or\n  // by _handleKeydown() when Backspace is entered.\n  private _delete(value: string): void {\n    this._values.delete(value);\n    this._sendEvent();\n  }\n\n  // Avoid stray text remaining in the input element that's not in a div.item.\n  private _handleBlur(): void {\n\n    const { value } = this.input;\n\n    this.input.value = '';\n    this._add(value, true);\n  }\n\n  // Called when input text changes,\n  // either by entering text or selecting a datalist option.\n  private _handleInput(): void {\n    // Add a div.item\n    this._add(this.input.value);\n  }\n\n  // Called when text is entered or keys pressed in the input element.\n  private _handleKeydown(event: KeyboardEvent): void {\n\n    const value = this.input.value;\n\n    // On Backspace, delete the div.item to the left of the input\n    if (!value && event.key === 'Backspace') {\n\n      const { values } = this;\n\n      if (values.length) {\n        this._delete(values[values.length - 1]);\n      }\n\n      return;\n    }\n\n    this._add(this.input.value);\n  }\n\n  private _sendEvent(): void {\n    this._context.updateState(domPropertyPathTo('values'), this.values, this.values);\n    this._context.dispatchEvent(new MultiInputEvent('conduit:input', { bubbles: true, detail: this.values }));\n  }\n\n}\n\nexport namespace MultiInputComponent {\n\n  export interface Element extends HTMLElement {\n    values: readonly string[];\n  }\n\n  export type Control = InElement<readonly string[], Element>;\n\n}\n\nclass MultiInputControl extends AbstractInElement<readonly string[], MultiInputComponent.Element> {\n\n  constructor(\n      element: MultiInputComponent.Element,\n      {\n        aspects,\n      }: {\n        readonly aspects?: InConverter.Aspect<readonly string[]> | readonly InConverter.Aspect<readonly string[]>[];\n      } = {},\n  ) {\n    super(\n        element,\n        {\n          aspects,\n          get: () => element.values,\n          set: (values: readonly string[]) => element.values = values,\n        },\n    );\n  }\n\n  protected listenForInput(\n      update: (input: InElement.Input<readonly string[]>) => void,\n  ): void {\n    this.events.on<MultiInputEvent>('conduit:input').to(event => {\n      update({ event, value: event.detail });\n    });\n  }\n\n}\n\nexport function inMultiInput(\n    element: MultiInputComponent.Element,\n    {\n      aspects,\n    }: {\n      readonly aspects?: InConverter.Aspect<readonly string[]> | readonly InConverter.Aspect<readonly string[]>[];\n    } = {},\n): MultiInputComponent.Control {\n  return new MultiInputControl(element, { aspects });\n}\n","import { css__naming, QualifiedName } from '@proc7ts/namespace-aliaser';\nimport { RenderExecution } from '@proc7ts/render-scheduler';\nimport {\n  ComponentClass,\n  ComponentContext,\n  ComponentDef,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  DefaultNamespaceAliaser,\n  ElementRenderer,\n  Render,\n  RenderDef,\n  RenderPath__root,\n} from '@wesib/wesib';\nimport { ApiErrorGenerator, RenderHTML } from '../../reusable';\nimport { ApiResponse } from '../api';\nimport { Conduit__NS } from '../conduit.ns';\nimport { LoaderComponent } from './loader.component';\n\nexport type LoadStatus =\n    | LoadStatus.Succeed\n    | LoadStatus.Failed;\n\nexport namespace LoadStatus {\n\n  export interface Succeed {\n    readonly ok: true;\n  }\n\n  export interface Failed {\n    readonly ok: false;\n    readonly errors: ApiResponse.Errors;\n  }\n\n}\n\nconst LoadStatus__symbol = (/*#__PURE__*/ Symbol('load-status'));\nconst defaultLoadedClass: QualifiedName = ['loaded', Conduit__NS];\n\nexport function RenderLoader<T extends ComponentClass>(\n    def: {\n      loaded?: QualifiedName;\n      render?: RenderDef.Spec;\n      comment?: string;\n    } = {},\n): ComponentPropertyDecorator<LoadStatus | undefined, T> {\n  return ComponentProperty(({ get, set: setValue, key }) => {\n\n    const {\n      render: renderSpec = {},\n      loaded = defaultLoadedClass,\n      comment = String(key),\n    } = def;\n    const path = [RenderPath__root, LoadStatus__symbol, key];\n    let loadedClassName: string;\n    const render = RenderDef.fulfill({ on: path }, renderSpec);\n\n    return {\n      componentDef: ComponentDef.all(\n          {\n            feature: {\n              needs: LoaderComponent,\n            },\n            define(defContext) {\n              loadedClassName = css__naming.name(loaded, defContext.get(DefaultNamespaceAliaser));\n              if (renderSpec.on) {\n                defContext.whenComponent(context => {\n                  RenderDef.trigger(context, renderSpec)\n                      .to(() => context.updateState(path, 'new', 'old'));\n                });\n              }\n            },\n          },\n          Render(render).As(updateClass, key),\n          RenderHTML({ render, comment: `LOADER(${comment})` }).As(renderLoader, key),\n          RenderHTML({ render, comment: `ERRORS(${comment})` }).As(renderErrors, key),\n      ),\n      get,\n      set(component, value) {\n\n        const prev = get(component);\n\n        setValue(component, value);\n        ComponentContext.of(component).updateState(path, value, prev);\n      },\n    };\n\n    function updateClass(this: InstanceType<T>): ElementRenderer {\n\n      const { element }: { element: Element } = ComponentContext.of(this);\n\n      return (execution: RenderExecution) => {\n\n        const status = get(this);\n\n        if (status && status.ok) {\n          // Make contents visible in the very end\n          execution.postpone(() => {\n            element.classList.add(loadedClassName);\n          });\n        } else {\n          element.classList.remove(loadedClassName);\n        }\n      };\n    }\n\n    function renderLoader(this: InstanceType<T>): Node | undefined {\n\n      const status = get(this);\n\n      return !status ? document.createElement('conduit-loader') : undefined;\n    }\n\n    function renderErrors(this: InstanceType<T>): Node | undefined {\n\n      const status = get(this);\n\n      return status && !status.ok\n          ? ComponentContext.of(this).get(ApiErrorGenerator)(status.errors)\n          : undefined;\n    }\n\n  });\n}\n"],"names":["LoaderComponent","[object Object]","_context","this","document","get","BootstrapWindow","range","createRange","selectNodeContents","contentRoot","deleteContents","loadError","insertNode","createTextNode","__decorate","Attribute","Render","Component","Conduit__NS","ApiErrorGenerator","FnContextKey","byDefault","bootstrapDefault","context","errors","list","key","messages","overEntries","createElement","classList","add","ul","forEach","message","li","innerText","appendChild","RenderHTML","def","ComponentProperty","comment","String","render","componentDef","As","ComponentContext","of","start","createComment","end","setStartAfter","setEndBefore","html","call","node","innerHTML","content","MultiInputEvent","CustomEvent","trailingSpace","MultiInputComponent","DeltaSet","input","_input","element","querySelector","onblur","onchange","_handleBlur","bind","oninput","_handleInput","onkeydown","_handleKeydown","datalist","_datalist","values","Array","from","_values","clear","delta","readonly","disabled","readOnly","value","setAttribute","removeAttribute","insertBefore","valueOption","match","option","overArray","options","valueItem","item","querySelectorAll","textContent","redelta","className","onclick","_delete","remove","delete","undelta","force","test","trim","_sendEvent","_add","event","length","updateState","domPropertyPathTo","dispatchEvent","bubbles","detail","DomProperty","AttributeChanged","AttachShadow","MultiInputControl","AbstractInElement","aspects","super","set","update","events","on","to","inMultiInput","LoadStatus__symbol","Symbol","defaultLoadedClass","RenderLoader","setValue","renderSpec","loaded","path","RenderPath__root","loadedClassName","RenderDef","fulfill","ComponentDef","all","feature","needs","defContext","css__naming","name","DefaultNamespaceAliaser","whenComponent","trigger","execution","status","ok","postpone","undefined","component","prev"],"mappings":"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"}