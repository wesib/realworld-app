{"version":3,"file":"auth.be17db41.js","sources":["../../../src/core/auth/auth-service.key.impl.ts","../../../src/core/auth/auth-service.ts","../../../src/core/auth/auth-service.impl.ts","../../../src/core/auth/auth-support.feature.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { AuthService } from './auth-service';\n\nexport const AuthService__key = (\n    /*#__PURE__*/ new SingleContextKey<AuthService>('auth-service')\n);\n","import { ContextKey, ContextKey__symbol } from 'context-values';\nimport { AfterEvent, OnEvent } from 'fun-events';\nimport { ApiResponse } from '../api';\nimport { AuthService__key } from './auth-service.key.impl';\nimport { Authentication, AuthToken, AuthUser, NotAuthenticated } from './authentication';\n\nexport interface LoginRequest {\n  readonly email: string;\n  readonly password: string;\n}\n\nexport interface RegisterRequest {\n  readonly username: string;\n  readonly email: string;\n  readonly password: string;\n}\n\nexport interface UpdateSettingsRequest {\n  readonly email: string;\n  readonly username: string;\n  readonly password?: string;\n  readonly bio?: string;\n  readonly image?: string;\n}\n\nexport abstract class AuthService {\n\n  static get [ContextKey__symbol](): ContextKey<AuthService> {\n    return AuthService__key;\n  }\n\n  abstract readonly token: AfterEvent<[AuthToken | NotAuthenticated]>;\n\n  abstract readonly authentication: AfterEvent<[Authentication]>;\n\n  abstract login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract register(request: RegisterRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract loadUser(): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract updateSettings(request: UpdateSettingsRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract logout(): void;\n\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { nextSkip } from 'call-thru';\nimport { AfterEvent, OnEvent, trackValue, ValueTracker } from 'fun-events';\nimport { DomEventDispatcher } from 'fun-events/dom';\nimport { ApiFetch, ApiRequest, ApiResponse } from '../api';\nimport { AuthService, LoginRequest, RegisterRequest, UpdateSettingsRequest } from './auth-service';\nimport { Authentication, AuthToken, AuthUser, NotAuthenticated } from './authentication';\n\nconst authTokenKey = 'wesib-conduit:auth';\nconst notAuthenticated: NotAuthenticated = {};\n\nexport class AuthService$ extends AuthService {\n\n  private readonly _auth: ValueTracker<Authentication>;\n  private readonly _token = trackValue<AuthToken | NotAuthenticated>(notAuthenticated);\n\n  get authentication(): AfterEvent<[Authentication]> {\n    return this._auth.read;\n  }\n\n  get token(): AfterEvent<[AuthToken | NotAuthenticated]> {\n    return this._token.read;\n  }\n\n  constructor(private readonly _context: BootstrapContext) {\n    super();\n\n    const window = _context.get(BootstrapWindow);\n    const storage = window.localStorage;\n\n    this._auth = trackValue<Authentication>(toAuthentication(storage.getItem(authTokenKey)));\n    this._token.by(this._auth.read.thru_(\n        ({ token }) => this._token.it.token !== token ? { token } : nextSkip,\n    ));\n    this._auth.on(storeAuthToken);\n    new DomEventDispatcher(window).on<StorageEvent>('storage')(({ key, newValue }) => {\n      if (key === authTokenKey) {\n\n        const token = newValue || undefined;\n\n        if (this._auth.it.token !== token) {\n          this._auth.it = toAuthentication(token);\n        }\n      }\n    });\n\n    function storeAuthToken({ token }: Authentication): void {\n      if (token) {\n        storage.setItem(authTokenKey, token);\n      } else {\n        storage.removeItem(authTokenKey);\n      }\n    }\n  }\n\n  login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]> {\n    return this._request('users/login', request);\n  }\n\n  register(request: RegisterRequest): OnEvent<[ApiResponse<AuthUser>]> {\n    return this._request('users', request);\n  }\n\n  loadUser(): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path: 'user',\n      init: {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: true,\n    };\n\n    return apiFetch(apiRequest).thru_(\n        response => {\n          if (response.ok) {\n            this._setUserSettings(response.body);\n          }\n          return response;\n        },\n    );\n  }\n\n  updateSettings(request: UpdateSettingsRequest): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path: 'user',\n      init: {\n        method: 'PUT',\n        body: JSON.stringify({ user: request }),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: true,\n    };\n\n    return apiFetch(apiRequest).thru_(\n        response => {\n          if (response.ok) {\n            this._setUserSettings(response.body);\n          }\n          return response;\n        },\n    );\n  }\n\n  logout(): void {\n    this._auth.it = notAuthenticated;\n  }\n\n  private _setUserSettings(user: AuthUser): void {\n    this._auth.it = {\n      ...user,\n      token: this._token.it.token || user.token, // Do not update token here, as this would cause multiple user reloads\n    };\n  }\n\n  private _request(\n      path: string,\n      request: object,\n  ): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path,\n      init: {\n        method: 'POST',\n        body: JSON.stringify({ user: request }),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: false,\n    };\n\n    return apiFetch(apiRequest).thru_(\n        response => {\n          if (response.ok) {\n            this._auth.it = response.body;\n          } else if (response.ok === false) {\n            this._auth.it = { failure: response };\n          }\n          return response;\n        },\n    );\n  }\n\n}\n\nfunction toAuthentication(token: string | null | undefined): Authentication {\n  return token ? { token } : notAuthenticated;\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthService } from './auth-service';\nimport { AuthService$ } from './auth-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: AuthService, as: AuthService$ });\n  },\n})\nexport class AuthSupport {\n}\n"],"names":["AuthService__key","SingleContextKey","AuthService","ContextKey__symbol","notAuthenticated","AuthService$","[object Object]","_context","super","this","trackValue","window","get","BootstrapWindow","storage","localStorage","_auth","toAuthentication","getItem","_token","by","read","thru_","token","it","nextSkip","on","setItem","removeItem","DomEventDispatcher","key","newValue","undefined","authentication","request","_request","ApiFetch","apiFetch","path","init","method","headers","Accept","respondAs","auth","response","ok","_setUserSettings","body","JSON","stringify","user","Content-Type","failure","AuthSupport","Feature","setup","provide","a","as"],"mappings":"oTAGaA,MACSC,EAA8B,sBCqB9BC,EAEpBC,WAAYA,KACV,OAAOH,GAiBV,MCpCKI,EAAqC,SAE9BC,UAAqBH,EAahCI,YAA6BC,GAC3BC,QAD2BC,cAAAF,EAVZE,YAASC,EAAyCN,GAajE,MAAMO,EAASJ,EAASK,IAAIC,GACtBC,EAAUH,EAAOI,aAEvBN,KAAKO,MAAQN,EAA2BO,EAAiBH,EAAQI,QAtBhD,wBAuBjBT,KAAKU,OAAOC,GAAGX,KAAKO,MAAMK,KAAKC,MAC3B,EAAGC,MAAAA,KAAYd,KAAKU,OAAOK,GAAGD,QAAUA,EAAQ,CAAEA,MAAAA,GAAUE,IAEhEhB,KAAKO,MAAMU,IAYX,UAAwBH,MAAEA,IACpBA,EACFT,EAAQa,QAxCK,qBAwCiBJ,GAE9BT,EAAQc,WA1CK,yBA2BjB,IAAIC,EAAmBlB,GAAQe,GAAiB,UAAhD,CAA2D,EAAGI,IAAAA,EAAKC,SAAAA,MACjE,GA5Be,uBA4BXD,EAAsB,CAExB,MAAMP,EAAQQ,QAAYC,EAEtBvB,KAAKO,MAAMQ,GAAGD,QAAUA,IAC1Bd,KAAKO,MAAMQ,GAAKP,EAAiBM,OAzBzCU,qBACE,OAAOxB,KAAKO,MAAMK,KAGpBE,YACE,OAAOd,KAAKU,OAAOE,KAkCrBf,MAAM4B,GACJ,OAAOzB,KAAK0B,SAAS,cAAeD,GAGtC5B,SAAS4B,GACP,OAAOzB,KAAK0B,SAAS,QAASD,GAGhC5B,WAeE,OAb2BG,KAAKF,SAASK,IAAIwB,EAatCC,CAZkC,CACvCC,KAAM,OACNC,KAAM,CACJC,OAAQ,MACRC,QAAS,CACPC,OAAQ,qBAGZC,UAAW,OACXC,MAAM,IAGoBtB,MACxBuB,IACMA,EAASC,IACXrC,KAAKsC,iBAAiBF,EAASG,MAE1BH,IAKfvC,eAAe4B,GAiBb,OAf2BzB,KAAKF,SAASK,IAAIwB,EAetCC,CAdkC,CACvCC,KAAM,OACNC,KAAM,CACJC,OAAQ,MACRQ,KAAMC,KAAKC,UAAU,CAAEC,KAAMjB,IAC7BO,QAAS,CACPC,OAAQ,mBACRU,eAAgB,qBAGpBT,UAAW,OACXC,MAAM,IAGoBtB,MACxBuB,IACMA,EAASC,IACXrC,KAAKsC,iBAAiBF,EAASG,MAE1BH,IAKfvC,SACEG,KAAKO,MAAMQ,GAAKpB,EAGVE,iBAAiB6C,GACvB1C,KAAKO,MAAMQ,kCACN2B,IACH5B,MAAOd,KAAKU,OAAOK,GAAGD,OAAS4B,EAAK5B,QAIhCjB,SACJgC,EACAJ,GAkBF,OAf2BzB,KAAKF,SAASK,IAAIwB,EAetCC,CAdkC,CACvCC,KAAAA,EACAC,KAAM,CACJC,OAAQ,OACRQ,KAAMC,KAAKC,UAAU,CAAEC,KAAMjB,IAC7BO,QAAS,CACPC,OAAQ,mBACRU,eAAgB,qBAGpBT,UAAW,OACXC,MAAM,IAGoBtB,MACxBuB,IACMA,EAASC,GACXrC,KAAKO,MAAMQ,GAAKqB,EAASG,MACA,IAAhBH,EAASC,KAClBrC,KAAKO,MAAMQ,GAAK,CAAE6B,QAASR,IAEtBA,KAOjB,SAAS5B,EAAiBM,GACxB,OAAOA,EAAQ,CAAEA,MAAAA,GAAUnB,EAC5B,ICzJYkD,EAAb,QAAaA,KALZC,EAAQ,CACPjD,MAAMkD,GACJA,EAAMC,QAAQ,CAAEC,EAAGxD,EAAayD,GAAItD,QAG3BiD"}