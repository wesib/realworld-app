{"version":3,"file":"loader.0815288f.js","sources":["../../../src/core/loader/loader.component.ts","../../../src/reusable/api-error-generator.ts","../../../src/reusable/render-html.decorator.ts","../../../src/reusable/render-pager.decorator.ts","../../../src/core/loader/render-loader.decorator.ts"],"sourcesContent":["import { Attribute, BootstrapWindow, Component, ComponentContext, ElementRenderer, Render } from '@wesib/wesib';\nimport { Conduit__NS } from '../index';\n\n@Component(['loader', Conduit__NS])\nexport class LoaderComponent {\n\n  @Attribute('load-error')\n  loadError?: string | null;\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.contentRoot);\n\n    return () => {\n      range.deleteContents();\n      if (this.loadError != null) {\n        range.insertNode(document.createTextNode(this.loadError));\n      }\n    };\n  }\n\n}\n","import { bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { AIterable, overEntries } from 'a-iterable';\nimport { FnContextKey, FnContextRef } from 'context-values/updatable';\nimport { ApiResponse } from '../core/api';\n\nexport type ApiErrorGenerator = (this: void, errors: ApiResponse.Errors) => Element | undefined;\n\nexport const ApiErrorGenerator: FnContextRef<[ApiResponse.Errors], Element | undefined> = (\n    /*#__PURE__*/ new FnContextKey<[ApiResponse.Errors], Element | undefined>(\n        'api-error-generator',\n        {\n          byDefault: bootstrapDefault(context => {\n\n            const document = context.get(BootstrapWindow).document;\n\n            return errors => {\n\n              let list: Element | undefined;\n\n              AIterable.from(overEntries(errors)).forEach(\n                  ([key, messages]) => {\n                    if (!list) {\n                      list = document.createElement('ul');\n                      list.classList.add('error-messages');\n                    }\n\n                    const ul = list;\n\n                    messages.forEach(message => {\n\n                      const li = document.createElement('li');\n\n                      li.innerText = `${key} ${message}`;\n                      ul.appendChild(li);\n                    });\n                  },\n              );\n\n              return list;\n            };\n          }),\n        },\n    )\n);\n","import {\n  BootstrapWindow,\n  ComponentClass,\n  ComponentContext,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  ElementRenderer,\n  Render,\n} from '@wesib/wesib';\nimport { StatePath } from 'fun-events';\n\nconst HTMLContents__symbol = (/*#__PURE__*/ Symbol('HTML-contents'));\n\nexport function RenderHTML<T extends ComponentClass>(\n    def: {\n      path?: StatePath;\n      comment?: string;\n      offline?: boolean;\n    } = {},\n): ComponentPropertyDecorator<string | Node | null | undefined, T> {\n  return ComponentProperty(({ get, set: setValue, key }) => {\n\n    const {\n      comment = String(key),\n      path = [HTMLContents__symbol, key],\n      offline,\n    } = def;\n\n    return {\n      componentDef: Render({ path, offline }).As(renderHTML, key),\n      get,\n      set(component, value) {\n\n        const prev = get(component);\n\n        if (value !== prev) {\n          setValue(component, value);\n          ComponentContext.of(component).updateState(path, value, prev);\n        }\n      },\n    };\n\n    function renderHTML(this: InstanceType<T>): ElementRenderer {\n\n      const context = ComponentContext.of(this);\n      const { document } = context.get(BootstrapWindow);\n      const { contentRoot }: { contentRoot: Node } = context;\n      const start = contentRoot.appendChild(document.createComment(`[${comment}[`));\n      const end = contentRoot.appendChild(document.createComment(`]${comment}]`));\n      const range = document.createRange();\n\n      range.setStartAfter(start);\n      range.setEndBefore(end);\n\n      return () => {\n        range.deleteContents();\n\n        const html = get(this);\n\n        if (!html) {\n          return;\n        }\n        if (typeof html === 'string') {\n\n          const node = document.createElement('template');\n\n          node.innerHTML = html;\n          range.insertNode(node.content);\n        } else {\n          range.insertNode(html);\n        }\n      };\n    }\n  });\n}\n","import { HandleNavLinks } from '@wesib/generic';\nimport {\n  BootstrapWindow,\n  ComponentClass,\n  ComponentContext,\n  ComponentDef,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n} from '@wesib/wesib';\nimport { StatePath } from 'fun-events';\nimport { RenderHTML } from './render-html.decorator';\n\nexport type PagingInfo =\n    | PagingInfo.Empty\n    | PagingInfo.WithPages;\n\nexport namespace PagingInfo {\n\n  export interface Empty {\n    readonly totalPages?: 0 | 1;\n    readonly visiblePages?: number;\n    readonly currentPage?: number;\n    pageHref?(page: number): string;\n  }\n\n  export interface WithPages {\n    readonly totalPages: number;\n    readonly visiblePages?: number;\n    readonly currentPage?: number;\n    pageHref(page: number): string;\n  }\n\n}\n\nconst PagingInfo__symbol = (/*#__PURE__*/ Symbol('paging-info'));\n\nexport function RenderPager<T extends ComponentClass>(): ComponentPropertyDecorator<PagingInfo, T> {\n  return ComponentProperty(({ get, set, key }) => {\n\n    const path: StatePath = [PagingInfo__symbol, key];\n\n    return {\n      componentDef: ComponentDef.all(\n          RenderHTML({ path, comment: `PAGER(${String(key)})` }).By(pagerContent, key),\n          HandleNavLinks(),\n      ),\n      get,\n      set(component, value) {\n\n        const prev = get(component);\n\n        set(component, value);\n        ComponentContext.of(component).updateState(path, value, prev);\n      },\n    };\n\n    function pagerContent(component: InstanceType<T>): Node | undefined {\n\n      const context = ComponentContext.of(component);\n      const { document } = context.get(BootstrapWindow);\n      const pagingInfo = get(component);\n\n      if (!pagingInfo.totalPages || pagingInfo.totalPages <= 1) {\n        return;\n      }\n\n      const info = pagingInfo as PagingInfo.WithPages;\n      const { totalPages, visiblePages = 5, currentPage = 0 } = info;\n\n      const visible = Math.max(1, visiblePages);\n      const current = Math.max(0, currentPage);\n\n      const ul = document.createElement('ul');\n\n      ul.className = 'pagination';\n\n      let startPage = Math.max(0, current - (visible >> 1));\n      let endPage = startPage + visible;\n\n      if (endPage > totalPages) {\n        startPage = Math.max(0, startPage - (endPage - totalPages));\n        endPage = totalPages;\n      }\n\n      ul.appendChild(pageItem('<<', 0, current > 0));\n      ul.appendChild(pageItem('<', current - 1, current > 0));\n      for (let page = startPage; page < endPage; ++page) {\n        ul.appendChild(pageItem(String(page + 1), page, true, current === page));\n      }\n      ul.appendChild(pageItem('>', current + 1, current + 1 < totalPages));\n      ul.appendChild(pageItem('>>', totalPages - 1, current + 1 < totalPages));\n\n      return ul;\n\n      function pageItem(\n          text: string,\n          page: number,\n          enabled: boolean,\n          active = false,\n      ): HTMLLIElement {\n\n        const li = document.createElement('li');\n\n        li.className = 'page-item';\n\n        let link: HTMLElement;\n\n        if (enabled && !active) {\n          link = document.createElement('a');\n          link.setAttribute('href', info.pageHref(page));\n        } else {\n          li.classList.add(active ? 'active' : 'disabled');\n          link = document.createElement('span');\n        }\n        link.className = 'page-link';\n        link.innerHTML = text;\n        li.appendChild(link);\n\n        return li;\n      }\n    }\n\n  });\n}\n","import {\n  ComponentClass,\n  ComponentContext,\n  ComponentDef,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  DefaultNamespaceAliaser,\n  ElementRenderer,\n  Render,\n} from '@wesib/wesib';\nimport { StatePath } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { ApiErrorGenerator, RenderHTML } from '../../reusable';\nimport { ApiResponse } from '../api';\nimport { Conduit__NS } from '../conduit.ns';\nimport { LoaderComponent } from './loader.component';\n\nexport type LoadStatus =\n    | LoadStatus.Succeed\n    | LoadStatus.Failed;\n\nexport namespace LoadStatus {\n\n  export interface Succeed {\n    readonly ok: true;\n  }\n\n  export interface Failed {\n    readonly ok: false;\n    readonly errors: ApiResponse.Errors;\n  }\n\n}\n\nconst LoadStatus__symbol = (/*#__PURE__*/ Symbol('load-status'));\nconst defaultLoadedClass: QualifiedName = ['loaded', Conduit__NS];\n\nexport function RenderLoader<T extends ComponentClass>(\n    def: {\n      loaded?: QualifiedName;\n      path?: StatePath;\n      offline?: boolean;\n      comment?: string;\n    } = {},\n): ComponentPropertyDecorator<LoadStatus | undefined, T> {\n  return ComponentProperty(({ get, set: setValue, key }) => {\n\n    const {\n      path = [LoadStatus__symbol, key],\n      offline,\n      loaded = defaultLoadedClass,\n      comment = String(key),\n    } = def;\n    let loadedClassName: string;\n\n    return {\n      componentDef: ComponentDef.all(\n          {\n            feature: {\n              needs: LoaderComponent,\n            },\n            define(defContext) {\n              loadedClassName = css__naming.name(loaded, defContext.get(DefaultNamespaceAliaser));\n            },\n          },\n          Render({ path, offline }).As(updateClass, key),\n          RenderHTML({ path, offline, comment: `LOADER(${comment})` }).By(renderLoader, key),\n          RenderHTML({ path, offline, comment: `ERRORS(${comment})` }).By(renderErrors, key),\n      ),\n      get,\n      set(component, value) {\n\n        const prev = get(component);\n\n        setValue(component, value);\n        ComponentContext.of(component).updateState(path, value, prev);\n      },\n    };\n\n    function updateClass(this: InstanceType<T>): ElementRenderer {\n\n      const { element }: { element: Element } = ComponentContext.of(this);\n\n      return () => {\n\n        const status = get(this);\n\n        if (status && status.ok) {\n          element.classList.add(loadedClassName);\n        } else {\n          element.classList.remove(loadedClassName);\n        }\n      };\n    }\n\n    function renderLoader(component: InstanceType<T>): Node | undefined {\n\n      const status = get(component);\n\n      return !status ? document.createElement('conduit-loader') : undefined;\n    }\n\n    function renderErrors(component: InstanceType<T>): Node | undefined {\n\n      const status = get(component);\n\n      return status && !status.ok\n          ? ComponentContext.of(component).get(ApiErrorGenerator)(status.errors)\n          : undefined;\n    }\n\n  });\n}\n"],"names":["LoaderComponent","[object Object]","_context","this","document","get","BootstrapWindow","range","createRange","selectNodeContents","contentRoot","deleteContents","loadError","insertNode","createTextNode","__decorate","Attribute","Render","Component","Conduit__NS","ApiErrorGenerator","FnContextKey","byDefault","bootstrapDefault","context","errors","list","AIterable","from","overEntries","forEach","key","messages","createElement","classList","add","ul","message","li","innerText","appendChild","HTMLContents__symbol","Symbol","RenderHTML","def","ComponentProperty","set","setValue","comment","String","path","offline","componentDef","As","ComponentContext","of","start","createComment","end","setStartAfter","setEndBefore","html","node","innerHTML","content","component","value","prev","updateState","PagingInfo__symbol","RenderPager","ComponentDef","all","By","pagingInfo","totalPages","info","visiblePages","currentPage","visible","Math","max","current","className","startPage","endPage","pageItem","page","text","enabled","active","link","setAttribute","pageHref","HandleNavLinks","LoadStatus__symbol","defaultLoadedClass","RenderLoader","loaded","loadedClassName","feature","needs","defContext","css__naming","name","DefaultNamespaceAliaser","element","status","ok","remove","undefined"],"mappings":"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"}