{"version":3,"file":"comments.5d90b1e8.js","sources":["../../../src/core/comments/comment-service.ts","../../../src/core/comments/comment-service.impl.ts","../../../src/core/comments/comments-support.feature.ts"],"sourcesContent":["import { ContextRef, SingleContextKey } from '@proc7ts/context-values';\nimport { OnEvent } from '@proc7ts/fun-events';\nimport { ApiResponse } from '../api';\nimport { Comment } from './comment';\n\nexport interface CommentList {\n  readonly comments: Comment[];\n}\n\nexport interface CommentService {\n\n  articleComments(slug: string): OnEvent<[ApiResponse<CommentList>]>;\n\n  addComment(slug: string, text: string): OnEvent<[ApiResponse<Comment>]>;\n\n  deleteComment(slug: string, id: number): OnEvent<[ApiResponse<any>]>;\n\n}\n\nexport const CommentService: ContextRef<CommentService> = (\n    /*#__PURE__*/ new SingleContextKey<CommentService>('comment-service')\n);\n","import { OnEvent } from '@proc7ts/fun-events';\nimport { asis } from '@proc7ts/primitives';\nimport { BootstrapContext } from '@wesib/wesib';\nimport { ApiFetch, ApiRequest, ApiResponse } from '../api';\nimport { Comment } from './comment';\nimport { CommentList, CommentService } from './comment-service';\n\nexport class CommentService$ implements CommentService {\n\n  private readonly _apiFetch: ApiFetch;\n\n  constructor(context: BootstrapContext) {\n    this._apiFetch = context.get(ApiFetch);\n  }\n\n  articleComments(slug: string): OnEvent<[ApiResponse<CommentList>]> {\n\n    const apiRequest: ApiRequest<CommentList> = {\n      path: `articles/${encodeURIComponent(slug)}/comments`,\n      init: {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n      respondAs: asis,\n    };\n\n    return this._apiFetch(apiRequest);\n  }\n\n  addComment(slug: string, text: string): OnEvent<[ApiResponse<Comment>]> {\n\n    const apiRequest: ApiRequest<Comment> = {\n      path: `articles/${encodeURIComponent(slug)}/comments`,\n      init: {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          comment: {\n            body: text,\n          },\n        }),\n      },\n      respondAs: 'comment',\n      auth: true,\n    };\n\n    return this._apiFetch(apiRequest);\n  }\n\n  deleteComment(slug: string, id: number): OnEvent<[ApiResponse<any>]> {\n\n    const apiRequest: ApiRequest<any> = {\n      path: `articles/${encodeURIComponent(slug)}/comments/${id}`,\n      init: {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n      respondAs: asis,\n    };\n\n    return this._apiFetch(apiRequest);\n  }\n\n}\n","import { Feature } from '@wesib/wesib';\nimport { CommentService } from './comment-service';\nimport { CommentService$ } from './comment-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: CommentService, as: CommentService$ });\n  },\n})\nexport class CommentsSupport {\n}\n"],"names":["CommentService","SingleContextKey","CommentService$","[object Object]","context","this","_apiFetch","get","ApiFetch","slug","apiRequest","path","encodeURIComponent","init","method","headers","Accept","respondAs","asis","text","Content-Type","body","JSON","stringify","comment","auth","id","CommentsSupport","Feature","setup","provide","a","as"],"mappings":"gSAmBaA,MACSC,EAAiC,yBCb1CC,EAIXC,YAAYC,GACVC,KAAKC,UAAYF,EAAQG,IAAIC,GAG/BL,gBAAgBM,GAEd,MAAMC,EAAsC,CAC1CC,KAAM,YAAYC,mBAAmBH,cACrCI,KAAM,CACJC,OAAQ,MACRC,QAAS,CACPC,OAAQ,qBAGZC,UAAWC,GAGb,OAAOb,KAAKC,UAAUI,GAGxBP,WAAWM,EAAcU,GAEvB,MAAMT,EAAkC,CACtCC,KAAM,YAAYC,mBAAmBH,cACrCI,KAAM,CACJC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRI,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,QAAS,CACPH,KAAMF,MAIZF,UAAW,UACXQ,MAAM,GAGR,OAAOpB,KAAKC,UAAUI,GAGxBP,cAAcM,EAAciB,GAE1B,MAAMhB,EAA8B,CAClCC,KAAM,YAAYC,mBAAmBH,eAAkBiB,IACvDb,KAAM,CACJC,OAAQ,SACRC,QAAS,CACPC,OAAQ,qBAGZC,UAAWC,GAGb,OAAOb,KAAKC,UAAUI,QC1DbiB,EAAb,QAAaA,KALZC,EAAQ,CACPzB,MAAM0B,GACJA,EAAMC,QAAQ,CAAEC,EAAG/B,EAAgBgC,GAAI9B,QAG9ByB"}