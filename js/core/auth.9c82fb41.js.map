{"version":3,"file":"auth.9c82fb41.js","sources":["../../../src/core/auth/auth-service.key.impl.ts","../../../src/core/auth/auth-service.ts","../../../src/core/auth/auth-service.impl.ts","../../../src/core/auth/auth-support.feature.ts","../../../src/core/auth/authentication.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { AuthService } from './auth-service';\n\nexport const AuthService__key = (\n    /*#__PURE__*/ new SingleContextKey<AuthService>('auth-service')\n);\n","import { ContextKey, ContextKey__symbol } from 'context-values';\nimport { AfterEvent, OnEvent } from 'fun-events';\nimport { ApiResponse } from '../api';\nimport { AuthService__key } from './auth-service.key.impl';\nimport { Authentication, AuthToken, AuthUser, NotAuthenticated } from './authentication';\n\nexport interface LoginRequest {\n  readonly email: string;\n  readonly password: string;\n}\n\nexport interface RegisterRequest {\n  readonly username: string;\n  readonly email: string;\n  readonly password: string;\n}\n\nexport interface UpdateSettingsRequest {\n  readonly email: string;\n  readonly username: string;\n  readonly password?: string;\n  readonly bio?: string;\n  readonly image?: string;\n}\n\nexport abstract class AuthService {\n\n  static get [ContextKey__symbol](): ContextKey<AuthService> {\n    return AuthService__key;\n  }\n\n  abstract readonly token: AfterEvent<[AuthToken | NotAuthenticated]>;\n\n  abstract readonly authentication: AfterEvent<[Authentication]>;\n\n  abstract readonly user: AfterEvent<[AuthUser | NotAuthenticated]>;\n\n  abstract login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract register(request: RegisterRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract loadUser(): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract updateSettings(request: UpdateSettingsRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract logout(): void;\n\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { nextSkip } from 'call-thru';\nimport { AfterEvent, afterSupplied, nextAfterEvent, OnEvent, trackValue, trackValueBy, ValueTracker } from 'fun-events';\nimport { DomEventDispatcher } from 'fun-events/dom';\nimport { ApiFetch, ApiRequest, ApiResponse, notAuthenticatedError } from '../api';\nimport { AuthService, LoginRequest, RegisterRequest, UpdateSettingsRequest } from './auth-service';\nimport { Authentication, AuthToken, AuthUser, NotAuthenticated } from './authentication';\n\nconst authTokenKey = 'wesib-conduit:auth';\nconst notAuthenticated: NotAuthenticated = {};\n\nexport class AuthService$ extends AuthService {\n\n  private readonly _auth: ValueTracker<Authentication>;\n  private readonly _token = trackValue<AuthToken | NotAuthenticated>(notAuthenticated);\n  readonly user: AfterEvent<[AuthUser | NotAuthenticated]>;\n\n  get token(): AfterEvent<[AuthToken | NotAuthenticated]> {\n    return this._token.read;\n  }\n\n  get authentication(): AfterEvent<[Authentication]> {\n    return this._auth.read;\n  }\n\n  constructor(private readonly _context: BootstrapContext) {\n    super();\n\n    const window = _context.get(BootstrapWindow);\n    const storage = window.localStorage;\n\n    this._auth = trackValue<Authentication>(toAuthentication(storage.getItem(authTokenKey)));\n    this._token.by(this._auth.read.thru_(\n        ({ token }) => this._token.it.token !== token ? { token } : nextSkip,\n    ));\n\n    let userRequest: [AuthToken | AuthUser, ValueTracker<AuthUser | NotAuthenticated>] | undefined;\n\n    this.user = this._auth.read.keep.thru(\n        auth => {\n          if (!auth.token) {\n            // No token. Can not authenticate.\n            return {\n              failure: {\n                ok: false,\n                errors: notAuthenticatedError(),\n              },\n            };\n          }\n          if (auth.email) {\n            // User authenticated.\n\n            const tracker = trackValue(auth);\n\n            userRequest = [auth, tracker];\n\n            return nextAfterEvent(tracker);\n          }\n          if (userRequest) {\n            // Some user is loading.\n\n            const [requestToken, responseTracker] = userRequest;\n\n            if (requestToken.token === auth.token) {\n              // The right user is loading.\n              return nextAfterEvent(responseTracker);\n            }\n            // Stop loading the wrong user.\n            responseTracker.byNone();\n          }\n\n          // Request user settings.\n          const tracker = trackValueBy(\n              afterSupplied<[AuthUser | NotAuthenticated]>(\n                  this.loadUser().thru_(\n                      response => response.ok ? response.body : { failure: response },\n                  ),\n                  () => [notAuthenticated],\n              ),\n          );\n\n          userRequest = [auth, tracker];\n\n          return nextAfterEvent(tracker);\n        },\n    );\n    this._auth.on(storeAuthToken);\n    new DomEventDispatcher(window).on<StorageEvent>('storage')(({ key, newValue }) => {\n      if (key === authTokenKey) {\n\n        const token = newValue || undefined;\n\n        if (this._auth.it.token !== token) {\n          this._auth.it = toAuthentication(token);\n        }\n      }\n    });\n\n    function storeAuthToken({ token }: Authentication): void {\n      if (token) {\n        storage.setItem(authTokenKey, token);\n      } else {\n        storage.removeItem(authTokenKey);\n      }\n    }\n  }\n\n  login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]> {\n    return this._request('users/login', request);\n  }\n\n  register(request: RegisterRequest): OnEvent<[ApiResponse<AuthUser>]> {\n    return this._request('users', request);\n  }\n\n  loadUser(): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path: 'user',\n      init: {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: true,\n    };\n\n    return apiFetch(apiRequest).thru_(\n        response => {\n          if (response.ok) {\n            this._setUserSettings(response.body);\n          }\n          return response;\n        },\n    );\n  }\n\n  updateSettings(request: UpdateSettingsRequest): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path: 'user',\n      init: {\n        method: 'PUT',\n        body: JSON.stringify({ user: request }),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: true,\n    };\n\n    return apiFetch(apiRequest).thru_(\n        response => {\n          if (response.ok) {\n            this._setUserSettings(response.body);\n          }\n          return response;\n        },\n    );\n  }\n\n  logout(): void {\n    this._auth.it = notAuthenticated;\n  }\n\n  private _setUserSettings(user: AuthUser): void {\n    this._auth.it = {\n      ...user,\n      token: this._token.it.token || user.token, // Do not update token here, as this would cause multiple user reloads\n    };\n  }\n\n  private _request(\n      path: string,\n      request: object,\n  ): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path,\n      init: {\n        method: 'POST',\n        body: JSON.stringify({ user: request }),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: false,\n    };\n\n    return apiFetch(apiRequest).thru_(\n        response => {\n          if (response.ok) {\n            this._auth.it = response.body;\n          } else if (response.ok === false) {\n            this._auth.it = { failure: response };\n          }\n          return response;\n        },\n    );\n  }\n\n}\n\nfunction toAuthentication(token: string | null | undefined): Authentication {\n  return token ? { token } : notAuthenticated;\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthService } from './auth-service';\nimport { AuthService$ } from './auth-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: AuthService, as: AuthService$ });\n  },\n})\nexport class AuthSupport {\n}\n","import { ApiResponse } from '../api';\n\nexport interface AuthToken {\n  readonly token: string;\n  readonly email?: undefined;\n  readonly username?: undefined;\n  readonly failure?: undefined;\n}\n\nexport interface NotAuthenticated {\n  readonly token?: undefined;\n  readonly email?: undefined;\n  readonly username?: undefined;\n  readonly failure?: ApiResponse.Failure;\n}\n\nexport const notAuthenticated: NotAuthenticated = {};\n\nexport type Authentication =\n    | NotAuthenticated\n    | AuthToken\n    | AuthUser;\n\nexport interface AuthUser {\n  readonly email: string;\n  readonly token: string;\n  readonly username: string;\n  readonly bio?: string;\n  readonly image?: string;\n  readonly failure?: undefined;\n}\n"],"names":["AuthService__key","SingleContextKey","AuthService","ContextKey__symbol","notAuthenticated","AuthService$","[object Object]","_context","super","this","trackValue","window","get","BootstrapWindow","storage","localStorage","userRequest","_auth","toAuthentication","getItem","_token","by","read","thru_","token","it","nextSkip","user","keep","thru","auth","failure","ok","errors","notAuthenticatedError","email","tracker","nextAfterEvent","requestToken","responseTracker","byNone","trackValueBy","afterSupplied","loadUser","response","body","on","setItem","removeItem","DomEventDispatcher","key","newValue","undefined","authentication","request","_request","ApiFetch","apiFetch","path","init","method","headers","Accept","respondAs","_setUserSettings","JSON","stringify","Content-Type","AuthSupport","Feature","setup","provide","a","as"],"mappings":"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"}