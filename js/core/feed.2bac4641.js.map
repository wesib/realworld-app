{"version":3,"file":"feed.2bac4641.js","sources":["../../../src/core/feed/feed-request.ts","../../../src/core/feed/feed-service.ts","../../../src/core/feed/feed-service.impl.ts","../../../src/core/feed/feed-support.feature.ts"],"sourcesContent":["import { itsEach, thruIt } from 'a-iterable';\nimport { NextSkip, nextSkip } from 'call-thru';\n\nexport type FeedId = '/personal-feed' | '/global-feed';\n\nexport interface FeedRequest {\n  readonly feed?: FeedId;\n  readonly tag?: string;\n  readonly author?: string;\n  readonly favorited?: string;\n  readonly limit?: number;\n  readonly offset?: number;\n}\n\nconst feedRequestKeys: readonly (keyof FeedRequest)[] = ['feed', 'tag', 'author', 'favorited', 'limit', 'offset'];\n\nexport function feedRequestsEqual(first: FeedRequest, second: FeedRequest): boolean {\n  return feedRequestKeys.every(key => first[key] === second[key]);\n}\n\nexport function feedRequestSearchParams(request: FeedRequest): URLSearchParams {\n\n  const params = new URLSearchParams();\n\n  itsEach(\n      thruIt(\n          feedRequestKeys,\n          key => key !== 'feed' ? key : nextSkip,\n          (key: keyof FeedRequest): [keyof FeedRequest, string] | NextSkip => {\n\n            const value = request[key];\n\n            return value ? [key, String(value)] : nextSkip;\n          },\n      ),\n      ([key, value]) => params.set(key, value),\n  );\n\n  return params;\n}\n","import { ContextRef, SingleContextKey } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { ApiResponse } from '../api';\nimport { Article } from '../articles';\nimport { FeedRequest } from './feed-request';\n\nexport interface ArticleList {\n  readonly articles: readonly Article[];\n  readonly articlesCount: number;\n}\n\nexport interface FeedService {\n\n  articles(request: FeedRequest): OnEvent<[ApiResponse<ArticleList>]>;\n\n  tags(): OnEvent<string[]>;\n\n}\n\nexport const FeedService: ContextRef<FeedService> = (\n    /*#__PURE__*/ new SingleContextKey<FeedService>('feed-service')\n);\n","import { BootstrapContext } from '@wesib/wesib';\nimport { asis, nextArg, nextArgs, nextSkip } from 'call-thru';\nimport { afterSupplied, OnEvent, onEventBy, trackValueBy } from 'fun-events';\nimport { ApiFetch, ApiRequest, ApiResponse } from '../api';\nimport { FeedId, FeedRequest, feedRequestSearchParams } from './feed-request';\nimport { ArticleList, FeedService } from './feed-service';\n\ninterface FeedSource {\n  path: string;\n  auth?: boolean;\n}\n\nconst feedSources: { readonly [id in FeedId]: FeedSource } = {\n  '/personal-feed': { path: 'articles/feed', auth: true },\n  '/global-feed': { path: 'articles' },\n};\n\nexport class FeedService$ implements FeedService {\n\n  private readonly _apiFetch: ApiFetch;\n  private _tags?: OnEvent<string[]>;\n\n  constructor(context: BootstrapContext) {\n    this._apiFetch = context.get(ApiFetch);\n  }\n\n  articles(request: FeedRequest): OnEvent<[ApiResponse<ArticleList>]> {\n\n    const { path, auth } = feedSources[request.feed || '/global-feed'];\n\n    const apiRequest: ApiRequest<ArticleList> = {\n      path: `${path}?${feedRequestSearchParams(request)}`,\n      init: {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n      auth,\n      respondAs: asis,\n    };\n\n    return this._apiFetch(apiRequest);\n  }\n\n  tags(): OnEvent<string[]> {\n    if (this._tags) {\n      return this._tags;\n    }\n\n    let onTags: OnEvent<string[]> | undefined;\n\n    return this._tags = onEventBy(receiver => {\n      if (!onTags) {\n\n        const apiRequest: ApiRequest<string[]> = {\n          path: 'tags',\n          init: {\n            method: 'GET',\n            headers: {\n              Accept: 'application/json',\n            },\n          },\n          respondAs: 'tags',\n          auth: false,\n        };\n        const onTagsLoad: OnEvent<[string[]]> = this._apiFetch(apiRequest).thru_(response => {\n          if (response.ok) {\n            return nextArg(response.body);\n          }\n          if (response.ok === false) {\n            console.log('Failed to load tags', response.errors);\n            return nextArg([]);\n          }\n          return nextSkip;\n        });\n        const tags = trackValueBy<string[] | undefined>(\n            afterSupplied<[string[]?]>(onTagsLoad, () => []),\n        );\n\n        onTags = tags.read.thru_(\n            tagList => tagList ? nextArgs(...tagList) : nextSkip,\n        );\n      }\n\n      onTags(receiver);\n    });\n  }\n\n}\n","import { Feature } from '@wesib/wesib';\nimport { FeedService } from './feed-service';\nimport { FeedService$ } from './feed-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: FeedService, as: FeedService$ });\n  },\n})\nexport class FeedSupport {\n}\n"],"names":["feedRequestKeys","feedRequestsEqual","first","second","every","key","feedRequestSearchParams","request","params","URLSearchParams","itsEach","thruIt","nextSkip","value","String","set","FeedService","SingleContextKey","feedSources","/personal-feed","path","auth","/global-feed","FeedService$","[object Object]","context","this","_apiFetch","get","ApiFetch","feed","apiRequest","init","method","headers","Accept","respondAs","asis","_tags","onTags","onEventBy","receiver","onTagsLoad","thru_","response","ok","nextArg","body","console","log","errors","tags","trackValueBy","afterSupplied","read","tagList","nextArgs","FeedSupport","Feature","setup","provide","a","as"],"mappings":"qXAcA,MAAMA,EAAkD,CAAC,OAAQ,MAAO,SAAU,YAAa,QAAS,mBAExFC,EAAkBC,EAAoBC,GACpD,OAAOH,EAAgBI,MAAMC,GAAOH,EAAMG,KAASF,EAAOE,aAG5CC,EAAwBC,GAEtC,MAAMC,EAAS,IAAIC,gBAgBnB,OAdAC,EACIC,EACIX,EACAK,GAAe,SAARA,EAAiBA,EAAMO,EAC7BP,IAEC,MAAMQ,EAAQN,EAAQF,GAEtB,OAAOQ,EAAQ,CAACR,EAAKS,OAAOD,IAAUD,IAG5C,EAAEP,EAAKQ,KAAWL,EAAOO,IAAIV,EAAKQ,IAG/BL,QCnBIQ,MACSC,EAA8B,gBCR9CC,EAAuD,CAC3DC,iBAAkB,CAAEC,KAAM,gBAAiBC,MAAM,GACjDC,eAAgB,CAAEF,KAAM,aAG1B,MAAaG,EAKXC,YAAYC,GACVC,KAAKC,UAAYF,EAAQG,IAAIC,GAG/BL,SAASjB,GAEP,MAAMa,KAAEA,EAAIC,KAAEA,GAASH,EAAYX,EAAQuB,MAAQ,gBAE7CC,EAAsC,CAC1CX,KAAM,GAAGA,KAAQd,EAAwBC,KACzCyB,KAAM,CACJC,OAAQ,MACRC,QAAS,CACPC,OAAQ,qBAGZd,KAAAA,EACAe,UAAWC,GAGb,OAAOX,KAAKC,UAAUI,GAGxBP,OACE,GAAIE,KAAKY,MACP,OAAOZ,KAAKY,MAGd,IAAIC,EAEJ,OAAOb,KAAKY,MAAQE,EAAUC,IAC5B,IAAKF,EAAQ,CAEX,MAAMR,EAAmC,CACvCX,KAAM,OACNY,KAAM,CACJC,OAAQ,MACRC,QAAS,CACPC,OAAQ,qBAGZC,UAAW,OACXf,MAAM,GAEFqB,EAAkChB,KAAKC,UAAUI,GAAYY,MAAMC,GACnEA,EAASC,GACJC,EAAQF,EAASG,OAEN,IAAhBH,EAASC,IACXG,QAAQC,IAAI,sBAAuBL,EAASM,QACrCJ,EAAQ,KAEVlC,GAEHuC,EAAOC,EACTC,EAA2BX,EAAY,IAAM,KAGjDH,EAASY,EAAKG,KAAKX,MACfY,GAAWA,EAAUC,KAAYD,GAAW3C,GAIlD2B,EAAOE,MAIZ,IChFYgB,EAAb,QAAaA,KALZC,EAAQ,CACPlC,MAAMmC,GACJA,EAAMC,QAAQ,CAAEC,EAAG7C,EAAa8C,GAAIvC,QAG3BkC"}