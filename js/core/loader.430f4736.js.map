{"version":3,"file":"loader.430f4736.js","sources":["../../../src/core/loader/loader.component.ts","../../../src/reusable/api-error-generator.ts","../../../src/reusable/format-date.ts","../../../src/reusable/render-html.decorator.ts","../../../src/reusable/render-pager.decorator.ts","../../../src/reusable/multi-input.component.ts","../../../src/core/loader/render-loader.decorator.ts"],"sourcesContent":["import { Attribute, BootstrapWindow, Component, ComponentContext, ElementRenderer, Render } from '@wesib/wesib';\nimport { Conduit__NS } from '../index';\n\n@Component(['loader', Conduit__NS])\nexport class LoaderComponent {\n\n  @Attribute('load-error')\n  loadError?: string | null;\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { document } = this._context.get(BootstrapWindow);\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.contentRoot);\n\n    return () => {\n      range.deleteContents();\n      if (this.loadError != null) {\n        range.insertNode(document.createTextNode(this.loadError));\n      }\n    };\n  }\n\n}\n","import { FnContextKey, FnContextRef } from '@proc7ts/context-values/updatable';\nimport { overEntries } from '@proc7ts/push-iterator';\nimport { bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { ApiResponse } from '../core/api';\n\nexport type ApiErrorGenerator = (this: void, errors: ApiResponse.Errors) => Element | undefined;\n\nexport const ApiErrorGenerator: FnContextRef<[ApiResponse.Errors], Element | undefined> = (\n    /*#__PURE__*/ new FnContextKey<[ApiResponse.Errors], Element | undefined>(\n        'api-error-generator',\n        {\n          byDefault: bootstrapDefault(context => {\n\n            const document = context.get(BootstrapWindow).document;\n\n            return errors => {\n\n              let list: Element | undefined;\n\n              for (const [key, messages] of overEntries(errors)) {\n                if (!list) {\n                  list = document.createElement('ul');\n                  list.classList.add('error-messages');\n                }\n\n                const ul = list;\n\n                messages.forEach(message => {\n\n                  const li = document.createElement('li');\n\n                  li.innerText = `${key} ${message}`;\n                  ul.appendChild(li);\n                });\n              }\n\n              return list;\n            };\n          }),\n        },\n    )\n);\n","const thisYearDateFormat = new Intl.DateTimeFormat('en-US', { month: 'long', day: 'numeric' });\nconst otherYearFateFormat = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n\nexport function formatDate(date: Date): string {\n\n  const now = new Date();\n  const format = now.getFullYear() === date.getFullYear() ? thisYearDateFormat : otherYearFateFormat;\n\n  return format.format(date);\n}\n","import {\n  BootstrapWindow,\n  ComponentClass,\n  ComponentContext,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  ElementRenderer,\n  Render,\n  RenderDef,\n} from '@wesib/wesib';\n\nexport function RenderHTML<T extends ComponentClass>(\n    def: {\n      render?: RenderDef;\n      comment?: string;\n    } = {},\n): ComponentPropertyDecorator<() => string | Node | null | undefined, T> {\n  return ComponentProperty(({ get, key }) => {\n\n    const {\n      comment = String(key),\n      render,\n    } = def;\n\n    return {\n      componentDef: Render(render).As(renderHTML, key),\n    };\n\n    function renderHTML(this: InstanceType<T>): ElementRenderer {\n\n      const context = ComponentContext.of(this);\n      const { document } = context.get(BootstrapWindow);\n      const { contentRoot }: { contentRoot: Node } = context;\n      const start = contentRoot.appendChild(document.createComment(`[${comment}[`));\n      const end = contentRoot.appendChild(document.createComment(`]${comment}]`));\n      const range = document.createRange();\n\n      range.setStartAfter(start);\n      range.setEndBefore(end);\n\n      return () => {\n        range.deleteContents();\n\n        const html = get(this).call(this);\n\n        if (!html) {\n          return;\n        }\n        if (typeof html === 'string') {\n\n          const node = document.createElement('template');\n\n          node.innerHTML = html;\n          range.insertNode(node.content);\n        } else {\n          range.insertNode(html);\n        }\n      };\n    }\n  });\n}\n","import { StatePath } from '@proc7ts/fun-events';\nimport { HandleNavLinks } from '@wesib/generic';\nimport {\n  BootstrapWindow,\n  ComponentClass,\n  ComponentContext,\n  ComponentDef,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  RenderDef,\n  RenderPath__root,\n} from '@wesib/wesib';\nimport { RenderHTML } from './render-html.decorator';\n\nexport type PagingInfo =\n    | PagingInfo.Empty\n    | PagingInfo.WithPages;\n\nexport namespace PagingInfo {\n\n  export interface Empty {\n    readonly totalPages?: 0 | 1;\n    readonly visiblePages?: number;\n    readonly currentPage?: number;\n    pageHref?(page: number): string;\n  }\n\n  export interface WithPages {\n    readonly totalPages: number;\n    readonly visiblePages?: number;\n    readonly currentPage?: number;\n    pageHref(page: number): string;\n  }\n\n}\n\nconst PagingInfo__symbol = (/*#__PURE__*/ Symbol('paging-info'));\n\nexport function RenderPager<T extends ComponentClass>(\n    def: {\n      render?: RenderDef.Options;\n    } = {},\n): ComponentPropertyDecorator<PagingInfo, T> {\n\n  const { render: renderOptions } = def;\n\n  return ComponentProperty(({ get, set, key }) => {\n\n    const path: StatePath = [RenderPath__root, PagingInfo__symbol, key];\n    const render = RenderDef.fulfill({ on: path }, renderOptions);\n\n    return {\n      componentDef: ComponentDef.all(\n          RenderHTML({ render, comment: `PAGER(${String(key)})` }).As(pagerContent, key),\n          HandleNavLinks(),\n      ),\n      get,\n      set(component, value) {\n\n        const prev = get(component);\n\n        set(component, value);\n        ComponentContext.of(component).updateState(path, value, prev);\n      },\n    };\n\n    function pagerContent(this: InstanceType<T>): Node | undefined {\n\n      const context = ComponentContext.of(this);\n      const { document } = context.get(BootstrapWindow);\n      const pagingInfo = get(this);\n\n      if (!pagingInfo.totalPages || pagingInfo.totalPages <= 1) {\n        return;\n      }\n\n      const info = pagingInfo as PagingInfo.WithPages;\n      const { totalPages, visiblePages = 5, currentPage = 0 } = info;\n\n      const visible = Math.max(1, visiblePages);\n      const current = Math.max(0, currentPage);\n\n      const ul = document.createElement('ul');\n\n      ul.className = 'pagination';\n\n      let startPage = Math.max(0, current - (visible >> 1));\n      let endPage = startPage + visible;\n\n      if (endPage > totalPages) {\n        startPage = Math.max(0, startPage - (endPage - totalPages));\n        endPage = totalPages;\n      }\n\n      ul.appendChild(pageItem('<<', 0, current > 0));\n      ul.appendChild(pageItem('<', current - 1, current > 0));\n      for (let page = startPage; page < endPage; ++page) {\n        ul.appendChild(pageItem(String(page + 1), page, true, current === page));\n      }\n      ul.appendChild(pageItem('>', current + 1, current + 1 < totalPages));\n      ul.appendChild(pageItem('>>', totalPages - 1, current + 1 < totalPages));\n\n      return ul;\n\n      function pageItem(\n          text: string,\n          page: number,\n          enabled: boolean,\n          active = false,\n      ): HTMLLIElement {\n\n        const li = document.createElement('li');\n\n        li.className = 'page-item';\n\n        let link: HTMLElement;\n\n        if (enabled && !active) {\n          link = document.createElement('a');\n          link.setAttribute('href', info.pageHref(page));\n        } else {\n          li.classList.add(active ? 'active' : 'disabled');\n          link = document.createElement('span');\n        }\n        link.className = 'page-link';\n        link.innerHTML = text;\n        li.appendChild(link);\n\n        return li;\n      }\n    }\n\n  });\n}\n","import { AbstractInElement, InConverter, InElement } from '@frontmeans/input-aspects';\nimport { DeltaSet } from '@proc7ts/delta-set';\nimport { overArray } from '@proc7ts/push-iterator';\nimport {\n  AttachShadow,\n  AttributeChanged,\n  BootstrapWindow,\n  Component,\n  ComponentContext,\n  ContentRoot,\n  DomProperty,\n  domPropertyPathTo,\n  ElementRenderer,\n  Render,\n} from '@wesib/wesib';\nimport { Conduit__NS } from '../core';\n\nexport class MultiInputEvent extends CustomEvent<readonly string[]> {\n}\n\nconst trailingSpace = /\\s$/;\n\n/**\n * Tags input based on [multi-input](https://github.com/samdutton/multi-input) component by Sam Dutton.\n *\n * Does not allow duplicates. Does not limit a list of allowed values. Expects values to be space-separated.\n *\n * Raises {@link MultiInputEvent} on list update.\n */\n@Component(['multi-input', Conduit__NS])\n@AttachShadow()\nexport class MultiInputComponent {\n\n  private readonly _set = new DeltaSet<string>();\n  private _list: readonly string[] | null = null;\n  private _input?: HTMLInputElement;\n  private _datalist?: HTMLDataListElement;\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  get input(): HTMLInputElement {\n    // Initialize it lazily as it may be dynamically created.\n    if (this._input) {\n      return this._input;\n    }\n\n    const { element } = this._context as { element: Element };\n\n    this._input = element.querySelector('input')!;\n    this._input.onblur = this._input.onchange = this._handleBlur.bind(this);\n    this._input.oninput = this._handleInput.bind(this);\n    this._input.onkeydown = this._handleKeydown.bind(this);\n\n    return this._input;\n  }\n\n  get datalist(): HTMLDataListElement {\n    // Initialize it lazily as it may be dynamically created.\n    if (this._datalist) {\n      return this._datalist;\n    }\n\n    const { element } = this._context as { element: Element };\n\n    this._datalist = element.querySelector('datalist')!;\n\n    return this._datalist;\n  }\n\n  get values(): readonly string[] {\n    return this._list || (this._list = [...this._set]);\n  }\n\n  @DomProperty()\n  set values(values: readonly string[]) {\n    this._list = values;\n    this._set.clear();\n    this._set.delta(values || []);\n  }\n\n  get readonly(): boolean {\n    return this.input.disabled || this.input.readOnly;\n  }\n\n  @AttributeChanged('disabled')\n  setDisabled(value: string | null): void {\n    if (value != null) {\n      this.input.setAttribute('disabled', value);\n    } else {\n      this.input.removeAttribute('disabled');\n    }\n  }\n\n  @AttributeChanged('readonly')\n  setReadonly(value: string | null): void {\n    if (value != null) {\n      this.input.setAttribute('readonly', value);\n    } else {\n      this.input.removeAttribute('readonly');\n    }\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const { contentRoot, element } = this._context as { contentRoot: ContentRoot; element: Element };\n    const { document } = this._context.get(BootstrapWindow);\n\n    contentRoot.innerHTML = `<style>\n:host {\n  border: var(--multi-input-border, 1px solid #ddd);\n  display: block;\n  overflow: hidden;\n  padding: 5px;\n}\n/* NB use of pointer-events to only allow events from the × icon */\n::slotted(div.item) {\n  background-color: var(--multi-input-item-bg-color, #dedede);\n  border: var(--multi-input-item-border, 1px solid #ccc);\n  border-radius: 2px;\n  color: #222;\n  display: inline-block;\n  font-size: var(--multi-input-item-font-size, 14px);\n  margin: 5px;\n  padding: 2px 25px 2px 5px;\n  pointer-events: none;\n  position: relative;\n  top: -1px;\n}\n/* NB pointer-events: none above */\n::slotted(div.item:hover) {\n  background-color: #eee;\n  color: black;\n}\n::slotted(input) {\n  border: none;\n  font-size: var(--multi-input-input-font-size, 14px);\n  outline: none;\n  padding: 10px 10px 10px 5px;\n}\n</style>\n<slot></slot>`;\n\n    element.insertBefore(document.createComment('[ITEMS['), this.input);\n\n    const end = element.insertBefore(document.createComment(']ITEMS]'), this.input);\n    const valueOption = (value: string): HTMLOptionElement | undefined => {\n\n      const match = value + ' ';\n\n      for (const option of overArray(this.datalist.options)) {\n        if (option.value === match) {\n          return option;\n        }\n      }\n\n      return;\n    };\n    const valueItem = (value: string): Element | undefined => {\n      for (const item of overArray(element.querySelectorAll('.item'))) {\n        if (item.textContent === value) {\n          return item;\n        }\n      }\n      return;\n    };\n\n    return () => {\n      this._set.redelta({\n        add: value => {\n          if (!valueItem(value)) {\n\n            const item = document.createElement('div');\n\n            item.className = 'item';\n            item.textContent = value;\n            item.onclick = () => {\n              if (!this.readonly) {\n                this._delete(value);\n              }\n            };\n\n            element.insertBefore(item, end);\n          }\n\n          // Remove value from datalist options.\n          // Value is added back if an item is deleted (see _delete()).\n          valueOption(value)?.remove();\n        },\n        delete: value => {\n          // Remove item\n          valueItem(value)?.remove();\n\n          // Add datalist option unless there is one already\n          if (!valueOption(value)) {\n\n            const option = document.createElement('option');\n\n            // Append space to force adding value when option selected.\n            option.value = value + ' ';\n            this.datalist.appendChild(option);\n          }\n        },\n      }).undelta();\n    };\n  }\n\n  // Called by _handleKeydown() when the value of the input is an allowed value.\n  private _add(value: string, force = false): void {\n    if (!force && !trailingSpace.test(value)) {\n      return;\n    }\n    value = value.trim();\n    if (!value) {\n      return;\n    }\n\n    this._set.add(value);\n    this._list = null;\n    this.input.value = '';\n    this._sendEvent();\n  }\n\n  // Called when the × icon is tapped/clicked or\n  // by _handleKeydown() when Backspace is entered.\n  private _delete(value: string): void {\n    this._set.delete(value);\n    this._list = null;\n    this._sendEvent();\n  }\n\n  // Avoid stray text remaining in the input element that's not in a div.item.\n  private _handleBlur(): void {\n\n    const { value } = this.input;\n\n    this.input.value = '';\n    this._add(value, true);\n  }\n\n  // Called when input text changes,\n  // either by entering text or selecting a datalist option.\n  private _handleInput(): void {\n    // Add a div.item\n    this._add(this.input.value);\n  }\n\n  // Called when text is entered or keys pressed in the input element.\n  private _handleKeydown(event: KeyboardEvent): void {\n\n    const value = this.input.value;\n\n    // On Backspace, delete the div.item to the left of the input\n    if (!value && event.key === 'Backspace') {\n\n      const { values } = this;\n\n      if (values.length) {\n        this._delete(values[values.length - 1]);\n      }\n\n      return;\n    }\n\n    this._add(this.input.value);\n  }\n\n  private _sendEvent(): void {\n    this._context.updateState(domPropertyPathTo('values'), this.values, this.values);\n    this._context.dispatchEvent(new MultiInputEvent('conduit:input', { bubbles: true, detail: this.values }));\n  }\n\n}\n\nexport namespace MultiInputComponent {\n\n  export interface Element extends HTMLElement {\n    values: readonly string[];\n  }\n\n  export type Control = InElement<readonly string[], Element>;\n\n}\n\nclass MultiInputControl extends AbstractInElement<readonly string[], MultiInputComponent.Element> {\n\n  constructor(\n      element: MultiInputComponent.Element,\n      {\n        aspects,\n      }: {\n        readonly aspects?: InConverter.Aspect<readonly string[]> | readonly InConverter.Aspect<readonly string[]>[];\n      } = {},\n  ) {\n    super(\n        element,\n        {\n          aspects,\n          get: () => element.values,\n          set: (values: readonly string[]) => {\n            element.values = values;\n          },\n        },\n    );\n  }\n\n  protected listenForInput(\n      update: (input: InElement.Input<readonly string[]>) => void,\n  ): void {\n    this.events.on<MultiInputEvent>('conduit:input')(event => {\n      update({ event, value: event.detail });\n    });\n  }\n\n}\n\nexport function inMultiInput(\n    element: MultiInputComponent.Element,\n    {\n      aspects,\n    }: {\n      readonly aspects?: InConverter.Aspect<readonly string[]> | readonly InConverter.Aspect<readonly string[]>[];\n    } = {},\n): MultiInputComponent.Control {\n  return new MultiInputControl(element, { aspects });\n}\n","import { css__naming, QualifiedName } from '@frontmeans/namespace-aliaser';\nimport { RenderExecution } from '@frontmeans/render-scheduler';\nimport {\n  ComponentClass,\n  ComponentContext,\n  ComponentDef,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  DefaultNamespaceAliaser,\n  ElementRenderer,\n  Render,\n  RenderDef,\n  RenderPath__root,\n} from '@wesib/wesib';\nimport { ApiErrorGenerator, RenderHTML } from '../../reusable';\nimport { ApiResponse } from '../api';\nimport { Conduit__NS } from '../conduit.ns';\nimport { LoaderComponent } from './loader.component';\n\nexport type LoadStatus =\n    | LoadStatus.Succeed\n    | LoadStatus.Failed;\n\nexport namespace LoadStatus {\n\n  export interface Succeed {\n    readonly ok: true;\n  }\n\n  export interface Failed {\n    readonly ok: false;\n    readonly errors: ApiResponse.Errors;\n  }\n\n}\n\nconst LoadStatus__symbol = (/*#__PURE__*/ Symbol('load-status'));\nconst defaultLoadedClass: QualifiedName = ['loaded', Conduit__NS];\n\nexport function RenderLoader<T extends ComponentClass>(\n    def: {\n      loaded?: QualifiedName;\n      render?: RenderDef.Spec;\n      comment?: string;\n    } = {},\n): ComponentPropertyDecorator<LoadStatus | undefined, T> {\n  return ComponentProperty(({ get, set: setValue, key }) => {\n\n    const {\n      render: renderSpec = {},\n      loaded = defaultLoadedClass,\n      comment = String(key),\n    } = def;\n    const path = [RenderPath__root, LoadStatus__symbol, key];\n    let loadedClassName: string;\n    const render = RenderDef.fulfill({ on: path }, renderSpec);\n\n    return {\n      componentDef: ComponentDef.all(\n          {\n            feature: {\n              needs: LoaderComponent,\n            },\n            define(defContext) {\n              loadedClassName = css__naming.name(loaded, defContext.get(DefaultNamespaceAliaser));\n              if (renderSpec.on) {\n                defContext.whenComponent(context => {\n                  RenderDef.trigger(context, renderSpec)(\n                      () => context.updateState(path, 'new', 'old'),\n                  );\n                });\n              }\n            },\n          },\n          Render(render).As(updateClass, key),\n          RenderHTML({ render, comment: `LOADER(${comment})` }).As(renderLoader, key),\n          RenderHTML({ render, comment: `ERRORS(${comment})` }).As(renderErrors, key),\n      ),\n      get,\n      set(component, value) {\n\n        const prev = get(component);\n\n        setValue(component, value);\n        ComponentContext.of(component).updateState(path, value, prev);\n      },\n    };\n\n    function updateClass(this: InstanceType<T>): ElementRenderer {\n\n      const { element }: { element: Element } = ComponentContext.of(this);\n\n      return (execution: RenderExecution) => {\n\n        const status = get(this);\n\n        if (status && status.ok) {\n          // Make contents visible in the very end\n          execution.postpone(() => {\n            element.classList.add(loadedClassName);\n          });\n        } else {\n          element.classList.remove(loadedClassName);\n        }\n      };\n    }\n\n    function renderLoader(this: InstanceType<T>): Node | undefined {\n\n      const status = get(this);\n\n      return !status ? document.createElement('conduit-loader') : undefined;\n    }\n\n    function renderErrors(this: InstanceType<T>): Node | undefined {\n\n      const status = get(this);\n\n      return status && !status.ok\n          ? ComponentContext.of(this).get(ApiErrorGenerator)(status.errors)\n          : undefined;\n    }\n\n  });\n}\n"],"names":["LoaderComponent","[object Object]","_context","this","document","get","BootstrapWindow","range","createRange","selectNodeContents","contentRoot","deleteContents","loadError","insertNode","createTextNode","__decorate","Attribute","Render","Component","Conduit__NS","ApiErrorGenerator","FnContextKey","byDefault","bootstrapDefault","context","errors","list","key","messages","overEntries","createElement","classList","add","ul","forEach","message","li","innerText","appendChild","thisYearDateFormat","Intl","DateTimeFormat","month","day","otherYearFateFormat","year","formatDate","date","Date","getFullYear","format","RenderHTML","def","ComponentProperty","comment","String","render","componentDef","As","ComponentContext","of","start","createComment","end","setStartAfter","setEndBefore","html","call","node","innerHTML","content","PagingInfo__symbol","Symbol","RenderPager","renderOptions","set","path","RenderPath__root","RenderDef","fulfill","on","ComponentDef","all","pagingInfo","totalPages","info","visiblePages","currentPage","visible","Math","max","current","className","startPage","endPage","pageItem","page","text","enabled","active","link","setAttribute","pageHref","HandleNavLinks","component","value","prev","updateState","MultiInputEvent","CustomEvent","trailingSpace","MultiInputComponent","DeltaSet","input","_input","element","querySelector","onblur","onchange","_handleBlur","bind","oninput","_handleInput","onkeydown","_handleKeydown","datalist","_datalist","values","_list","_set","clear","delta","readonly","disabled","readOnly","removeAttribute","insertBefore","valueOption","match","option","overArray","options","valueItem","item","querySelectorAll","textContent","redelta","onclick","_delete","remove","delete","undelta","force","test","trim","_sendEvent","_add","event","length","domPropertyPathTo","dispatchEvent","bubbles","detail","DomProperty","AttributeChanged","AttachShadow","MultiInputControl","AbstractInElement","aspects","super","update","events","inMultiInput","LoadStatus__symbol","defaultLoadedClass","RenderLoader","setValue","renderSpec","loaded","loadedClassName","feature","needs","defContext","css__naming","name","DefaultNamespaceAliaser","whenComponent","trigger","execution","status","ok","postpone","undefined"],"mappings":"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"}