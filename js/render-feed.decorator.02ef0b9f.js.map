{"version":3,"file":"render-feed.decorator.02ef0b9f.js","sources":["../../src/pages/home/page-feed-param.ts","../../src/pages/home/article-list.share.ts","../../src/pages/home/article-preview.component.ts","../../src/pages/home/article-list.component.ts","../../src/pages/home/feed-request.share.ts","../../src/pages/home/feed-pager.component.ts","../../src/pages/home/render-feed.decorator.ts"],"sourcesContent":["import { Page, PageHashURLParam, PageParam } from '@wesib/generic';\nimport { FeedRequest, feedRequestSearchParams } from '../../core/feed';\n\nclass PageFeedParam$ extends PageParam<FeedRequest, FeedRequest> {\n\n  create(page: Page, input: FeedRequest): PageParam.Handle<FeedRequest, FeedRequest> {\n\n    const handle = this.byDefault(page);\n\n    handle.put(input);\n\n    return handle;\n  }\n\n  byDefault(page: Page): PageParam.Handle<FeedRequest, FeedRequest> {\n    return {\n      get() {\n\n        const { searchParams: params, pathname } = page.get(PageHashURLParam);\n\n        return {\n          feed: pathname === '/personal-feed' ? pathname : undefined,\n          tag: params.get('tag') || undefined,\n          limit: parseInt(params.get('limit') || '', 10) || undefined,\n          offset: parseInt(params.get('offset') || '', 10) || undefined,\n        };\n      },\n      put(value) {\n\n        const { feed } = value;\n        const url = new URL(page.get(PageHashURLParam).href);\n\n        url.pathname = feed === '/personal-feed' ? feed : '';\n\n        const searchParams = feedRequestSearchParams(value).toString();\n\n        url.search = searchParams ? '?' + searchParams : '';\n\n        page.put(PageHashURLParam, url);\n      },\n    };\n  }\n\n}\n\nexport type PageFeedParam = PageParam.WithDefaults<FeedRequest, FeedRequest>;\n\nexport const PageFeedParam: PageFeedParam = (/*#__PURE__*/ new PageFeedParam$());\n","import { ContextKey__symbol } from '@proc7ts/context-values';\nimport { AfterEvent, mapAfter_ } from '@proc7ts/fun-events';\nimport { Share, Share__symbol } from '@wesib/generic';\nimport { ComponentContext } from '@wesib/wesib';\nimport { ArticleList, noArticles } from '../../core/feed';\n\nexport class ArticleListShare extends Share<ArticleList> {\n\n  private constructor() {\n    super('current-article');\n  }\n\n  static readonly [Share__symbol]: ArticleListShare = new ArticleListShare();\n\n  static get [ContextKey__symbol](): Share.Key<ArticleList> {\n    return this[Share__symbol][ContextKey__symbol];\n  }\n\n  static articlesFor(consumer: ComponentContext): AfterEvent<[ArticleList]> {\n    return this[Share__symbol].articlesFor(consumer);\n  }\n\n  articlesFor(consumer: ComponentContext): AfterEvent<[ArticleList]> {\n    return this.valueFor(consumer).do(\n        mapAfter_((articles?, _sharer?) => articles || noArticles),\n    );\n  }\n\n}\n","import { afterAll, AfterEvent, mapAfter_, supplyAfter, trackValue } from '@proc7ts/fun-events';\nimport { HandleNavLinks, Shared } from '@wesib/generic';\nimport {\n  Attribute,\n  BootstrapWindow,\n  Component,\n  ComponentContext,\n  isElement,\n  StateProperty,\n  statePropertyPathTo,\n} from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { Article } from '../../core/articles';\nimport { AuthService, AuthUser, notAuthenticated, NotAuthenticated } from '../../core/auth';\nimport { RenderHTML } from '../../reusable';\nimport { ArticleButtonsSupport } from '../article/buttons';\nimport { CurrentArticle, CurrentArticleTracker, noArticle, NoArticle } from '../article/current-article';\nimport { CurrentArticleShare } from '../article/current-article.share';\nimport { ArticleListShare } from './article-list.share';\n\n@Component(\n    ['article-preview', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleButtonsSupport,\n        ],\n      },\n    },\n    HandleNavLinks({\n      href(event) {\n\n        let target = event.target as Element;\n\n        for (;;) {\n\n          const href = target.getAttribute('href');\n\n          if (href != null) {\n            return href;\n          }\n\n          const { parentNode } = target;\n\n          if (!parentNode || !isElement(parentNode)) {\n            return;\n          }\n\n          target = parentNode;\n        }\n      },\n    }),\n)\nexport class ArticlePreviewComponent {\n\n  private readonly _slug = trackValue<string>();\n  private readonly _article = new CurrentArticleTracker();\n\n  @StateProperty()\n  user: AuthUser | NotAuthenticated = notAuthenticated;\n\n  @Shared(CurrentArticleShare)\n  readonly currentArticle: AfterEvent<[CurrentArticle]>;\n\n  constructor(private readonly _context: ComponentContext) {\n    this._article.byArticles(afterAll({\n      list: ArticleListShare.articlesFor(_context),\n      slug: this._slug,\n    }).do(\n        mapAfter_(({ list: [list], slug: [slug] }) => slug ? list.bySlug(slug) : noArticle),\n    ));\n    this._article.on((newArticle, oldArticle) => {\n      _context.updateState(\n          statePropertyPathTo('article'),\n          newArticle,\n          oldArticle,\n      );\n    });\n\n    this.currentArticle = this._article.read;\n\n    const authService = _context.get(AuthService);\n\n    authService.user.do(supplyAfter(_context))(user => {\n      this.user = user;\n    }).whenOff(() => {\n      this.user = notAuthenticated;\n    });\n  }\n\n  get slug(): string | undefined {\n    return this._slug.it;\n  }\n\n  @Attribute({ updateState: false })\n  set slug(value: string | undefined) {\n    this._slug.it = value;\n  }\n\n  get article(): Article | NoArticle {\n    return this._article.it;\n  }\n\n  @RenderHTML()\n  postMeta(): Node | undefined {\n    if (!this.article.slug) {\n      return;\n    }\n\n    const { author } = this.article;\n    const { document } = this._context.get(BootstrapWindow);\n    const fragment = document.createDocumentFragment();\n    const meta = fragment.appendChild(document.createElement('div'));\n\n    meta.className = 'post-meta';\n\n    meta.appendChild(document.createElement('conduit-article-author'));\n\n    if (this.user.username === author.username) {\n\n      const editBtn = meta.appendChild(document.createElement('conduit-edit-post-btn'));\n\n      editBtn.tabIndex = 0;\n\n      const deleteBtn = meta.appendChild(document.createElement('conduit-delete-post-btn'));\n\n      deleteBtn.tabIndex = 0;\n    } else {\n\n      const favoriteBtn = meta.appendChild(document.createElement('conduit-favorite-post-btn'));\n\n      favoriteBtn.tabIndex = 0;\n    }\n\n    const previewLink = fragment.appendChild(document.createElement('a'));\n\n    previewLink.className = 'preview-link';\n    previewLink.setAttribute('href', `article/#/${encodeURIComponent(this.article.slug)}`);\n\n    const title = previewLink.appendChild(document.createElement('h1'));\n\n    title.innerText = this.article.title;\n\n    const description = previewLink.appendChild(document.createElement('p'));\n\n    description.innerText = this.article.description;\n\n    const readMore = previewLink.appendChild(document.createElement('span'));\n\n    readMore.innerText = 'Read more...';\n\n    previewLink.appendChild(document.createElement('conduit-article-tags'));\n\n    return fragment;\n  }\n\n}\n","import { BootstrapWindow, Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { ArticleList, noArticles } from '../../core/feed';\nimport { ArticleListShare } from './article-list.share';\nimport { ArticlePreviewComponent } from './article-preview.component';\n\n@Component(\n    ['article-list', Conduit__NS],\n    {\n      feature: {\n        needs: ArticlePreviewComponent,\n      },\n    },\n)\nexport class ArticleListComponent {\n\n  @StateProperty()\n  articles: ArticleList = noArticles;\n\n  constructor(private readonly _context: ComponentContext) {\n    ArticleListShare.articlesFor(_context)(list => {\n      this.articles = list;\n    }).whenOff(() => {\n      this.articles = noArticles;\n    });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.contentRoot);\n\n    return () => {\n      range.deleteContents();\n      if (!this.articles.count) {\n        return;\n      }\n\n      const fragment = document.createDocumentFragment();\n\n      this.articles.list.forEach(article => {\n\n        const previewElt = fragment.appendChild(document.createElement('conduit-article-preview'));\n\n        previewElt.setAttribute('slug', article.slug);\n      });\n\n      range.insertNode(fragment);\n    };\n  }\n\n}\n","import { ContextKey__symbol } from '@proc7ts/context-values';\nimport { AfterEvent, mapAfter_ } from '@proc7ts/fun-events';\nimport { Share, Share__symbol } from '@wesib/generic';\nimport { ComponentContext } from '@wesib/wesib';\nimport { PageFeedParam } from './page-feed-param';\n\nexport class FeedRequestShare extends Share<PageFeedParam> {\n\n  private constructor() {\n    super('feed-request');\n  }\n\n  static readonly [Share__symbol]: FeedRequestShare = new FeedRequestShare();\n\n  static get [ContextKey__symbol](): Share.Key<PageFeedParam> {\n    return this[Share__symbol][ContextKey__symbol];\n  }\n\n  static pageFeedParamFor(consumer: ComponentContext): AfterEvent<[PageFeedParam]> {\n    return this[Share__symbol].pageFeedParamFor(consumer);\n  }\n\n  pageFeedParamFor(consumer: ComponentContext): AfterEvent<[PageFeedParam]> {\n    return this.valueFor(consumer).do(\n        mapAfter_((param?, _sharer?) => param || PageFeedParam),\n    );\n  }\n\n}\n","import { afterAll, supplyAfter } from '@proc7ts/fun-events';\nimport { Navigation } from '@wesib/generic';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { PagingInfo, RenderPager } from '../../reusable';\nimport { ArticleListShare } from './article-list.share';\nimport { FeedRequestShare } from './feed-request.share';\n\n@Component(['feed-pager', Conduit__NS])\nexport class FeedPagerComponent {\n\n  private _feedPaging: PagingInfo = {};\n\n  constructor(context: ComponentContext) {\n\n    const navigation = context.get(Navigation);\n\n    context.whenConnected(() => {\n      afterAll({\n        param: FeedRequestShare.pageFeedParamFor(context),\n        page: navigation,\n        list: ArticleListShare.articlesFor(context),\n      }).do(supplyAfter(context))(\n          ({\n            param: [paramRef],\n            page: [page],\n            list: [{ count }],\n          }) => {\n\n            const param = page.get(paramRef);\n            const { limit = 20, offset = 0 } = param;\n\n            this.feedPaging = {\n              totalPages: Math.ceil(count / limit),\n              currentPage: Math.floor(offset / limit),\n              pageHref(page: number): string {\n                return navigation.with(\n                    paramRef,\n                    { ...param, offset: limit * page },\n                ).pretend()?.url.href || '';\n              },\n            };\n          },\n      );\n    });\n  }\n\n  @RenderPager()\n  get feedPaging(): PagingInfo {\n    return this._feedPaging;\n  }\n\n  set feedPaging(value: PagingInfo) {\n    this._feedPaging = value;\n  }\n\n}\n","import { ContextKey, ContextKey__symbol, SingleContextKey } from '@proc7ts/context-values';\nimport { consumeEvents, mapAfter_, StatePath, trackValue } from '@proc7ts/fun-events';\nimport { noop } from '@proc7ts/primitives';\nimport { Shared } from '@wesib/generic';\nimport {\n  BootstrapWindow,\n  ComponentClass,\n  ComponentContext,\n  ComponentDef,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  ElementRenderer,\n  Render,\n  RenderDef,\n  RenderPath__root,\n} from '@wesib/wesib';\nimport { ApiResponse } from '../../core/api';\nimport { ArticleList, FeedRequest, feedRequestsEqual, FeedService, FeedSupport, noArticles } from '../../core/feed';\nimport { LoadStatus, RenderLoader } from '../../core/loader';\nimport { ArticleListComponent } from './article-list.component';\nimport { ArticleListShare } from './article-list.share';\nimport { FeedPagerComponent } from './feed-pager.component';\nimport { FeedRequestShare } from './feed-request.share';\nimport { PageFeedParam } from './page-feed-param';\n\nconst RenderFeedState__key = (/*#__PURE__*/ new SingleContextKey<RenderFeedState>('render-feed-state'));\nconst RenderFeedState__symbol = (/*#__PURE__*/ Symbol('render-feed-state'));\n\nclass RenderFeedState {\n\n  static get [ContextKey__symbol](): ContextKey<RenderFeedState> {\n    return RenderFeedState__key;\n  }\n\n  readonly response = trackValue<ApiResponse<ArticleList>>();\n  private readonly _request = trackValue<FeedRequest>({});\n\n  constructor(context: ComponentContext, path: StatePath) {\n    context.supply.cuts(this._request);\n\n    const feedService = context.get(FeedService);\n\n    this.response.on((newResponse, oldResponse) => {\n      context.updateState(path, newResponse, oldResponse);\n    });\n\n    context.on('conduit:article')(() => {\n      this._request.it = { ...this._request.it }; // Reload articles\n    });\n\n    context.whenConnected(() => {\n      this._request.read.do(\n          consumeEvents(request => {\n            this.response.it = undefined;\n\n            return feedService.articles(request)(\n                response => this.response.it = response,\n            ).needs(context);\n          }),\n      );\n    });\n  }\n\n  get request(): FeedRequest {\n    return this._request.it;\n  }\n\n  set request(value: FeedRequest) {\n\n    const prevRequest = this.request;\n\n    if (!feedRequestsEqual(value, prevRequest)) {\n      this._request.it = value;\n    }\n  }\n\n}\n\nexport function RenderFeed<T extends ComponentClass>(\n    def: RenderFeedDef = {},\n): ComponentPropertyDecorator<FeedRequest, T> {\n\n  const { requestParam, render: renderOptions } = def;\n\n  return ComponentProperty(({ get, set: setValue, key }) => {\n\n    const path: StatePath = [RenderPath__root, RenderFeedState__symbol, key];\n    const render: RenderDef.Spec = RenderDef.fulfill({ on: path }, renderOptions);\n\n    return {\n      componentDef: ComponentDef.all(\n          {\n            feature: {\n              needs: [\n                ArticleListComponent,\n                FeedPagerComponent,\n                FeedSupport,\n              ],\n            },\n            define(defContext) {\n              defContext.perComponent({\n                a: RenderFeedState,\n                by: (context: ComponentContext) => new RenderFeedState(context, path),\n              });\n            },\n          },\n          RenderLoader({ render, comment: `FEED(${String(key)})` }).By(renderLoader, key),\n          Render(render).As(renderFeed, key),\n          ...(requestParam ? [Shared(FeedRequestShare).As(requestParam, key)] : []),\n          Shared(ArticleListShare).By(\n              component => ComponentContext\n                  .of(component)\n                  .get(RenderFeedState)\n                  .response\n                  .read\n                  .do(\n                      mapAfter_(response => response?.ok ? response.body : noArticles),\n                  ),\n              key,\n          ),\n      ),\n      get,\n      set(component, value) {\n        setValue(component, value);\n        ComponentContext.of(component).get(RenderFeedState).request = value;\n      },\n    };\n\n    function renderLoader(component: InstanceType<T>): LoadStatus | undefined {\n      return ComponentContext.of(component).get(RenderFeedState).response.it;\n    }\n\n    function renderFeed(this: InstanceType<T>): ElementRenderer {\n\n      const context = ComponentContext.of(this);\n      const { contentRoot }: { contentRoot: Node } = context;\n      const document = context.get(BootstrapWindow).document;\n\n      contentRoot.appendChild(document.createElement('conduit-article-list'));\n      contentRoot.appendChild(document.createElement('conduit-feed-pager'));\n\n      return noop;\n    }\n  });\n}\n\nexport interface RenderFeedDef {\n  readonly requestParam?: PageFeedParam;\n  readonly render?: RenderDef.Options;\n}\n"],"names":["PageFeedParam$","PageParam","[object Object]","page","input","handle","this","byDefault","put","searchParams","params","pathname","get","PageHashURLParam","feed","undefined","tag","limit","parseInt","offset","value","url","URL","href","feedRequestSearchParams","toString","search","PageFeedParam","ArticleListShare","Share","super","static","Share__symbol","ContextKey__symbol","consumer","articlesFor","valueFor","do","mapAfter_","articles","_sharer","noArticles","ArticlePreviewComponent","_context","trackValue","CurrentArticleTracker","notAuthenticated","_article","byArticles","afterAll","list","slug","_slug","bySlug","noArticle","on","newArticle","oldArticle","updateState","statePropertyPathTo","currentArticle","read","AuthService","user","supplyAfter","authService","whenOff","it","article","author","document","BootstrapWindow","fragment","createDocumentFragment","meta","appendChild","createElement","className","username","tabIndex","previewLink","setAttribute","encodeURIComponent","innerText","title","description","__decorate","StateProperty","Shared","CurrentArticleShare","Attribute","RenderHTML","Component","Conduit__NS","feature","needs","ArticleButtonsSupport","HandleNavLinks","event","target","getAttribute","parentNode","isElement","ArticleListComponent","range","createRange","selectNodeContents","contentRoot","deleteContents","count","forEach","insertNode","Render","FeedRequestShare","pageFeedParamFor","param","FeedPagerComponent","context","navigation","Navigation","whenConnected","paramRef","feedPaging","totalPages","Math","ceil","currentPage","floor","with","pretend","_feedPaging","RenderPager","RenderFeedState__key","SingleContextKey","RenderFeedState__symbol","Symbol","RenderFeedState","path","supply","cuts","_request","feedService","FeedService","response","newResponse","oldResponse","consumeEvents","request","prevRequest","feedRequestsEqual","RenderFeed","def","requestParam","render","renderOptions","ComponentProperty","set","setValue","key","RenderPath__root","RenderDef","fulfill","componentDef","ComponentDef","all","FeedSupport","defContext","perComponent","a","by","RenderLoader","comment","String","By","component","ComponentContext","of","As","noop","ok","body"],"mappings":"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"}