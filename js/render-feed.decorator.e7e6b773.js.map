{"version":3,"file":"render-feed.decorator.e7e6b773.js","sources":["../../src/pages/home/page-feed-param.ts","../../src/pages/home/article-preview.component.ts","../../src/pages/home/feed-article-list.ts","../../src/pages/home/article-list.component.ts","../../src/pages/home/feed-request-page-param.ts","../../src/pages/home/feed-pager.component.ts","../../src/pages/home/render-feed.decorator.ts"],"sourcesContent":["import { Page, PageHashURLParam, PageParam } from '@wesib/generic';\nimport { FeedRequest, feedRequestSearchParams } from '../../core/feed';\n\nclass PageFeedParam$ extends PageParam<FeedRequest, FeedRequest> {\n\n  create(page: Page, input: FeedRequest): PageParam.Handle<FeedRequest, FeedRequest> {\n\n    const handle = this.byDefault(page);\n\n    handle.put(input);\n\n    return handle;\n  }\n\n  byDefault(page: Page): PageParam.Handle<FeedRequest, FeedRequest> {\n    return {\n      get() {\n\n        const { searchParams: params, pathname } = page.get(PageHashURLParam);\n\n        return {\n          feed: pathname === '/personal-feed' ? pathname : undefined,\n          tag: params.get('tag') || undefined,\n          limit: parseInt(params.get('limit') || '', 10) || undefined,\n          offset: parseInt(params.get('offset') || '', 10) || undefined,\n        };\n      },\n      put(value) {\n\n        const { feed } = value;\n        const url = new URL(page.get(PageHashURLParam).href);\n\n        url.pathname = feed === '/personal-feed' ? feed : '';\n\n        const searchParams = feedRequestSearchParams(value).toString();\n\n        url.search = searchParams ? '?' + searchParams : '';\n\n        page.put(PageHashURLParam, url);\n      },\n    };\n  }\n\n}\n\nexport const PageFeedParam: PageParam.WithDefaults<FeedRequest, FeedRequest> = new PageFeedParam$();\n","import { HandleNavLinks, HierarchyContext } from '@wesib/generic';\nimport { Component, ComponentContext, DomProperty, ElementRenderer, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { Conduit__NS } from '../../core';\nimport { escapeHtml } from '../../core/util';\nimport { ArticleMetaComponentsSupport } from '../article/article-meta-components-support.feature';\nimport { CurrentArticle } from '../article/current-article';\n\n@Component(\n    ['article-preview', Conduit__NS],\n    {\n      feature: {\n        needs: [\n          ArticleMetaComponentsSupport,\n        ],\n      },\n    },\n    HandleNavLinks({\n      href(event) {\n\n        let target = event.target as Element;\n\n        for (;;) {\n\n          const href = target.getAttribute('href');\n\n          if (href != null) {\n            return href;\n          }\n\n          const { parentNode } = target;\n\n          if (!parentNode) {\n            return;\n          }\n          target = parentNode as Element;\n        }\n      },\n    }),\n)\nexport class ArticlePreviewComponent {\n\n  private readonly _article = trackValue<CurrentArticle>({});\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const hierarchy = _context.get(HierarchyContext);\n\n    _context.whenOn(supply => {\n\n      const off = hierarchy.provide({ a: CurrentArticle, is: this._article.read });\n\n      supply.whenOff(off);\n    });\n  }\n\n  get article(): CurrentArticle {\n    return this._article.it;\n  }\n\n  @DomProperty({ propertyKey: 'feedArticle' })\n  set article(value: CurrentArticle) {\n    this._article.it = value;\n  }\n\n  @Render({ offline: true })\n  render(): ElementRenderer | void {\n    if (!this.article.slug) {\n      return;\n    }\n\n    const content = this._context.contentRoot as Element;\n    const postURL = `article/#/${encodeURIComponent(this.article.slug)}`;\n\n    content.innerHTML = `\n<div class=\"post-meta\">\n<conduit-article-author></conduit-article-author>\n<conduit-favorite-post></conduit-favorite-post>\n</div>\n<a href=\"${postURL}\" class=\"preview-link\">\n<h1>${escapeHtml(this.article.title)}</h1>\n<p class=\"post-content\">${escapeHtml(this.article.description)}</p>\n<span>Read more...</span>\n</a>\n`;\n  }\n\n}\n","import { SingleContextUpKey, SingleContextUpRef } from 'context-values/updatable';\nimport { ArticleList } from '../../core/feed';\n\nexport type FeedArticleList = ArticleList;\n\nexport const FeedArticleList: SingleContextUpRef<FeedArticleList> = (\n    /*#__PURE__*/ new SingleContextUpKey<FeedArticleList>(\n        'feed-article-list',\n        {\n          byDefault: () => ({ articles: [], articlesCount: 0 }),\n        },\n    )\n);\n","import { HierarchyContext } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, ElementRenderer, Render, StateProperty } from '@wesib/wesib';\nimport { Conduit__NS } from '../../core';\nimport { ArticlePreviewComponent } from './article-preview.component';\nimport { FeedArticleList } from './feed-article-list';\n\n@Component(\n    ['article-list', Conduit__NS],\n    {\n      feature: {\n        needs: ArticlePreviewComponent,\n      },\n    },\n)\nexport class ArticleListComponent {\n\n  @StateProperty()\n  articles: FeedArticleList = { articles: [], articlesCount: 0 };\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const hierarchy = _context.get(HierarchyContext);\n\n    _context.whenOn(supply => {\n      hierarchy.get(FeedArticleList).tillOff(supply)(list => this.articles = list);\n    });\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.contentRoot);\n\n    return () => {\n      range.deleteContents();\n      if (!this.articles.articlesCount) {\n        return;\n      }\n\n      const fragment = document.createDocumentFragment();\n\n      this.articles.articles.forEach(article => {\n\n        const element: any = fragment.appendChild(document.createElement('conduit-article-preview'));\n\n        element.feedArticle = article;\n      });\n\n      range.insertNode(fragment);\n    };\n  }\n\n}\n","import { PageParam } from '@wesib/generic';\nimport { SingleContextUpKey, SingleContextUpRef } from 'context-values/updatable';\nimport { FeedRequest } from '../../core/feed';\nimport { PageFeedParam } from './page-feed-param';\n\nexport type FeedRequestPageParam = PageParam.WithDefaults<FeedRequest, FeedRequest>;\n\nexport const FeedRequestPageParam: SingleContextUpRef<FeedRequestPageParam> = (\n    /*#__PURE__*/ new SingleContextUpKey<FeedRequestPageParam>(\n        'feed-request-page-param',\n        {\n          byDefault: () => PageFeedParam,\n        },\n    )\n);\n","import { HierarchyContext, Navigation } from '@wesib/generic';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { afterAll } from 'fun-events';\nimport { Conduit__NS } from '../../core';\nimport { PagingInfo, RenderPager } from '../../reusable';\nimport { FeedArticleList } from './feed-article-list';\nimport { FeedRequestPageParam } from './feed-request-page-param';\n\n@Component(['feed-pager', Conduit__NS])\nexport class FeedPagerComponent {\n\n  private _feedPaging: PagingInfo = {};\n\n  constructor(context: ComponentContext) {\n\n    const hierarchy = context.get(HierarchyContext);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n      afterAll({\n        param: hierarchy.get(FeedRequestPageParam),\n        page: navigation,\n        list: hierarchy.get(FeedArticleList),\n      }).tillOff(supply)(\n          ({\n            param: [paramRef],\n            page: [page],\n            list: [{ articlesCount }],\n          }) => {\n\n            const param = page.get(paramRef);\n            const { limit = 20, offset = 0 } = param;\n\n            this.feedPaging = {\n              totalPages: Math.ceil(articlesCount / limit),\n              currentPage: Math.floor(offset / limit),\n              pageHref(page: number): string {\n                return navigation.with(\n                    paramRef,\n                    { ...param, offset: limit * page },\n                ).pretend()?.url.href || '';\n              },\n            };\n          },\n      );\n    });\n  }\n\n  @RenderPager()\n  get feedPaging(): PagingInfo {\n    return this._feedPaging;\n  }\n\n  set feedPaging(value: PagingInfo) {\n    this._feedPaging = value;\n  }\n\n}\n","import { HierarchyContext } from '@wesib/generic';\nimport {\n  BootstrapWindow,\n  ComponentClass,\n  ComponentContext,\n  ComponentDef,\n  ComponentProperty,\n  ComponentPropertyDecorator,\n  ElementRenderer,\n  Render,\n} from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { nextOnEvent, StatePath, trackValue } from 'fun-events';\nimport { ApiResponse } from '../../core/api';\nimport { ArticleList, FeedRequest, feedRequestsEqual, FeedService, FeedSupport } from '../../core/feed';\nimport { LoadStatus, RenderLoader } from '../../core/loader';\nimport { ArticleListComponent } from './article-list.component';\nimport { FeedArticleList } from './feed-article-list';\nimport { FeedPagerComponent } from './feed-pager.component';\nimport { FeedRequestPageParam } from './feed-request-page-param';\n\nconst RenderFeedState__key = (/*#__PURE__*/ new SingleContextKey<RenderFeedState>('render-feed-state'));\nconst RenderFeedState__symbol = (/*#__PURE__*/ Symbol('render-feed-state'));\n\nclass RenderFeedState {\n\n  static get [ContextKey__symbol](): ContextKey<RenderFeedState> {\n    return RenderFeedState__key;\n  }\n\n  readonly response = trackValue<ApiResponse<ArticleList>>();\n  private readonly _request = trackValue<FeedRequest>({});\n\n  constructor(\n      context: ComponentContext,\n      path: StatePath,\n  ) {\n\n    const feedService = context.get(FeedService);\n\n    this.response.on((newResponse, oldResponse) => context.updateState(path, newResponse, oldResponse));\n    context.get(HierarchyContext).provide({\n      a: FeedArticleList,\n      is: this.response.read.keep.thru_(\n          response => response?.ok\n              ? response.body\n              : { articles: [], articlesCount: 0 },\n      ),\n    });\n    context.whenOn(supply => {\n      this._request.read\n          .tillOff(supply)\n          .thru_(\n              request => {\n                this.response.it = undefined;\n                return nextOnEvent(feedService.articles(request));\n              },\n          )(response => this.response.it = response);\n    });\n  }\n\n  get request(): FeedRequest {\n    return this._request.it;\n  }\n\n  set request(value: FeedRequest) {\n\n    const prevRequest = this.request;\n\n    if (!feedRequestsEqual(value, prevRequest)) {\n      this._request.it = value;\n    }\n  }\n\n}\n\nexport function RenderFeed<T extends ComponentClass>(\n    { requestParam }: RenderFeedDef = {},\n): ComponentPropertyDecorator<FeedRequest, T> {\n  return ComponentProperty(({ get, set: setValue, key }) => {\n\n    const path: StatePath = [RenderFeedState__symbol, key];\n\n    return {\n      componentDef: ComponentDef.all(\n          {\n            feature: {\n              needs: [\n                ArticleListComponent,\n                FeedPagerComponent,\n                FeedSupport,\n              ],\n            },\n            define(defContext) {\n              defContext.perComponent({\n                a: RenderFeedState,\n                by: (context: ComponentContext) => new RenderFeedState(context, path),\n              });\n              if (requestParam) {\n                defContext.whenComponent(context => {\n                  context.get(HierarchyContext).provide({ a: FeedRequestPageParam, is: requestParam });\n                });\n              }\n            },\n          },\n          RenderLoader({ path, offline: true, comment: `FEED(${String(key)})` }).By(renderLoader, key),\n          Render({ path, offline: true }).As(renderFeed, key),\n      ),\n      get,\n      set(component, value) {\n        setValue(component, value);\n        ComponentContext.of(component).get(RenderFeedState).request = value;\n      },\n    };\n\n    function renderLoader(component: InstanceType<T>): LoadStatus | undefined {\n      return ComponentContext.of(component).get(RenderFeedState).response.it;\n    }\n\n    function renderFeed(this: InstanceType<T>): ElementRenderer {\n\n      const context = ComponentContext.of(this);\n      const { contentRoot }: { contentRoot: Node } = context;\n      const document = context.get(BootstrapWindow).document;\n\n      contentRoot.appendChild(document.createElement('conduit-article-list'));\n      contentRoot.appendChild(document.createElement('conduit-feed-pager'));\n\n      return noop;\n    }\n  });\n}\n\nexport interface RenderFeedDef {\n  readonly requestParam?: FeedRequestPageParam;\n}\n"],"names":["PageFeedParam","PageParam","[object Object]","page","input","handle","this","byDefault","put","searchParams","params","pathname","get","PageHashURLParam","feed","undefined","tag","limit","parseInt","offset","value","url","URL","href","feedRequestSearchParams","toString","search","ArticlePreviewComponent","_context","trackValue","hierarchy","HierarchyContext","whenOn","supply","off","provide","a","CurrentArticle","is","_article","read","whenOff","article","it","slug","content","contentRoot","postURL","encodeURIComponent","innerHTML","escapeHtml","title","description","__decorate","DomProperty","propertyKey","Render","offline","Component","Conduit__NS","feature","needs","ArticleMetaComponentsSupport","HandleNavLinks","event","target","getAttribute","parentNode","FeedArticleList","SingleContextUpKey","articles","articlesCount","ArticleListComponent","tillOff","list","document","BootstrapWindow","range","createRange","selectNodeContents","deleteContents","fragment","createDocumentFragment","forEach","appendChild","createElement","feedArticle","insertNode","StateProperty","FeedRequestPageParam","FeedPagerComponent","context","navigation","Navigation","afterAll","param","paramRef","feedPaging","totalPages","Math","ceil","currentPage","floor","with","pretend","_feedPaging","RenderPager","RenderFeedState__key","SingleContextKey","RenderFeedState__symbol","Symbol","RenderFeedState","path","feedService","FeedService","response","on","newResponse","oldResponse","updateState","keep","thru_","ok","body","_request","request","nextOnEvent","ContextKey__symbol","prevRequest","feedRequestsEqual","RenderFeed","requestParam","ComponentProperty","set","setValue","key","componentDef","ComponentDef","all","FeedSupport","defContext","perComponent","by","whenComponent","RenderLoader","comment","String","By","component","ComponentContext","of","As","noop"],"mappings":"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"}