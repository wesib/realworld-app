{"version":3,"file":"call-thru.f4f68410.js","sources":["../../../../../proc7ts/call-thru/src/next-call.ts","../../../../../proc7ts/call-thru/src/passes/skip.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * @module @proc7ts/call-thru\n */\nimport { CallChain } from './call-chain';\n\n/**\n * A key of a {@link NextCall} method responsible for calling the next pass in chain.\n */\nexport const NextCall__symbol = (/*#__PURE__*/ Symbol('next-call'));\n\n/**\n * A call of the next pass in chain.\n *\n * This is basically a function with additional method, which is treated specially by call chaining functions.\n * When previous pass in chain returns a {@link NextCall} instance, it will be used to call the next pass in chain.\n * Otherwise the next pass will be called with value returned as its {@link CallChain.pass single argument}.\n *\n * A {@link NextCall} is a function returning itself. So it can be chained like any other pass.\n *\n * A {@link nextCall} function can be used to construct a next call.\n *\n * @typeParam TChain - A type of supported call chain.\n * @typeParam TNextArgs - A type of arguments tuple of the next pass.\n * @typeParam TNextArg - A type of single argument or arguments tuple of the next pass.\n * The same as `TNextArgs` by default.\n */\nexport interface NextCall<TChain extends CallChain, TNextArgs extends any[], TNextArg = TNextArgs> {\n\n  readonly $?: TNextArg; // Silence the TypeScript compiler, as `NextArg` is never read.\n\n  /**\n   * Calls the given pass of the call chain.\n   *\n   * @param chain - Target call chain.\n   * @param pass - A pass in call chain to call.\n   */\n  [NextCall__symbol](\n      chain: TChain,\n      pass: (this: void, ...args: TNextArgs) => void,\n  ): void;\n\n  /**\n   * Returns itself.\n   *\n   * Makes this call a valid no-arg pass of a call chain.\n   */\n  (): this;\n\n}\n\n/**\n * Constructs a call of the next pass in chain.\n *\n * @typeParam TChain - A type of supported call chain.\n * @typeParam TNextArgs - A type of argument tuple of the next pass.\n * @typeParam TNextArg - A type of single argument or arguments tuple of the next pass.\n * The same as `TNextArgs` by default.\n * @param callNext - A next pass caller function.\n *\n * @returns Next pass call performed by the given function.\n */\nexport function nextCall<TChain extends CallChain, TNextArgs extends any[], TNextArg>(\n    callNext: (\n        this: void,\n        chain: TChain,\n        fn: (this: void, ...args: TNextArgs) => void,\n    ) => void,\n): NextCall<TChain, TNextArgs, TNextArg> {\n\n  const result = (() => result) as NextCall<TChain, TNextArgs, TNextArg>;\n\n  result[NextCall__symbol] = (chain, fn) => callNext(chain, fn);\n\n  return result;\n}\n\n/**\n * Checks whether the `target` value is a {@link NextCall next call}.\n *\n * @typeParam TChain - A type of supported call chain.\n * @typeParam TNextArgs - A type of arguments tuple of the next pass.\n * @typeParam TNextArg - A type of single argument or arguments tuple of the next pass.\n * @param target - A value to check.\n *\n * @returns `true` if the `target` value is a function with {@link NextCall__symbol} property, or `false` otherwise.\n */\nexport function isNextCall<TChain extends CallChain, TNextArgs extends any[], TNextArg>(\n    target: unknown,\n): target is NextCall<TChain, TNextArgs, TNextArg> {\n  return typeof target === 'function' && NextCall__symbol in target;\n}\n","/**\n * @packageDocumentation\n * @module @proc7ts/call-thru\n */\nimport { CallChain } from '../call-chain';\nimport { nextCall, NextCall } from '../next-call';\n\n/**\n * A special {@link NextCall} indicating the rest of the steps are skipped.\n *\n * @typeParam TResult - Call chain result type.\n */\nexport type NextSkip<TResult = undefined> = NextCall<CallChain, never, TResult>;\n\n/**\n * Builds a next call that skips the rest of the chain.\n *\n * This has the same effect as {@link nextReturn `nextReturn(undefined)`}.\n */\nexport const nextSkip: NextSkip = (/*#__PURE__*/ nextCall(chain => chain.skip()));\n"],"names":["NextCall__symbol","Symbol","nextCall","callNext","result","chain","fn","isNextCall","target","nextSkip","skip"],"mappings":"MASaA,EAAkCC,OAAO,sBAqDtCC,EACZC,GAOF,MAAMC,MAAgBA,EAItB,OAFAA,EAAOJ,GAAoB,CAACK,EAAOC,IAAOH,EAASE,EAAOC,GAEnDF,WAaOG,EACZC,GAEF,MAAyB,mBAAXA,GAAyBR,KAAoBQ,QCvEhDC,EAAoCP,GAASG,GAASA,EAAMK"}