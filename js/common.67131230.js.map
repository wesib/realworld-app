{"version":3,"file":"common.67131230.js","sources":["../../src/common/auth/auth-service.key.impl.ts","../../src/common/auth/auth-service.ts","../../src/common/api/api-root-url.ts","../../src/common/api/api-fetch.ts","../../src/common/auth/auth-service.impl.ts","../../src/common/auth/auth-support.feature.ts","../../src/common/conduit.ns.ts","../../src/common/layout/main.component.ts","../../src/common/layout/navbar.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/footer.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/conduit.feature.ts","../../src/common/input/bootstrap-css-error.ts","../../src/common/index.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { AuthService } from './auth-service';\n\nexport const AuthService__key = new SingleContextKey<AuthService>('auth-service');\n","import { ContextKey, ContextKey__symbol } from 'context-values';\nimport { AfterEvent, OnEvent } from 'fun-events';\nimport { ApiResponse } from '../api';\nimport { AuthService__key } from './auth-service.key.impl';\nimport { AuthUser } from './auth-user';\n\nexport type AuthUserOrFailure = [] | [AuthUser] | [undefined, ApiResponse.Failure];\n\nexport interface SignInRequest {\n  readonly email: string;\n  readonly password: string;\n}\n\nexport abstract class AuthService {\n\n  static get [ContextKey__symbol](): ContextKey<AuthService> {\n    return AuthService__key;\n  }\n\n  abstract readonly user: AfterEvent<AuthUserOrFailure>;\n\n  abstract signIn(request: SignInRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract signOut(): void;\n\n}\n","import { SingleContextUpKey, SingleContextUpRef } from 'context-values';\n\nexport type ApiRootURL = URL;\n\nexport const ApiRootURL: SingleContextUpRef<ApiRootURL> = new SingleContextUpKey<ApiRootURL>(\n    'api-root-url',\n    {\n      byDefault: () => new URL('https://conduit.productionready.io/api/'),\n    },\n);\n","import { HttpFetch } from '@wesib/generic';\nimport { BootstrapContext, bootstrapDefault } from '@wesib/wesib';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { AfterEvent, afterThe, EventNotifier, OnEvent, onEventBy } from 'fun-events';\nimport { AuthService__key } from '../auth/auth-service.key.impl';\nimport { ApiRootURL } from './api-root-url';\n\n/**\n * Request to some API endpoint.\n */\nexport interface ApiRequest {\n\n  /**\n   * API endpoint path __relative__ to {@link ApiRootURL API root URL}.\n   *\n   * Do not start it with `/` as this would make it absolute.\n   */\n  readonly path: string;\n\n  /**\n   * Additional HTTP request options.\n   */\n  readonly init?: RequestInit;\n\n  /**\n   * Whether to send authentication token.\n   *\n   * - `true` to always send it,\n   * - `false` to never send it,\n   * - `undefined` (the default) - to send it only if {@link AuthService.user current user} is authenticated.\n   */\n  readonly auth?: boolean;\n}\n\nexport type ApiResponse<T = any> =\n    | ApiResponse.Ok<T>\n    | ApiResponse.Failure;\n\nexport namespace ApiResponse {\n\n  export interface Ok<T = any> {\n    readonly ok: true;\n    readonly response: Response;\n    readonly body: T;\n  }\n\n  export interface Failure {\n    readonly ok: false;\n    readonly response?: Response;\n    readonly errors: Errors;\n  }\n\n  export interface Errors {\n    readonly [field: string]: readonly string[];\n  }\n\n}\n\nexport type ApiFetch<T = any> = (this: void, request: ApiRequest) => OnEvent<[ApiResponse<T>]>;\n\nexport const ApiFetch: FnContextRef<[ApiRequest], OnEvent<[ApiResponse]>> = (\n    new FnContextKey<[ApiRequest], OnEvent<[ApiResponse]>>(\n        'api-fetch',\n        {\n          byDefault: bootstrapDefault(newApiFetch),\n        },\n    ));\n\ntype RequestOrFailure =\n    | { request: Request }\n    | { request?: undefined; failure: ApiResponse.Failure };\ntype ResponseOrFailure =\n    | { response: Response }\n    | { response?: undefined; failure: ApiResponse.Failure };\n\nfunction newApiFetch(context: BootstrapContext): ApiFetch {\n\n  const httpFetch = context.get(HttpFetch);\n  const apiRootURL = context.get(ApiRootURL);\n\n  return ({ path, init, auth }) => apiRootURL.thru_(\n      baseURL => new URL(path, baseURL),\n      url => buildApiRequest(url, init),\n  ).dig_(\n      request => auth === false\n          ? afterThe<[RequestOrFailure]>({ request })\n          : authenticateApiRequest(context, request, auth),\n  ).dig_(\n      requestOrFailure => requestOrFailure.request\n          ? httpFetch(requestOrFailure.request).thru_(response => ({ response }))\n          : afterThe<[ResponseOrFailure]>({ failure: requestOrFailure.failure }),\n  ).dig_(\n      handleApiResponse,\n  );\n}\n\nfunction buildApiRequest(url: URL, init: RequestInit = {}): Request {\n\n  const request = new Request(url.href, { mode: 'cors', ...init });\n  const { headers } = request;\n\n  headers.set('X-Requested-With', 'XMLHttpRequest');\n  if (request.body != null && !headers.has('Content-Type')) {\n    headers.set('Content-Type', 'application/json');\n  }\n\n  return request;\n}\n\nfunction authenticateApiRequest(\n    context: BootstrapContext,\n    request: Request,\n    auth?: true,\n): AfterEvent<[RequestOrFailure]> {\n  // Access by key to avoid circular dependencies during the build\n  return context.get(AuthService__key).user.keep.thru_(\n      (user?, failure?) => {\n        if (user) {\n          request.headers.set('Authorization', `Token ${user.token}`);\n          return { request };\n        }\n        if (!auth) {\n          return { request };\n        }\n        if (!failure) {\n          failure = {\n            ok: false,\n            errors: {\n              api: ['Not authenticated'],\n            },\n          };\n        }\n        return { failure };\n      },\n  );\n}\n\nfunction handleApiResponse(responseOfFailure: ResponseOrFailure): OnEvent<[ApiResponse]> {\n  return onEventBy<[ApiResponse]>(receiver => {\n\n    const sender = new EventNotifier<[ApiResponse]>();\n\n    sender.on(receiver);\n\n    if (!responseOfFailure.response) {\n      sender.send(responseOfFailure.failure);\n    } else {\n\n      const { response } = responseOfFailure;\n\n      response.json().then(\n          body => {\n            if (response.ok) {\n              sender.send({\n                ok: true,\n                response,\n                body,\n              });\n            } else {\n              sender.send({\n                ok: false,\n                response,\n                errors: body.errors || {\n                  http: [\n                      response.statusText\n                          ? `${response.status}: ${response.statusText}`\n                          : `ERROR ${response.status}`,\n                  ],\n                },\n              });\n            }\n          },\n      ).catch(\n          error => {\n            sender.send({\n              ok: false,\n              response,\n              errors: {\n                api: [`Failed to parse response: ${error}`],\n              },\n            });\n          },\n      );\n    }\n\n    sender.done();\n  });\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { nextArgs, valuesProvider } from 'call-thru';\nimport { AfterEvent, afterEventBy, afterThe, eventSupply, OnEvent, trackValue, ValueTracker } from 'fun-events';\nimport { ApiFetch, ApiResponse } from '../api';\nimport { AuthService as AuthService_, AuthUserOrFailure, SignInRequest } from './auth-service';\nimport { AuthUser } from './auth-user';\n\nconst authTokenKey = 'wesib-conduit:auth';\ntype Authentication = AuthUser | string | null;\n\nexport class AuthService extends AuthService_ {\n\n  readonly user: AfterEvent<AuthUserOrFailure>;\n  private readonly _auth: ValueTracker<Authentication>;\n\n  constructor(private readonly _context: BootstrapContext) {\n    super();\n\n    const storage = _context.get(BootstrapWindow).localStorage;\n\n    this._auth = trackValue(storage.getItem(authTokenKey));\n    this._auth.on(updateAuthToken);\n    this.user = this._auth.read.keep.dig(authUser);\n\n    function updateAuthToken(newAuth: Authentication): void {\n      if (!newAuth) {\n        storage.removeItem(authTokenKey);\n      } else {\n        storage.setItem(authTokenKey, typeof newAuth === 'string' ? newAuth : newAuth.token);\n      }\n    }\n\n    function authUser(auth: Authentication): AfterEvent<AuthUserOrFailure> {\n      if (!auth) {\n        return afterThe();\n      }\n      if (typeof auth === 'string') {\n        return fetchCurrentUser(auth);\n      }\n      return afterThe(auth);\n    }\n\n    function fetchCurrentUser(token: string): AfterEvent<AuthUserOrFailure> {\n\n      const apiFetch: ApiFetch<AuthUser> = _context.get(ApiFetch);\n\n      return afterEventBy<AuthUserOrFailure>(\n          receiver => {\n            apiFetch({\n              path: 'user',\n              init: {\n                headers: {\n                  Authorization: `Token ${token}`,\n                },\n              },\n              auth: false,\n            }).thru_(\n                (response: ApiResponse<AuthUser>) => {\n                  if (response.ok) {\n                    return nextArgs<AuthUserOrFailure, unknown>(response.body);\n                  }\n                  return nextArgs<AuthUserOrFailure, unknown>(undefined, response);\n                },\n            )({\n              supply: eventSupply().needs(receiver.supply), // Do not abort after user received\n              receive(ctx, ...event) {\n                receiver.receive(ctx, ...event);\n              },\n            });\n          },\n          valuesProvider(),\n      );\n    }\n  }\n\n  signIn(request: SignInRequest): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch<AuthUser> = this._context.get(ApiFetch);\n\n    return apiFetch({\n      path: 'users/login',\n      init: {\n        method: 'POST',\n        body: JSON.stringify(request),\n      },\n      auth: false,\n    }).thru_(\n        response => {\n          if (response.ok) {\n            this._auth.it = response.body;\n          } else {\n            this._auth.it = null;\n          }\n          return response;\n        },\n    );\n  }\n\n  signOut(): void {\n    this._auth.it = null;\n  }\n\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthService } from './auth-service';\nimport { AuthService as AuthService_ } from './auth-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: AuthService, as: AuthService_ });\n  },\n})\nexport class AuthSupport {\n}\n","import { NamespaceDef } from 'namespace-aliaser';\n\nexport const Conduit__NS: NamespaceDef = new NamespaceDef(\n    'https://wesib.github.io/realworld-app/ns/',\n    'conduit',\n);\n","import { IncludePage } from '@wesib/generic';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../conduit.ns';\n\n@Component(\n    ['main', Conduit__NS],\n    IncludePage({\n      onResponse({ response, range }) {\n        if (!response.ok) {\n          range.deleteContents();\n          if (response.ok == null) {\n            range.insertNode(document.createTextNode('Loading...'));\n          } else {\n            range.insertNode(document.createTextNode(`Error. ${response.error}`));\n          }\n        }\n      },\n    }),\n)\nexport class MainComponent {}\n","import { ActivateNavLink, HandleNavLinks } from '@wesib/generic';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../conduit.ns';\n\n@Component(\n    ['navbar', Conduit__NS],\n    HandleNavLinks(),\n    ActivateNavLink({ active: 'active' }),\n)\nexport class NavbarComponent {\n}\n","import { Component, ComponentContext, DefaultNamespaceAliaser, ElementRender, Render } from '@wesib/wesib';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { AuthService, AuthUser } from '../auth';\nimport { Conduit__NS } from '../conduit.ns';\nimport { MainComponent } from './main.component';\nimport { NavbarComponent } from './navbar.component';\n\nconst authenticatedClassQName: QualifiedName = ['authenticated', Conduit__NS];\nconst notAuthenticatedClassQName: QualifiedName = ['not-authenticated', Conduit__NS];\n\n@Component({\n  name: ['container', Conduit__NS],\n  feature: {\n    needs: [MainComponent, NavbarComponent],\n  },\n})\nexport class ContainerComponent {\n\n  private _user?: AuthUser;\n\n  constructor(private readonly _context: ComponentContext) {\n    _context.whenOn(connectSupply => {\n      _context.get(AuthService).user.tillOff(connectSupply)((user?, _failure?) => {\n        this.user = user;\n      });\n    });\n  }\n\n  get user(): AuthUser | undefined {\n    return this._user;\n  }\n\n  set user(value: AuthUser | undefined) {\n\n    const oldValue = this._user;\n\n    this._user = value;\n    this._context.updateState('user', value, oldValue);\n  }\n\n  @Render()\n  render(): ElementRender {\n\n    const nsAlis = this._context.get(DefaultNamespaceAliaser);\n    const authenticatedClass = css__naming.name(authenticatedClassQName, nsAlis);\n    const notAuthenticatedClass = css__naming.name(notAuthenticatedClassQName, nsAlis);\n    const { classList }: Element = this._context.element;\n\n    return () => {\n      if (this.user) {\n        classList.remove(notAuthenticatedClass);\n        classList.add(authenticatedClass);\n      } else {\n        classList.remove(authenticatedClass);\n        classList.add(notAuthenticatedClass);\n      }\n    };\n  }\n\n}\n","import { HandleNavLinks } from '@wesib/generic';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../conduit.ns';\n\n@Component(\n    ['footer', Conduit__NS],\n    HandleNavLinks(),\n)\nexport class FooterComponent {\n}\n","import { Feature } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\nimport { FooterComponent } from './footer.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    FooterComponent,\n  ],\n})\nexport class LayoutSupport {\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthSupport } from './auth';\nimport { LayoutSupport } from './layout';\n\n@Feature({\n  needs: [\n    AuthSupport,\n    LayoutSupport,\n  ],\n})\nexport class ConduitFeature {\n}\n","import { afterThe } from 'fun-events';\nimport { InCssClasses, inCssError, InStatus } from 'input-aspects';\n\nexport function bootstrapCssError(\n    {\n      mark = 'is-invalid',\n      when,\n    }: {\n      mark?: InCssClasses.Spec | InCssClasses.Spec[];\n      when?: string | string[];\n    } = {},\n): InCssClasses.Source {\n  return control => {\n\n    const cssClasses = control.aspect(InCssClasses);\n    const status = control.aspect(InStatus);\n\n    return status.read.keep.dig(\n        ({ touched }) => touched\n            ? cssClasses.specs(inCssError({ mark, when }))\n            : afterThe<InCssClasses.Spec[]>(),\n    );\n  };\n}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { ConduitFeature } from './conduit.feature';\n\nexport * from './api';\nexport * from './auth';\nexport * from './conduit.feature';\nexport * from './conduit.ns';\nexport * from './input';\n\nexport const conduitContext = bootstrapComponents(ConduitFeature);\n"],"names":["AuthService__key","SingleContextKey","AuthService","ContextKey__symbol","ApiRootURL","SingleContextUpKey","byDefault","URL","ApiFetch","FnContextKey","bootstrapDefault","context","httpFetch","get","HttpFetch","apiRootURL","path","init","auth","thru_","baseURL","url","request","Request","href","mode","headers","set","body","has","buildApiRequest","dig_","afterThe","user","keep","failure","token","ok","errors","api","authenticateApiRequest","requestOrFailure","response","handleApiResponse","responseOfFailure","onEventBy","receiver","sender","EventNotifier","on","json","then","send","http","statusText","status","catch","error","done","AuthService_","[object Object]","_context","super","this","storage","BootstrapWindow","localStorage","_auth","trackValue","getItem","newAuth","setItem","removeItem","read","dig","apiFetch","afterEventBy","Authorization","nextArgs","undefined","supply","eventSupply","needs","ctx","event","receive","valuesProvider","fetchCurrentUser","method","JSON","stringify","it","AuthSupport","Feature","setup","provide","a","as","Conduit__NS","NamespaceDef","MainComponent","Component","IncludePage","range","deleteContents","insertNode","document","createTextNode","NavbarComponent","HandleNavLinks","ActivateNavLink","active","authenticatedClassQName","notAuthenticatedClassQName","ContainerComponent","whenOn","connectSupply","tillOff","_failure","_user","value","oldValue","updateState","nsAlis","DefaultNamespaceAliaser","authenticatedClass","css__naming","name","notAuthenticatedClass","classList","element","remove","add","__decorate","Render","feature","FooterComponent","LayoutSupport","ConduitFeature","bootstrapCssError","mark","when","control","cssClasses","aspect","InCssClasses","InStatus","touched","specs","inCssError","conduitContext","bootstrapComponents"],"mappings":"4QAGO,MAAMA,EAAmB,IAAIC,EAA8B,sBCU5CC,EAEpBC,WAAYA,KACV,OAAOH,GCZJ,MAAMI,EAA6C,IAAIC,EAC1D,eACA,CACEC,UAAW,IAAM,IAAIC,IAAI,6CCqDlBC,MACLC,EACA,YACA,CACEH,UAAWI,GAWrB,SAAqBC,GAEnB,MAAMC,EAAYD,EAAQE,IAAIC,GACxBC,EAAaJ,EAAQE,IAAIT,GAE/B,MAAO,EAAGY,KAAAA,EAAMC,KAAAA,EAAMC,KAAAA,KAAWH,EAAWI,MACxCC,GAAW,IAAIb,IAAIS,EAAMI,GACzBC,GAcN,SAAyBA,EAAUJ,EAAoB,IAErD,MAAMK,EAAU,IAAIC,QAAQF,EAAIG,oBAAQC,KAAM,QAAWR,KACnDS,QAAEA,GAAYJ,EAEpBI,EAAQC,IAAI,mBAAoB,kBACZ,MAAhBL,EAAQM,MAAiBF,EAAQG,IAAI,iBACvCH,EAAQC,IAAI,eAAgB,oBAG9B,OAAOL,EAxBIQ,CAAgBT,EAAKJ,IAC9Bc,KACET,IAAoB,IAATJ,EACLc,EAA6B,CAAEV,QAAAA,IAwB3C,SACIX,EACAW,EACAJ,GAGF,OAAOP,EAAQE,IAAIb,GAAkBiC,KAAKC,KAAKf,MAC3C,CAACc,EAAOE,IACFF,GACFX,EAAQI,QAAQC,IAAI,gBAAiB,SAASM,EAAKG,SAC5C,CAAEd,QAAAA,IAENJ,GAGAiB,IACHA,EAAU,CACRE,IAAI,EACJC,OAAQ,CACNC,IAAK,CAAC,wBAIL,CAAEJ,QAAAA,IAVA,CAAEb,QAAAA,IApCPkB,CAAuB7B,EAASW,EAASJ,IACjDa,KACEU,GAAoBA,EAAiBnB,QAC/BV,EAAU6B,EAAiBnB,SAASH,MAAMuB,KAAeA,SAAAA,KACzDV,EAA8B,CAAEG,QAASM,EAAiBN,WAClEJ,KACEY,QA6CN,SAASA,EAAkBC,GACzB,OAAOC,EAAyBC,IAE9B,MAAMC,EAAS,IAAIC,EAInB,GAFAD,EAAOE,GAAGH,GAELF,EAAkBF,SAEhB,CAEL,MAAMA,SAAEA,GAAaE,EAErBF,EAASQ,OAAOC,KACZvB,IACMc,EAASL,GACXU,EAAOK,KAAK,CACVf,IAAI,EACJK,SAAAA,EACAd,KAAAA,IAGFmB,EAAOK,KAAK,CACVf,IAAI,EACJK,SAAAA,EACAJ,OAAQV,EAAKU,QAAU,CACrBe,KAAM,CACFX,EAASY,WACH,GAAGZ,EAASa,WAAWb,EAASY,aAChC,SAASZ,EAASa,eAMtCC,MACEC,IACEV,EAAOK,KAAK,CACVf,IAAI,EACJK,SAAAA,EACAJ,OAAQ,CACNC,IAAK,CAAC,6BAA6BkB,eAjC7CV,EAAOK,KAAKR,EAAkBT,SAwChCY,EAAOW,eC/KExD,UAAoByD,EAK/BC,YAA6BC,GAC3BC,QAD2BC,cAAAF,EAG3B,MAAMG,EAAUH,EAAShD,IAAIoD,GAAiBC,aAE9CH,KAAKI,MAAQC,EAAWJ,EAAQK,QAbf,uBAcjBN,KAAKI,MAAMlB,IAGX,SAAyBqB,GAClBA,EAGHN,EAAQO,QArBK,qBAqBoC,iBAAZD,EAAuBA,EAAUA,EAAQlC,OAF9E4B,EAAQQ,WAnBK,yBAejBT,KAAK9B,KAAO8B,KAAKI,MAAMM,KAAKvC,KAAKwC,KAUjC,SAAkBxD,GAChB,IAAKA,EACH,OAAOc,IAET,GAAoB,iBAATd,EACT,OAKJ,SAA0BkB,GAExB,MAAMuC,EAA+Bd,EAAShD,IAAIL,GAElD,OAAOoE,EACH9B,IACE6B,EAAS,CACP3D,KAAM,OACNC,KAAM,CACJS,QAAS,CACPmD,cAAe,SAASzC,MAG5BlB,MAAM,IACLC,MACEuB,GACKA,EAASL,GACJyC,EAAqCpC,EAASd,MAEhDkD,OAAqCC,EAAWrC,GAb7DiC,CAeE,CACAK,OAAQC,IAAcC,MAAMpC,EAASkC,QACrCpB,QAAQuB,KAAQC,GACdtC,EAASuC,QAAQF,KAAQC,OAI/BE,KAjCKC,CAAiBrE,GAE1B,OAAOc,EAASd,MAoCpB0C,OAAOtC,GAIL,OAFqCyC,KAAKF,SAAShD,IAAIL,EAEhDmE,CAAS,CACd3D,KAAM,cACNC,KAAM,CACJuE,OAAQ,OACR5D,KAAM6D,KAAKC,UAAUpE,IAEvBJ,MAAM,IACLC,MACCuB,IACMA,EAASL,GACX0B,KAAKI,MAAMwB,GAAKjD,EAASd,KAEzBmC,KAAKI,MAAMwB,GAAK,KAEXjD,IAKfkB,UACEG,KAAKI,MAAMwB,GAAK,MAGnB,IC7FYC,EAAb,QAAaA,KALZC,EAAQ,CACPjC,MAAMkC,GACJA,EAAMC,QAAQ,CAAEC,EAAG9F,EAAa+F,GAAItC,QAG3BiC,SCPAM,EAA4B,IAAIC,EACzC,4CACA,WCeJ,IAAaC,EAAb,QAAaA,KAfZC,EACG,CAAC,OAAQH,GACTI,EAAY,CACV1C,YAAWlB,SAAEA,EAAQ6D,MAAEA,IAChB7D,EAASL,KACZkE,EAAMC,iBACa,MAAf9D,EAASL,GACXkE,EAAME,WAAWC,SAASC,eAAe,eAEzCJ,EAAME,WAAWC,SAASC,eAAe,UAAUjE,EAASe,gBAM3D2C,GCVb,IAAaQ,EAAb,QAAaA,KALZP,EACG,CAAC,SAAUH,GACXW,IACAC,EAAgB,CAAEC,OAAQ,aAEjBH,SCFPI,EAAyC,CAAC,gBAAiBd,GAC3De,EAA4C,CAAC,oBAAqBf,GAQxE,IAAagB,EAAb,MAIEtD,YAA6BC,GAAAE,cAAAF,EAC3BA,EAASsD,OAAOC,IACdvD,EAAShD,IAAIX,GAAa+B,KAAKoF,QAAQD,EAAvCvD,CAAsD,CAAC5B,EAAOqF,KAC5DvD,KAAK9B,KAAOA,MAKlBA,WACE,OAAO8B,KAAKwD,MAGdtF,SAASuF,GAEP,MAAMC,EAAW1D,KAAKwD,MAEtBxD,KAAKwD,MAAQC,EACbzD,KAAKF,SAAS6D,YAAY,OAAQF,EAAOC,GAI3C7D,SAEE,MAAM+D,EAAS5D,KAAKF,SAAShD,IAAI+G,GAC3BC,EAAqBC,EAAYC,KAAKf,EAAyBW,GAC/DK,EAAwBF,EAAYC,KAAKd,EAA4BU,IACrEM,UAAEA,GAAuBlE,KAAKF,SAASqE,QAE7C,MAAO,KACDnE,KAAK9B,MACPgG,EAAUE,OAAOH,GACjBC,EAAUG,IAAIP,KAEdI,EAAUE,OAAON,GACjBI,EAAUG,IAAIJ,OAbpBK,GADCC,gCAxBUpB,KANZb,EAAU,CACT0B,KAAM,CAAC,YAAa7B,GACpBqC,QAAS,CACPrD,MAAO,CAACkB,EAAeQ,OAGdM,GCRb,IAAasB,EAAb,QAAaA,KAJZnC,EACG,CAAC,SAAUH,GACXW,MAES2B,GCEb,IAAaC,EAAb,QAAaA,KANZ5C,EAAQ,CACPX,MAAO,CACLgC,EACAsB,MAGSC,GCAb,IAAaC,EAAb,iBCPgBC,GACZC,KACEA,EAAO,aAAYC,KACnBA,GAIE,IAEN,OAAOC,IAEL,MAAMC,EAAaD,EAAQE,OAAOC,GAGlC,OAFeH,EAAQE,OAAOE,GAEhBzE,KAAKvC,KAAKwC,IACpB,EAAGyE,QAAAA,KAAcA,EACXJ,EAAWK,MAAMC,EAAW,CAAET,KAAAA,EAAMC,KAAAA,KACpC7G,MDVD0G,KANZ7C,EAAQ,CACPX,MAAO,CACLU,EACA6C,MAGSC,GCaZ,MCdYY,EAAiBC,EAAoBb"}