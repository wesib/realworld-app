{"version":3,"file":"auth.924b8fbd.js","sources":["../../../src/common/auth/auth-service.key.impl.ts","../../../src/common/auth/auth-service.ts","../../../src/common/auth/auth-service.impl.ts","../../../src/common/auth/auth-support.feature.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { AuthService } from './auth-service';\n\nexport const AuthService__key = new SingleContextKey<AuthService>('auth-service');\n","import { ContextKey, ContextKey__symbol } from 'context-values';\nimport { AfterEvent, OnEvent } from 'fun-events';\nimport { ApiResponse } from '../api';\nimport { AuthService__key } from './auth-service.key.impl';\nimport { Authentication, AuthUser, AuthUserOrFailure } from './authentication';\n\nexport interface LoginRequest {\n  readonly email: string;\n  readonly password: string;\n}\n\nexport interface RegisterRequest {\n  readonly username: string;\n  readonly email: string;\n  readonly password: string;\n}\n\nexport abstract class AuthService {\n\n  static get [ContextKey__symbol](): ContextKey<AuthService> {\n    return AuthService__key;\n  }\n\n  abstract readonly authentication: AfterEvent<[Authentication]>;\n\n  abstract readonly user: AfterEvent<AuthUserOrFailure>;\n\n  abstract login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract register(request: RegisterRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract logout(): void;\n\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { nextArgs, NextCall, valuesProvider } from 'call-thru';\nimport {\n  AfterEvent,\n  afterEventBy,\n  eventSupply,\n  nextOnEvent,\n  OnEvent,\n  OnEventCallChain,\n  trackValue,\n  ValueTracker,\n} from 'fun-events';\nimport { DomEventDispatcher } from 'fun-events/dom';\nimport { ApiFetch, ApiRequest, ApiResponse } from '../api';\nimport { AuthService, LoginRequest, RegisterRequest } from './auth-service';\nimport { Authentication, AuthUser, AuthUserOrFailure } from './authentication';\n\nconst authTokenKey = 'wesib-conduit:auth';\n\nexport class AuthService$ extends AuthService {\n\n  readonly user: AfterEvent<AuthUserOrFailure>;\n  private readonly _auth: ValueTracker<Authentication>;\n\n  get authentication(): AfterEvent<[Authentication]> {\n    return this._auth.read;\n  }\n\n  constructor(private readonly _context: BootstrapContext) {\n    super();\n\n    const window = _context.get(BootstrapWindow);\n    const storage = window.localStorage;\n\n    this._auth = trackValue<Authentication>(toAuthToken(storage.getItem(authTokenKey)));\n    this._auth.on(storeAuthToken);\n    this.user = this.authentication.keep.thru(authUser);\n    new DomEventDispatcher(window).on<StorageEvent>('storage')(({ key, newValue }) => {\n      if (key === authTokenKey) {\n\n        const token = newValue || undefined;\n\n        if (this._auth.it.token !== token) {\n          this._auth.it = toAuthToken(token);\n        }\n      }\n    });\n\n    function storeAuthToken({ token }: Authentication): void {\n      if (token) {\n        storage.setItem(authTokenKey, token);\n      } else {\n        storage.removeItem(authTokenKey);\n      }\n    }\n\n    function authUser(auth: Authentication): NextCall<OnEventCallChain, AuthUserOrFailure> {\n      if (auth.email) {\n        return nextArgs(auth);\n      }\n      if (auth.failure) {\n        return nextArgs(undefined, auth.failure);\n      }\n      if (!auth.token) {\n        return nextArgs();\n      }\n      return nextOnEvent(fetchCurrentUser(auth.token));\n    }\n\n    function fetchCurrentUser(token: string): AfterEvent<AuthUserOrFailure> {\n\n      const apiFetch: ApiFetch = _context.get(ApiFetch);\n      const apiRequest: ApiRequest<AuthUser> = {\n        path: 'user',\n        init: {\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`,\n          },\n        },\n        respondAs: 'user',\n        auth: false,\n      };\n\n      return afterEventBy<AuthUserOrFailure>(\n          receiver => {\n            apiFetch(apiRequest).thru_(\n                (response: ApiResponse<AuthUser>): NextCall<OnEventCallChain, AuthUserOrFailure> => {\n                  if (response.ok) {\n                    return nextArgs(response.body);\n                  }\n                  return nextArgs(undefined, response);\n                },\n            )({\n              supply: eventSupply().needs(receiver.supply), // Do not abort after user received\n              receive(ctx, ...event) {\n                receiver.receive(ctx, ...event);\n              },\n            });\n          },\n          valuesProvider(),\n      );\n    }\n  }\n\n  login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]> {\n    return this._request('users/login', request);\n  }\n\n  register(request: RegisterRequest): OnEvent<[ApiResponse<AuthUser>]> {\n    return this._request('users', request);\n  }\n\n  logout(): void {\n    this._auth.it = {};\n  }\n\n  private _request(path: string, request: LoginRequest | RegisterRequest): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch = this._context.get(ApiFetch);\n    const apiRequest: ApiRequest<AuthUser> = {\n      path,\n      init: {\n        method: 'POST',\n        body: JSON.stringify({ user: request }),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      },\n      respondAs: 'user',\n      auth: false,\n    };\n\n    return apiFetch(apiRequest).thru_(\n        response => {\n          if (response.ok) {\n            this._auth.it = response.body;\n          } else if (response.ok === false) {\n            this._auth.it = { failure: response };\n          }\n          return response;\n        },\n    );\n  }\n\n}\n\nfunction toAuthToken(token: string | null | undefined): Authentication {\n  return token ? { token } : {};\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthService } from './auth-service';\nimport { AuthService$ } from './auth-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: AuthService, as: AuthService$ });\n  },\n})\nexport class AuthSupport {\n}\n"],"names":["AuthService__key","SingleContextKey","AuthService","ContextKey__symbol","AuthService$","[object Object]","_context","super","this","window","get","BootstrapWindow","storage","localStorage","_auth","trackValue","toAuthToken","getItem","on","token","setItem","removeItem","user","authentication","keep","thru","auth","email","nextArgs","failure","undefined","nextOnEvent","apiFetch","ApiFetch","apiRequest","path","init","headers","Accept","Content-Type","Authorization","respondAs","afterEventBy","receiver","thru_","response","ok","body","supply","eventSupply","needs","ctx","event","receive","valuesProvider","fetchCurrentUser","DomEventDispatcher","key","newValue","it","read","request","_request","method","JSON","stringify","AuthSupport","Feature","setup","provide","a","as"],"mappings":"gVAGaA,EAAmB,IAAIC,EAA8B,sBCc5CC,EAEpBC,WAAYA,KACV,OAAOH,SCDEI,UAAqBF,EAShCG,YAA6BC,GAC3BC,QAD2BC,cAAAF,EAG3B,MAAMG,EAASH,EAASI,IAAIC,GACtBC,EAAUH,EAAOI,aAEvBL,KAAKM,MAAQC,EAA2BC,EAAYJ,EAAQK,QAjB3C,wBAkBjBT,KAAKM,MAAMI,IAaX,UAAwBC,MAAEA,IACpBA,EACFP,EAAQQ,QAjCK,qBAiCiBD,GAE9BP,EAAQS,WAnCK,yBAmBjBb,KAAKc,KAAOd,KAAKe,eAAeC,KAAKC,MAoBrC,SAAkBC,GAChB,GAAIA,EAAKC,MACP,OAAOC,EAASF,GAElB,GAAIA,EAAKG,QACP,OAAOD,OAASE,EAAWJ,EAAKG,SAElC,IAAKH,EAAKP,MACR,OAAOS,IAET,OAAOG,EAGT,SAA0BZ,GAExB,MAAMa,EAAqB1B,EAASI,IAAIuB,GAClCC,EAAmC,CACvCC,KAAM,OACNC,KAAM,CACJC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,mBAChBC,cAAe,SAASrB,MAG5BsB,UAAW,OACXf,MAAM,GAGR,OAAOgB,EACHC,IACEX,EAASE,GAAYU,MAChBC,GACKA,EAASC,GACJlB,EAASiB,EAASE,MAEpBnB,OAASE,EAAWe,GALjCb,CAOE,CACAgB,OAAQC,IAAcC,MAAMP,EAASK,QACrC3C,QAAQ8C,KAAQC,GACdT,EAASU,QAAQF,KAAQC,OAI/BE,KAnCeC,CAAiB7B,EAAKP,WA7B3C,IAAIqC,EAAmB/C,GAAQS,GAAiB,UAAhD,CAA2D,EAAGuC,IAAAA,EAAKC,SAAAA,MACjE,GArBe,uBAqBXD,EAAsB,CAExB,MAAMtC,EAAQuC,QAAY5B,EAEtBtB,KAAKM,MAAM6C,GAAGxC,QAAUA,IAC1BX,KAAKM,MAAM6C,GAAK3C,EAAYG,OAnBpCI,qBACE,OAAOf,KAAKM,MAAM8C,KAiFpBvD,MAAMwD,GACJ,OAAOrD,KAAKsD,SAAS,cAAeD,GAGtCxD,SAASwD,GACP,OAAOrD,KAAKsD,SAAS,QAASD,GAGhCxD,SACEG,KAAKM,MAAM6C,GAAK,GAGVtD,SAAS8B,EAAc0B,GAiB7B,OAf2BrD,KAAKF,SAASI,IAAIuB,EAetCD,CAdkC,CACvCG,KAAAA,EACAC,KAAM,CACJ2B,OAAQ,OACRhB,KAAMiB,KAAKC,UAAU,CAAE3C,KAAMuC,IAC7BxB,QAAS,CACPC,OAAQ,mBACRC,eAAgB,qBAGpBE,UAAW,OACXf,MAAM,IAGoBkB,MACxBC,IACMA,EAASC,GACXtC,KAAKM,MAAM6C,GAAKd,EAASE,MACA,IAAhBF,EAASC,KAClBtC,KAAKM,MAAM6C,GAAK,CAAE9B,QAASgB,IAEtBA,KAOjB,SAAS7B,EAAYG,GACnB,OAAOA,EAAQ,CAAEA,MAAAA,GAAU,GAC5B,IC9IY+C,EAAb,QAAaA,KALZC,EAAQ,CACP9D,MAAM+D,GACJA,EAAMC,QAAQ,CAAEC,EAAGpE,EAAaqE,GAAInE,QAG3B8D"}