{"version":3,"file":"common.e7f2daf1.js","sources":["../../src/common/auth/auth-service.key.impl.ts","../../src/common/auth/auth-service.ts","../../src/common/api/api-root-url.ts","../../src/common/api/api-fetch.ts","../../src/common/api/api-submitter.ts","../../src/common/auth/auth-service.impl.ts","../../src/common/auth/auth-support.feature.ts","../../src/common/input/bootstrap-css-error.ts","../../src/common/conduit.ns.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/navbar.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/footer.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/conduit.feature.ts","../../src/common/index.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { AuthService } from './auth-service';\n\nexport const AuthService__key = new SingleContextKey<AuthService>('auth-service');\n","import { ContextKey, ContextKey__symbol } from 'context-values';\nimport { AfterEvent, OnEvent } from 'fun-events';\nimport { ApiResponse } from '../api';\nimport { AuthService__key } from './auth-service.key.impl';\nimport { AuthUser } from './auth-user';\n\nexport type AuthUserOrFailure = [] | [AuthUser] | [undefined, ApiResponse.Failure];\n\nexport interface LoginRequest {\n  readonly email: string;\n  readonly password: string;\n}\n\nexport abstract class AuthService {\n\n  static get [ContextKey__symbol](): ContextKey<AuthService> {\n    return AuthService__key;\n  }\n\n  abstract readonly user: AfterEvent<AuthUserOrFailure>;\n\n  abstract login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]>;\n\n  abstract logout(): void;\n\n}\n","import { SingleContextUpKey, SingleContextUpRef } from 'context-values/updatable';\n\nexport type ApiRootURL = URL;\n\nexport const ApiRootURL: SingleContextUpRef<ApiRootURL> = new SingleContextUpKey<ApiRootURL>(\n    'api-root-url',\n    {\n      byDefault: () => new URL('https://conduit.productionready.io/api/'),\n    },\n);\n","import { HttpFetch } from '@wesib/generic';\nimport { BootstrapContext, bootstrapDefault } from '@wesib/wesib';\nimport { nextArgs, NextCall } from 'call-thru';\nimport { FnContextKey, FnContextRef } from 'context-values/updatable';\nimport { AfterEvent, nextOnEvent, onAsync, OnEvent, OnEventCallChain } from 'fun-events';\nimport { AuthService__key } from '../auth/auth-service.key.impl';\nimport { ApiRootURL } from './api-root-url';\n\n/**\n * Request to some API endpoint.\n */\nexport interface ApiRequest {\n\n  /**\n   * API endpoint path __relative__ to {@link ApiRootURL API root URL}.\n   *\n   * Do not start it with `/` as this would make it absolute.\n   */\n  readonly path: string;\n\n  /**\n   * Additional HTTP request options.\n   */\n  readonly init?: RequestInit;\n\n  /**\n   * Whether to send authentication token.\n   *\n   * - `true` to always send it,\n   * - `false` to never send it,\n   * - `undefined` (the default) - to send it only if {@link AuthService.user current user} is authenticated.\n   */\n  readonly auth?: boolean;\n\n}\n\nexport type ApiResponse<T = any> =\n    | ApiResponse.Ok<T>\n    | ApiResponse.Failure;\n\nexport namespace ApiResponse {\n\n  export interface Ok<T = any> {\n    readonly ok: true;\n    readonly response: Response;\n    readonly body: T;\n  }\n\n  export interface Failure {\n    readonly ok: false;\n    readonly response?: Response;\n    readonly errors: Errors;\n  }\n\n  export type Errors = {\n    readonly [field in string]: readonly string[];\n  };\n\n}\n\nexport type ApiFetch<T = any> = (this: void, request: ApiRequest) => OnEvent<[ApiResponse<T>]>;\n\nexport const ApiFetch: FnContextRef<[ApiRequest], OnEvent<[ApiResponse]>> = (\n    new FnContextKey<[ApiRequest], OnEvent<[ApiResponse]>>(\n        'api-fetch',\n        {\n          byDefault: bootstrapDefault(newApiFetch),\n        },\n    ));\n\ntype RequestOrFailure =\n    | { request: Request }\n    | { request?: undefined; failure: ApiResponse.Failure };\ntype ResponseOrFailure =\n    | { response: Response }\n    | { response?: undefined; failure: ApiResponse.Failure };\ntype ResponseBodyOrFailure =\n    | [{ response: Response }, any]\n    | [{ response?: undefined; failure: ApiResponse.Failure }];\n\nfunction newApiFetch(context: BootstrapContext): ApiFetch {\n\n  const httpFetch = context.get(HttpFetch);\n  const apiRootURL = context.get(ApiRootURL);\n\n  return ({ path, init, auth }) => {\n\n    const onResponse: OnEvent<[ResponseOrFailure]> = apiRootURL.thru_(\n        baseURL => new URL(path, baseURL),\n        url => buildApiRequest(url, init),\n    ).thru_(\n        (request: Request): NextCall<OnEventCallChain, [RequestOrFailure]> => auth === false\n            ? nextArgs({ request })\n            : nextOnEvent(authenticateApiRequest(context, request, auth)),\n        (requestOrFailure): NextCall<OnEventCallChain, [ResponseOrFailure]> => requestOrFailure.request\n            ? nextOnEvent(httpFetch(requestOrFailure.request).thru_(response => ({ response })))\n            : nextArgs({ failure: requestOrFailure.failure }),\n    );\n\n    return onAsync(onResponse.thru_(parseApiResponse))\n        .thru_(([responseOrFailure, json]) => handleApiResponse(responseOrFailure, json));\n  };\n}\n\nfunction buildApiRequest(url: URL, init: RequestInit = {}): Request {\n\n  const request = new Request(url.href, { mode: 'cors', ...init });\n  const { headers } = request;\n\n  headers.set('X-Requested-With', 'XMLHttpRequest');\n\n  return request;\n}\n\nfunction authenticateApiRequest(\n    context: BootstrapContext,\n    request: Request,\n    auth?: true,\n): AfterEvent<[RequestOrFailure]> {\n  // Access by key to avoid circular dependencies during the build\n  return context.get(AuthService__key).user.keep.thru_(\n      (user?, failure?) => {\n        if (user) {\n          request.headers.set('Authorization', `Token ${user.token}`);\n          return { request };\n        }\n        if (!auth) {\n          return { request };\n        }\n        if (!failure) {\n          failure = {\n            ok: false,\n            errors: {\n              api: ['Not authenticated'],\n            },\n          };\n        }\n        return { failure };\n      },\n  );\n}\n\nfunction parseApiResponse(\n    responseOfFailure: ResponseOrFailure,\n): ResponseBodyOrFailure | Promise<ResponseBodyOrFailure> {\n  return responseOfFailure.response\n      ? Promise.all([responseOfFailure, responseOfFailure.response.json()])\n          .catch(error => [{\n            failure: {\n              ok: false,\n              response: responseOfFailure.response,\n              errors: {\n                api: [`Failed to parse response: ${error}`],\n              },\n            },\n          }])\n      : [responseOfFailure];\n}\n\nfunction handleApiResponse(\n    responseOfFailure: ResponseOrFailure,\n    body?: any,\n): ApiResponse {\n  if (!responseOfFailure.response) {\n    return responseOfFailure.failure;\n  }\n\n  const { response } = responseOfFailure;\n\n  if (response.ok) {\n    return {\n      ok: true,\n      response,\n      body,\n    };\n  }\n\n  return {\n    ok: false,\n    response,\n    errors: body.errors || {\n      http: [\n        response.statusText\n            ? `${response.status}: ${response.statusText}`\n            : `ERROR ${response.status}`,\n      ],\n    },\n  };\n}\n","import { BootstrapContext, bootstrapDefault } from '@wesib/wesib';\nimport { FnContextKey, FnContextRef } from 'context-values/updatable';\nimport { OnEvent } from 'fun-events';\nimport { InSubmit, InSubmitError } from 'input-aspects';\nimport { ApiFetch, ApiRequest, ApiResponse } from './api-fetch';\n\nexport type ApiSubmitter<Value = any, Result = any> =\n    (this: void, request: ApiRequest) => InSubmit.Submitter<Value, Result>;\n\nexport const ApiSubmitter: FnContextRef<[ApiRequest], InSubmit.Submitter<any, any>> = (\n    new FnContextKey<[ApiRequest], InSubmit.Submitter<any, any>>(\n        'api-submitter',\n        {\n          byDefault: bootstrapDefault(newApiSubmitter),\n        },\n    ));\n\nfunction newApiSubmitter<Value, Result>(context: BootstrapContext): ApiSubmitter<Value, Result> {\n\n  const apiFetch: ApiFetch<Result> = context.get(ApiFetch);\n\n  return request => {\n\n    const { init = {} } = request;\n    const { method = 'POST', headers = {} } = init;\n\n    return (body: Value) => {\n\n      const apiRequest: ApiRequest = {\n        ...request,\n        init: {\n          ...init,\n          method,\n          body: JSON.stringify(body),\n          headers: {\n            ...headers,\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        },\n      };\n\n      return apiSubmit(apiFetch(apiRequest));\n    };\n  };\n}\n\nexport function apiSubmit<Result>(onFetch: OnEvent<[ApiResponse<Result>]>): Promise<Result> {\n  return new Promise((resolve, reject) => {\n    onFetch.once(\n        (response: ApiResponse) => {\n          if (response.ok) {\n            resolve(response.body);\n          } else {\n            reject(new InSubmitError({ submit: 'api', api: response.errors }));\n          }\n        },\n    ).whenOff(\n        reason => {\n          reject(\n              reason instanceof InSubmitError\n                  ? reason\n                  : new InSubmitError({ submit: 'cancel', cancel: reason }),\n          );\n        },\n    );\n  });\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { nextArgs, NextCall, valuesProvider } from 'call-thru';\nimport {\n  AfterEvent,\n  afterEventBy,\n  eventSupply,\n  nextOnEvent,\n  OnEvent,\n  OnEventCallChain,\n  trackValue,\n  ValueTracker,\n} from 'fun-events';\nimport { ApiFetch, ApiResponse } from '../api';\nimport { AuthService as AuthService_, AuthUserOrFailure, LoginRequest } from './auth-service';\nimport { AuthUser } from './auth-user';\n\nconst authTokenKey = 'wesib-conduit:auth';\ntype Authentication = AuthUser | string | null;\n\nexport class AuthService extends AuthService_ {\n\n  readonly user: AfterEvent<AuthUserOrFailure>;\n  private readonly _auth: ValueTracker<Authentication>;\n\n  constructor(private readonly _context: BootstrapContext) {\n    super();\n\n    const storage = _context.get(BootstrapWindow).localStorage;\n\n    this._auth = trackValue(storage.getItem(authTokenKey));\n    this._auth.on(updateAuthToken);\n    this.user = this._auth.read.keep.thru(authUser);\n\n    function updateAuthToken(newAuth: Authentication): void {\n      if (!newAuth) {\n        storage.removeItem(authTokenKey);\n      } else {\n        storage.setItem(authTokenKey, typeof newAuth === 'string' ? newAuth : newAuth.token);\n      }\n    }\n\n    function authUser(auth: Authentication): NextCall<OnEventCallChain, AuthUserOrFailure> {\n      if (!auth) {\n        return nextArgs();\n      }\n      if (typeof auth === 'string') {\n        return nextOnEvent(fetchCurrentUser(auth));\n      }\n      return nextArgs(auth);\n    }\n\n    function fetchCurrentUser(token: string): AfterEvent<AuthUserOrFailure> {\n\n      const apiFetch: ApiFetch<AuthUser> = _context.get(ApiFetch);\n\n      return afterEventBy<AuthUserOrFailure>(\n          receiver => {\n            apiFetch({\n              path: 'user',\n              init: {\n                headers: {\n                  Authorization: `Token ${token}`,\n                },\n              },\n              auth: false,\n            }).thru_(\n                (response: ApiResponse<AuthUser>): NextCall<OnEventCallChain, AuthUserOrFailure> => {\n                  if (response.ok) {\n                    return nextArgs(response.body);\n                  }\n                  return nextArgs(undefined, response);\n                },\n            )({\n              supply: eventSupply().needs(receiver.supply), // Do not abort after user received\n              receive(ctx, ...event) {\n                receiver.receive(ctx, ...event);\n              },\n            });\n          },\n          valuesProvider(),\n      );\n    }\n  }\n\n  login(request: LoginRequest): OnEvent<[ApiResponse<AuthUser>]> {\n\n    const apiFetch: ApiFetch<AuthUser> = this._context.get(ApiFetch);\n\n    return apiFetch({\n      path: 'users/login',\n      init: {\n        method: 'POST',\n        body: JSON.stringify(request),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      },\n      auth: false,\n    }).thru_(\n        response => {\n          if (response.ok) {\n            this._auth.it = response.body;\n          } else {\n            this._auth.it = null;\n          }\n          return response;\n        },\n    );\n  }\n\n  logout(): void {\n    this._auth.it = null;\n  }\n\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthService } from './auth-service';\nimport { AuthService as AuthService_ } from './auth-service.impl';\n\n@Feature({\n  setup(setup) {\n    setup.provide({ a: AuthService, as: AuthService_ });\n  },\n})\nexport class AuthSupport {\n}\n","import { nextArgs } from 'call-thru';\nimport { afterAll, nextAfterEvent } from 'fun-events';\nimport { InCssClasses, inCssError, InStatus, InValidation } from 'input-aspects';\n\nexport function bootstrapCssError(\n    {\n      mark = 'is-invalid',\n      when,\n    }: {\n      mark?: InCssClasses.Spec | InCssClasses.Spec[];\n      when?: string | string[];\n    } = {},\n): InCssClasses.Source {\n  return control => {\n\n    const cssClasses = control.aspect(InCssClasses);\n\n    return afterAll({\n      status: control.aspect(InStatus),\n      validity: control.aspect(InValidation),\n    }).keep.thru(\n        ({\n          status: [{ touched, hasFocus }],\n          validity: [validity],\n        }) => {\n\n          const incomplete = validity.has('incomplete') || validity.has('missing');\n\n          return touched && !(hasFocus && incomplete)\n              ? nextAfterEvent(cssClasses.specs(inCssError({ mark, when })))\n              : nextArgs();\n        },\n    );\n  };\n}\n","import { NamespaceDef } from 'namespace-aliaser';\n\nexport const Conduit__NS: NamespaceDef = new NamespaceDef(\n    'https://wesib.github.io/realworld-app/ns/',\n    'conduit',\n);\n","import { ConvertInput } from '@wesib/generic/input';\nimport { Attributes, Component, trackAttribute } from '@wesib/wesib';\nimport { AfterEvent } from 'fun-events';\nimport { InCssClasses, inCssInfo, InStyledElement } from 'input-aspects';\nimport { Conduit__NS } from '../conduit.ns';\nimport { bootstrapCssError } from './bootstrap-css-error';\n\n@Component(\n    ['in-error', Conduit__NS],\n    Attributes('code'),\n    ConvertInput(\n        ({ control: { control }, aspects, context }) => {\n\n          const codes: AfterEvent<[string[]]> = trackAttribute(context, 'code')\n              .read.keep.thru_(\n                  code => code ? code.trim().split(/\\s+/) : [],\n              );\n\n          return codes.keep.thru(\n              when => control.convert(\n                  InStyledElement.to(context.element),\n                  aspects,\n              ).setup(\n                  InCssClasses,\n                  cssClasses => {\n                    cssClasses.add(inCssInfo());\n                    cssClasses.add(bootstrapCssError({ when }));\n                  },\n              ),\n          );\n        },\n    ),\n)\nexport class InErrorComponent {}\n","import { Feature } from '@wesib/wesib';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: InErrorComponent,\n})\nexport class InputSupport {\n}\n","import { IncludePage } from '@wesib/generic';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../conduit.ns';\n\n@Component(\n    ['main', Conduit__NS],\n    IncludePage({\n      onResponse({ response, range }) {\n        if (!response.ok) {\n          range.deleteContents();\n          if (response.ok == null) {\n            range.insertNode(document.createTextNode('Loading...'));\n          } else {\n            range.insertNode(document.createTextNode(`Error. ${response.error}`));\n          }\n        }\n      },\n    }),\n)\nexport class MainComponent {}\n","import { ActivateNavLink, HandleNavLinks } from '@wesib/generic';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../conduit.ns';\n\n@Component(\n    ['navbar', Conduit__NS],\n    HandleNavLinks(),\n    ActivateNavLink({ active: 'active' }),\n)\nexport class NavbarComponent {\n}\n","import { Component, ComponentContext, DefaultNamespaceAliaser, ElementRender, Render } from '@wesib/wesib';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { AuthService, AuthUser } from '../auth';\nimport { Conduit__NS } from '../conduit.ns';\nimport { MainComponent } from './main.component';\nimport { NavbarComponent } from './navbar.component';\n\nconst authenticatedClassQName: QualifiedName = ['authenticated', Conduit__NS];\nconst notAuthenticatedClassQName: QualifiedName = ['not-authenticated', Conduit__NS];\n\n@Component({\n  name: ['container', Conduit__NS],\n  feature: {\n    needs: [MainComponent, NavbarComponent],\n  },\n})\nexport class ContainerComponent {\n\n  private _user?: AuthUser;\n\n  constructor(private readonly _context: ComponentContext) {\n    _context.whenOn(connectSupply => {\n      _context.get(AuthService).user.tillOff(connectSupply)((user?, _failure?) => {\n        this.user = user;\n      });\n    });\n  }\n\n  get user(): AuthUser | undefined {\n    return this._user;\n  }\n\n  set user(value: AuthUser | undefined) {\n\n    const oldValue = this._user;\n\n    this._user = value;\n    this._context.updateState('user', value, oldValue);\n  }\n\n  @Render()\n  render(): ElementRender {\n\n    const nsAlis = this._context.get(DefaultNamespaceAliaser);\n    const authenticatedClass = css__naming.name(authenticatedClassQName, nsAlis);\n    const notAuthenticatedClass = css__naming.name(notAuthenticatedClassQName, nsAlis);\n    const { classList }: Element = this._context.element;\n\n    return () => {\n      if (this.user) {\n        classList.remove(notAuthenticatedClass);\n        classList.add(authenticatedClass);\n      } else {\n        classList.remove(authenticatedClass);\n        classList.add(notAuthenticatedClass);\n      }\n    };\n  }\n\n}\n","import { HandleNavLinks } from '@wesib/generic';\nimport { Component } from '@wesib/wesib';\nimport { Conduit__NS } from '../conduit.ns';\n\n@Component(\n    ['footer', Conduit__NS],\n    HandleNavLinks(),\n)\nexport class FooterComponent {\n}\n","import { Feature } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\nimport { FooterComponent } from './footer.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    FooterComponent,\n  ],\n})\nexport class LayoutSupport {\n}\n","import { Feature } from '@wesib/wesib';\nimport { AuthSupport } from './auth';\nimport { InputSupport } from './input';\nimport { LayoutSupport } from './layout';\n\n@Feature({\n  needs: [\n    AuthSupport,\n    InputSupport,\n    LayoutSupport,\n  ],\n})\nexport class ConduitFeature {\n}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { ConduitFeature } from './conduit.feature';\n\nexport * from './api';\nexport * from './auth';\nexport * from './conduit.feature';\nexport * from './conduit.ns';\nexport * from './input';\n\nexport const conduitContext = bootstrapComponents(ConduitFeature);\n"],"names":["AuthService__key","SingleContextKey","AuthService","ContextKey__symbol","ApiRootURL","SingleContextUpKey","byDefault","URL","ApiFetch","FnContextKey","bootstrapDefault","context","httpFetch","get","HttpFetch","apiRootURL","path","init","auth","onResponse","thru_","baseURL","url","request","Request","href","mode","headers","set","buildApiRequest","nextArgs","nextOnEvent","user","keep","failure","token","ok","errors","api","authenticateApiRequest","requestOrFailure","response","onAsync","parseApiResponse","responseOrFailure","json","responseOfFailure","body","http","statusText","status","handleApiResponse","Promise","all","catch","error","apiFetch","method","apiRequest","JSON","stringify","Accept","Content-Type","apiSubmit","onFetch","resolve","reject","once","InSubmitError","submit","whenOff","reason","cancel","AuthService_","[object Object]","_context","super","this","storage","BootstrapWindow","localStorage","_auth","trackValue","getItem","on","newAuth","setItem","removeItem","read","thru","afterEventBy","receiver","Authorization","undefined","supply","eventSupply","needs","ctx","event","receive","valuesProvider","fetchCurrentUser","it","AuthSupport","bootstrapCssError","mark","when","control","cssClasses","aspect","InCssClasses","afterAll","InStatus","validity","InValidation","touched","hasFocus","incomplete","has","nextAfterEvent","specs","inCssError","Feature","setup","provide","a","as","Conduit__NS","NamespaceDef","InErrorComponent","Component","Attributes","ConvertInput","aspects","trackAttribute","code","trim","split","convert","InStyledElement","to","element","add","inCssInfo","InputSupport","MainComponent","IncludePage","range","deleteContents","insertNode","document","createTextNode","NavbarComponent","HandleNavLinks","ActivateNavLink","active","authenticatedClassQName","notAuthenticatedClassQName","ContainerComponent","whenOn","connectSupply","tillOff","_failure","_user","value","oldValue","updateState","nsAlis","DefaultNamespaceAliaser","authenticatedClass","css__naming","name","notAuthenticatedClass","classList","remove","__decorate","Render","feature","FooterComponent","LayoutSupport","ConduitFeature","conduitContext","bootstrapComponents"],"mappings":"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"}